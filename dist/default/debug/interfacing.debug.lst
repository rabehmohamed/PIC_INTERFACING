

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 22 05:15:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00FAF8                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_register
    64   00FAF8  80                 	db	128
    65   00FAF9  0F                 	db	15
    66   00FAFA  81                 	db	129
    67   00FAFB  0F                 	db	15
    68   00FAFC  82                 	db	130
    69   00FAFD  0F                 	db	15
    70   00FAFE  83                 	db	131
    71   00FAFF  0F                 	db	15
    72   00FB00  84                 	db	132
    73   00FB01  0F                 	db	15
    74                           
    75                           ;initializer for _lat_register
    76   00FB02  89                 	db	137
    77   00FB03  0F                 	db	15
    78   00FB04  8A                 	db	138
    79   00FB05  0F                 	db	15
    80   00FB06  8B                 	db	139
    81   00FB07  0F                 	db	15
    82   00FB08  8C                 	db	140
    83   00FB09  0F                 	db	15
    84   00FB0A  8D                 	db	141
    85   00FB0B  0F                 	db	15
    86                           
    87                           ;initializer for _tris_register
    88   00FB0C  92                 	db	146
    89   00FB0D  0F                 	db	15
    90   00FB0E  93                 	db	147
    91   00FB0F  0F                 	db	15
    92   00FB10  94                 	db	148
    93   00FB11  0F                 	db	15
    94   00FB12  95                 	db	149
    95   00FB13  0F                 	db	15
    96   00FB14  96                 	db	150
    97   00FB15  0F                 	db	15
    98                           
    99                           ;initializer for _dc_motor_2
   100   00FB16  12                 	db	18
   101   00FB17  1A                 	db	26
   102                           
   103                           ;initializer for _dc_motor_1
   104   00FB18  02                 	db	2
   105   00FB19  0A                 	db	10
   106                           
   107                           	psect	nvCOMRAM
   108   00003E                     __pnvCOMRAM:
   109                           	callstack 0
   110   00003E                     _ret:
   111                           	callstack 0
   112   00003E                     	ds	1
   113   000000                     _PORTE	set	3972
   114   000000                     _PORTD	set	3971
   115   000000                     _PORTC	set	3970
   116   000000                     _PORTB	set	3969
   117   000000                     _PORTA	set	3968
   118   000000                     _LATA	set	3977
   119   000000                     _TRISA	set	3986
   120   000000                     _TRISE	set	3990
   121   000000                     _TRISD	set	3989
   122   000000                     _TRISC	set	3988
   123   000000                     _TRISB	set	3987
   124   000000                     _LATE	set	3981
   125   000000                     _LATD	set	3980
   126   000000                     _LATC	set	3979
   127   000000                     _LATB	set	3978
   128                           
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   00FB1A                     __pcinit:
   133                           	callstack 0
   134   00FB1A                     start_initialization:
   135                           	callstack 0
   136   00FB1A                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (34 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141   00FB1A  0EF8               	movlw	low __pidataCOMRAM
   142   00FB1C  6EF6               	movwf	tblptrl,c
   143   00FB1E  0EFA               	movlw	high __pidataCOMRAM
   144   00FB20  6EF7               	movwf	tblptrh,c
   145   00FB22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146   00FB24  6EF8               	movwf	tblptru,c
   147   00FB26  EE00  F001         	lfsr	0,__pdataCOMRAM
   148   00FB2A  EE10 F022          	lfsr	1,34
   149   00FB2E                     copy_data0:
   150   00FB2E  0009               	tblrd		*+
   151   00FB30  CFF5 FFEE          	movff	tablat,postinc0
   152   00FB34  50E5               	movf	postdec1,w,c
   153   00FB36  50E1               	movf	fsr1l,w,c
   154   00FB38  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (8 bytes)
   157   00FB3A  EE00  F036         	lfsr	0,__pbssCOMRAM
   158   00FB3E  0E08               	movlw	8
   159   00FB40                     clear_0:
   160   00FB40  6AEE               	clrf	postinc0,c
   161   00FB42  06E8               	decf	wreg,f,c
   162   00FB44  E1FD               	bnz	clear_0
   163   00FB46                     end_of_initialization:
   164                           	callstack 0
   165   00FB46                     __end_of__initialization:
   166                           	callstack 0
   167   00FB46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   00FB48  6EF8               	movwf	tblptru,c
   169   00FB4A  0100               	movlb	0
   170   00FB4C  EF66  F07E         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   000036                     __pbssCOMRAM:
   174                           	callstack 0
   175   000036                     relay_toggle@F2571:
   176                           	callstack 0
   177   000036                     	ds	1
   178   000037                     relay_turn_off@F2566:
   179                           	callstack 0
   180   000037                     	ds	1
   181   000038                     relay_turn_on@F2561:
   182                           	callstack 0
   183   000038                     	ds	1
   184   000039                     relay_initialize@F2556:
   185                           	callstack 0
   186   000039                     	ds	1
   187   00003A                     led_toggle@F2575:
   188                           	callstack 0
   189   00003A                     	ds	1
   190   00003B                     led_turn_off@F2570:
   191                           	callstack 0
   192   00003B                     	ds	1
   193   00003C                     led_turn_on@F2565:
   194                           	callstack 0
   195   00003C                     	ds	1
   196   00003D                     led_initialize@F2560:
   197                           	callstack 0
   198   00003D                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201   000001                     __pdataCOMRAM:
   202                           	callstack 0
   203   000001                     _port_register:
   204                           	callstack 0
   205   000001                     	ds	10
   206   00000B                     _lat_register:
   207                           	callstack 0
   208   00000B                     	ds	10
   209   000015                     _tris_register:
   210                           	callstack 0
   211   000015                     	ds	10
   212   00001F                     _dc_motor_2:
   213                           	callstack 0
   214   00001F                     	ds	2
   215   000021                     _dc_motor_1:
   216                           	callstack 0
   217   000021                     	ds	2
   218                           
   219                           	psect	cstackCOMRAM
   220   000023                     __pcstackCOMRAM:
   221                           	callstack 0
   222   000023                     gpio_pin_direction_initialize@pin_config:
   223                           	callstack 0
   224   000023                     gpio_pin_write_logic@pin_config:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228   000023                     	ds	2
   229   000025                     ??_gpio_pin_direction_initialize:
   230   000025                     gpio_pin_write_logic@logic:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x2
   234   000025                     	ds	1
   235   000026                     ??_gpio_pin_write_logic:
   236                           
   237                           ; 1 bytes @ 0x3
   238   000026                     	ds	5
   239   00002B                     gpio_pin_direction_initialize@ret:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x8
   243   00002B                     	ds	1
   244   00002C                     gpio_pin_write_logic@ret:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x9
   248   00002C                     	ds	1
   249   00002D                     gpio_pin_initialize@pin_config:
   250                           	callstack 0
   251   00002D                     dc_motor_move_right@motor:
   252                           	callstack 0
   253   00002D                     dc_motor_move_left@motor:
   254                           	callstack 0
   255   00002D                     dc_motor_stop@motor:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0xA
   259   00002D                     	ds	2
   260   00002F                     ??_gpio_pin_initialize:
   261   00002F                     dc_motor_move_right@ret:
   262                           	callstack 0
   263   00002F                     dc_motor_move_left@ret:
   264                           	callstack 0
   265   00002F                     dc_motor_stop@ret:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xC
   269   00002F                     	ds	1
   270   000030                     gpio_pin_initialize@ret:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0xD
   274   000030                     	ds	1
   275   000031                     dc_motor_initialize@motor:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xE
   279   000031                     	ds	2
   280   000033                     dc_motor_initialize@ret:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x10
   284   000033                     	ds	1
   285   000034                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x11
   288   000034                     	ds	2
   289                           
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 43 in file "application.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  2  193[None  ] int 
   302 ;; Registers used:
   303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;Total ram usage:        2 bytes
   314 ;; Hardware stack levels required when called: 4
   315 ;; This function calls:
   316 ;;		_application_initialize
   317 ;;		_dc_motor_move_left
   318 ;;		_dc_motor_move_right
   319 ;;		_dc_motor_stop
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text0
   326   00FCCC                     __ptext0:
   327                           	callstack 0
   328   00FCCC                     _main:
   329                           	callstack 27
   330   00FCCC                     
   331                           ;application.c: 45:     application_initialize();
   332   00FCCC  EC6D  F07D         	call	_application_initialize	;wreg free
   333   00FCD0                     l194:
   334                           
   335                           ;application.c: 49:         ret = dc_motor_move_right(&dc_motor_1);
   336   00FCD0  0E21               	movlw	low _dc_motor_1
   337   00FCD2  6E2D               	movwf	dc_motor_move_right@motor^0,c
   338   00FCD4  0E00               	movlw	high _dc_motor_1
   339   00FCD6  6E2E               	movwf	(dc_motor_move_right@motor+1)^0,c
   340   00FCD8  ECEA  F07D         	call	_dc_motor_move_right	;wreg free
   341   00FCDC  6E3E               	movwf	_ret^0,c
   342                           
   343                           ;application.c: 50:         ret = dc_motor_move_right(&dc_motor_2);
   344   00FCDE  0E1F               	movlw	low _dc_motor_2
   345   00FCE0  6E2D               	movwf	dc_motor_move_right@motor^0,c
   346   00FCE2  0E00               	movlw	high _dc_motor_2
   347   00FCE4  6E2E               	movwf	(dc_motor_move_right@motor+1)^0,c
   348   00FCE6  ECEA  F07D         	call	_dc_motor_move_right	;wreg free
   349   00FCEA  6E3E               	movwf	_ret^0,c
   350   00FCEC                     
   351                           ;application.c: 51:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   352   00FCEC  0E1F               	movlw	31
   353   00FCEE  6E35               	movwf	(??_main+1)^0,c
   354   00FCF0  0E71               	movlw	113
   355   00FCF2  6E34               	movwf	??_main^0,c
   356   00FCF4  0E1E               	movlw	30
   357   00FCF6                     u807:
   358   00FCF6  2EE8               	decfsz	wreg,f,c
   359   00FCF8  D7FE               	bra	u807
   360   00FCFA  2E34               	decfsz	??_main^0,f,c
   361   00FCFC  D7FC               	bra	u807
   362   00FCFE  2E35               	decfsz	(??_main+1)^0,f,c
   363   00FD00  D7FA               	bra	u807
   364   00FD02  D000               	nop2	
   365   00FD04                     
   366                           ;application.c: 52:         ret = dc_motor_move_left(&dc_motor_1);
   367   00FD04  0E21               	movlw	low _dc_motor_1
   368   00FD06  6E2D               	movwf	dc_motor_move_left@motor^0,c
   369   00FD08  0E00               	movlw	high _dc_motor_1
   370   00FD0A  6E2E               	movwf	(dc_motor_move_left@motor+1)^0,c
   371   00FD0C  ECC7  F07D         	call	_dc_motor_move_left	;wreg free
   372   00FD10  6E3E               	movwf	_ret^0,c
   373   00FD12                     
   374                           ;application.c: 53:         ret = dc_motor_move_left(&dc_motor_2);
   375   00FD12  0E1F               	movlw	low _dc_motor_2
   376   00FD14  6E2D               	movwf	dc_motor_move_left@motor^0,c
   377   00FD16  0E00               	movlw	high _dc_motor_2
   378   00FD18  6E2E               	movwf	(dc_motor_move_left@motor+1)^0,c
   379   00FD1A  ECC7  F07D         	call	_dc_motor_move_left	;wreg free
   380   00FD1E  6E3E               	movwf	_ret^0,c
   381   00FD20                     
   382                           ;application.c: 54:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   383   00FD20  0E1F               	movlw	31
   384   00FD22  6E35               	movwf	(??_main+1)^0,c
   385   00FD24  0E71               	movlw	113
   386   00FD26  6E34               	movwf	??_main^0,c
   387   00FD28  0E1E               	movlw	30
   388   00FD2A                     u817:
   389   00FD2A  2EE8               	decfsz	wreg,f,c
   390   00FD2C  D7FE               	bra	u817
   391   00FD2E  2E34               	decfsz	??_main^0,f,c
   392   00FD30  D7FC               	bra	u817
   393   00FD32  2E35               	decfsz	(??_main+1)^0,f,c
   394   00FD34  D7FA               	bra	u817
   395   00FD36  D000               	nop2	
   396                           
   397                           ;application.c: 55:         ret = dc_motor_stop(&dc_motor_1);
   398   00FD38  0E21               	movlw	low _dc_motor_1
   399   00FD3A  6E2D               	movwf	dc_motor_stop@motor^0,c
   400   00FD3C  0E00               	movlw	high _dc_motor_1
   401   00FD3E  6E2E               	movwf	(dc_motor_stop@motor+1)^0,c
   402   00FD40  EC0D  F07E         	call	_dc_motor_stop	;wreg free
   403   00FD44  6E3E               	movwf	_ret^0,c
   404                           
   405                           ;application.c: 56:         ret = dc_motor_stop(&dc_motor_2);
   406   00FD46  0E1F               	movlw	low _dc_motor_2
   407   00FD48  6E2D               	movwf	dc_motor_stop@motor^0,c
   408   00FD4A  0E00               	movlw	high _dc_motor_2
   409   00FD4C  6E2E               	movwf	(dc_motor_stop@motor+1)^0,c
   410   00FD4E  EC0D  F07E         	call	_dc_motor_stop	;wreg free
   411   00FD52  6E3E               	movwf	_ret^0,c
   412   00FD54                     
   413                           ;application.c: 57:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   414   00FD54  0E1F               	movlw	31
   415   00FD56  6E35               	movwf	(??_main+1)^0,c
   416   00FD58  0E71               	movlw	113
   417   00FD5A  6E34               	movwf	??_main^0,c
   418   00FD5C  0E1E               	movlw	30
   419   00FD5E                     u827:
   420   00FD5E  2EE8               	decfsz	wreg,f,c
   421   00FD60  D7FE               	bra	u827
   422   00FD62  2E34               	decfsz	??_main^0,f,c
   423   00FD64  D7FC               	bra	u827
   424   00FD66  2E35               	decfsz	(??_main+1)^0,f,c
   425   00FD68  D7FA               	bra	u827
   426   00FD6A  D000               	nop2	
   427   00FD6C                     
   428                           ;application.c: 58:         ret = dc_motor_move_right(&dc_motor_1);
   429   00FD6C  0E21               	movlw	low _dc_motor_1
   430   00FD6E  6E2D               	movwf	dc_motor_move_right@motor^0,c
   431   00FD70  0E00               	movlw	high _dc_motor_1
   432   00FD72  6E2E               	movwf	(dc_motor_move_right@motor+1)^0,c
   433   00FD74  ECEA  F07D         	call	_dc_motor_move_right	;wreg free
   434   00FD78  6E3E               	movwf	_ret^0,c
   435   00FD7A                     
   436                           ;application.c: 59:         ret = dc_motor_move_left(&dc_motor_2);
   437   00FD7A  0E1F               	movlw	low _dc_motor_2
   438   00FD7C  6E2D               	movwf	dc_motor_move_left@motor^0,c
   439   00FD7E  0E00               	movlw	high _dc_motor_2
   440   00FD80  6E2E               	movwf	(dc_motor_move_left@motor+1)^0,c
   441   00FD82  ECC7  F07D         	call	_dc_motor_move_left	;wreg free
   442   00FD86  6E3E               	movwf	_ret^0,c
   443   00FD88  EF68  F07E         	goto	l194
   444   00FD8C  EF00  F000         	goto	start
   445   00FD90                     __end_of_main:
   446                           	callstack 0
   447                           
   448 ;; *************** function _dc_motor_stop *****************
   449 ;; Defined at:
   450 ;;		line 67 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  motor           2   10[COMRAM] PTR const struct .
   453 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  ret             1   12[COMRAM] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      unsigned char 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 1
   472 ;; This function calls:
   473 ;;		_gpio_pin_write_logic
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480   00FC1A                     __ptext1:
   481                           	callstack 0
   482   00FC1A                     _dc_motor_stop:
   483                           	callstack 29
   484   00FC1A                     
   485                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 69:     if(motor == ((void*)0)){
   486   00FC1A  502D               	movf	dc_motor_stop@motor^0,w,c
   487   00FC1C  102E               	iorwf	(dc_motor_stop@motor+1)^0,w,c
   488   00FC1E  A4D8               	btfss	status,2,c
   489   00FC20  EF14  F07E         	goto	u691
   490   00FC24  EF16  F07E         	goto	u690
   491   00FC28                     u691:
   492   00FC28  EF1A  F07E         	goto	l1446
   493   00FC2C                     u690:
   494   00FC2C                     
   495                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70:         ret = (std_ReturnType)0x00;
   496   00FC2C  0E00               	movlw	0
   497   00FC2E  6E2F               	movwf	dc_motor_stop@ret^0,c
   498                           
   499                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 71:     }
   500   00FC30  EF2E  F07E         	goto	l1450
   501   00FC34                     l1446:
   502                           
   503                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 73:         gpio_pin_write_logic(&(motor->dc_motor[0
      +                          ]) , GPIO_LOW);;
   504   00FC34  C02D  F023         	movff	dc_motor_stop@motor,gpio_pin_write_logic@pin_config
   505   00FC38  C02E  F024         	movff	dc_motor_stop@motor+1,gpio_pin_write_logic@pin_config+1
   506   00FC3C  0E00               	movlw	0
   507   00FC3E  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   508   00FC40  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   509                           
   510                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 74:         gpio_pin_write_logic(&(motor->dc_motor[1
      +                          ]) , GPIO_LOW);
   511   00FC44  0E01               	movlw	1
   512   00FC46  242D               	addwf	dc_motor_stop@motor^0,w,c
   513   00FC48  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   514   00FC4A  0E00               	movlw	0
   515   00FC4C  202E               	addwfc	(dc_motor_stop@motor+1)^0,w,c
   516   00FC4E  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   517   00FC50  0E00               	movlw	0
   518   00FC52  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   519   00FC54  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   520   00FC58                     
   521                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:         ret = (std_ReturnType)0x01;
   522   00FC58  0E01               	movlw	1
   523   00FC5A  6E2F               	movwf	dc_motor_stop@ret^0,c
   524   00FC5C                     l1450:
   525                           
   526                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:     return ret;
   527   00FC5C  502F               	movf	dc_motor_stop@ret^0,w,c
   528   00FC5E  0012               	return		;funcret
   529   00FC60                     __end_of_dc_motor_stop:
   530                           	callstack 0
   531                           
   532 ;; *************** function _dc_motor_move_right *****************
   533 ;; Defined at:
   534 ;;		line 33 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  motor           2   10[COMRAM] PTR const struct .
   537 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  ret             1   12[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      unsigned char 
   542 ;; Registers used:
   543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;Total ram usage:        3 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 1
   556 ;; This function calls:
   557 ;;		_gpio_pin_write_logic
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text2
   564   00FBD4                     __ptext2:
   565                           	callstack 0
   566   00FBD4                     _dc_motor_move_right:
   567                           	callstack 29
   568   00FBD4                     
   569                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 35:     if(motor == ((void*)0)){
   570   00FBD4  502D               	movf	dc_motor_move_right@motor^0,w,c
   571   00FBD6  102E               	iorwf	(dc_motor_move_right@motor+1)^0,w,c
   572   00FBD8  A4D8               	btfss	status,2,c
   573   00FBDA  EFF1  F07D         	goto	u671
   574   00FBDE  EFF3  F07D         	goto	u670
   575   00FBE2                     u671:
   576   00FBE2  EFF7  F07D         	goto	l1418
   577   00FBE6                     u670:
   578   00FBE6                     
   579                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 36:         ret = (std_ReturnType)0x00;
   580   00FBE6  0E00               	movlw	0
   581   00FBE8  6E2F               	movwf	dc_motor_move_right@ret^0,c
   582                           
   583                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 37:     }
   584   00FBEA  EF0B  F07E         	goto	l1422
   585   00FBEE                     l1418:
   586                           
   587                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:          gpio_pin_write_logic(&(motor->dc_motor[
      +                          0]) , GPIO_HIGH);
   588   00FBEE  C02D  F023         	movff	dc_motor_move_right@motor,gpio_pin_write_logic@pin_config
   589   00FBF2  C02E  F024         	movff	dc_motor_move_right@motor+1,gpio_pin_write_logic@pin_config+1
   590   00FBF6  0E01               	movlw	1
   591   00FBF8  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   592   00FBFA  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   593                           
   594                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:          gpio_pin_write_logic(&(motor->dc_motor[
      +                          1]) , GPIO_LOW);
   595   00FBFE  0E01               	movlw	1
   596   00FC00  242D               	addwf	dc_motor_move_right@motor^0,w,c
   597   00FC02  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   598   00FC04  0E00               	movlw	0
   599   00FC06  202E               	addwfc	(dc_motor_move_right@motor+1)^0,w,c
   600   00FC08  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   601   00FC0A  0E00               	movlw	0
   602   00FC0C  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   603   00FC0E  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   604   00FC12                     
   605                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:          ret = (std_ReturnType)0x01;
   606   00FC12  0E01               	movlw	1
   607   00FC14  6E2F               	movwf	dc_motor_move_right@ret^0,c
   608   00FC16                     l1422:
   609                           
   610                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     return ret;
   611   00FC16  502F               	movf	dc_motor_move_right@ret^0,w,c
   612   00FC18  0012               	return		;funcret
   613   00FC1A                     __end_of_dc_motor_move_right:
   614                           	callstack 0
   615                           
   616 ;; *************** function _dc_motor_move_left *****************
   617 ;; Defined at:
   618 ;;		line 50 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  motor           2   10[COMRAM] PTR const struct .
   621 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  ret             1   12[COMRAM] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      unsigned char 
   626 ;; Registers used:
   627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;Total ram usage:        3 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 1
   640 ;; This function calls:
   641 ;;		_gpio_pin_write_logic
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text3
   648   00FB8E                     __ptext3:
   649                           	callstack 0
   650   00FB8E                     _dc_motor_move_left:
   651                           	callstack 29
   652   00FB8E                     
   653                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 52:     if(motor == ((void*)0)){
   654   00FB8E  502D               	movf	dc_motor_move_left@motor^0,w,c
   655   00FB90  102E               	iorwf	(dc_motor_move_left@motor+1)^0,w,c
   656   00FB92  A4D8               	btfss	status,2,c
   657   00FB94  EFCE  F07D         	goto	u681
   658   00FB98  EFD0  F07D         	goto	u680
   659   00FB9C                     u681:
   660   00FB9C  EFD4  F07D         	goto	l1432
   661   00FBA0                     u680:
   662   00FBA0                     
   663                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 53:         ret = (std_ReturnType)0x00;
   664   00FBA0  0E00               	movlw	0
   665   00FBA2  6E2F               	movwf	dc_motor_move_left@ret^0,c
   666                           
   667                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 54:     }
   668   00FBA4  EFE8  F07D         	goto	l1436
   669   00FBA8                     l1432:
   670                           
   671                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 56:         gpio_pin_write_logic(&(motor->dc_motor[0
      +                          ]) , GPIO_LOW);
   672   00FBA8  C02D  F023         	movff	dc_motor_move_left@motor,gpio_pin_write_logic@pin_config
   673   00FBAC  C02E  F024         	movff	dc_motor_move_left@motor+1,gpio_pin_write_logic@pin_config+1
   674   00FBB0  0E00               	movlw	0
   675   00FBB2  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   676   00FBB4  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   677                           
   678                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:         gpio_pin_write_logic(&(motor->dc_motor[1
      +                          ]) , GPIO_HIGH);
   679   00FBB8  0E01               	movlw	1
   680   00FBBA  242D               	addwf	dc_motor_move_left@motor^0,w,c
   681   00FBBC  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   682   00FBBE  0E00               	movlw	0
   683   00FBC0  202E               	addwfc	(dc_motor_move_left@motor+1)^0,w,c
   684   00FBC2  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   685   00FBC4  0E01               	movlw	1
   686   00FBC6  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   687   00FBC8  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   688   00FBCC                     
   689                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret = (std_ReturnType)0x01;
   690   00FBCC  0E01               	movlw	1
   691   00FBCE  6E2F               	movwf	dc_motor_move_left@ret^0,c
   692   00FBD0                     l1436:
   693                           
   694                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 60:     return ret;
   695   00FBD0  502F               	movf	dc_motor_move_left@ret^0,w,c
   696   00FBD2  0012               	return		;funcret
   697   00FBD4                     __end_of_dc_motor_move_left:
   698                           	callstack 0
   699                           
   700 ;; *************** function _application_initialize *****************
   701 ;; Defined at:
   702 ;;		line 64 in file "application.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 3
   723 ;; This function calls:
   724 ;;		_dc_motor_initialize
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text4
   731   00FADA                     __ptext4:
   732                           	callstack 0
   733   00FADA                     _application_initialize:
   734                           	callstack 27
   735   00FADA                     
   736                           ;application.c: 65:     ret = dc_motor_initialize(&dc_motor_1);
   737   00FADA  0E21               	movlw	low _dc_motor_1
   738   00FADC  6E31               	movwf	dc_motor_initialize@motor^0,c
   739   00FADE  0E00               	movlw	high _dc_motor_1
   740   00FAE0  6E32               	movwf	(dc_motor_initialize@motor+1)^0,c
   741   00FAE2  ECA8  F07D         	call	_dc_motor_initialize	;wreg free
   742   00FAE6  6E3E               	movwf	_ret^0,c
   743                           
   744                           ;application.c: 66:     ret = dc_motor_initialize(&dc_motor_2);
   745   00FAE8  0E1F               	movlw	low _dc_motor_2
   746   00FAEA  6E31               	movwf	dc_motor_initialize@motor^0,c
   747   00FAEC  0E00               	movlw	high _dc_motor_2
   748   00FAEE  6E32               	movwf	(dc_motor_initialize@motor+1)^0,c
   749   00FAF0  ECA8  F07D         	call	_dc_motor_initialize	;wreg free
   750   00FAF4  6E3E               	movwf	_ret^0,c
   751   00FAF6  0012               	return		;funcret
   752   00FAF8                     __end_of_application_initialize:
   753                           	callstack 0
   754                           
   755 ;; *************** function _dc_motor_initialize *****************
   756 ;; Defined at:
   757 ;;		line 16 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  motor           2   14[COMRAM] PTR const struct .
   760 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  ret             1   16[COMRAM] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      unsigned char 
   765 ;; Registers used:
   766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;Total ram usage:        3 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 2
   779 ;; This function calls:
   780 ;;		_gpio_pin_initialize
   781 ;; This function is called by:
   782 ;;		_application_initialize
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text5
   787   00FB50                     __ptext5:
   788                           	callstack 0
   789   00FB50                     _dc_motor_initialize:
   790                           	callstack 27
   791   00FB50                     
   792                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     if(motor == ((void*)0)){
   793   00FB50  5031               	movf	dc_motor_initialize@motor^0,w,c
   794   00FB52  1032               	iorwf	(dc_motor_initialize@motor+1)^0,w,c
   795   00FB54  A4D8               	btfss	status,2,c
   796   00FB56  EFAF  F07D         	goto	u661
   797   00FB5A  EFB1  F07D         	goto	u660
   798   00FB5E                     u661:
   799   00FB5E  EFB5  F07D         	goto	l1402
   800   00FB62                     u660:
   801   00FB62                     
   802                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:         ret = (std_ReturnType)0x00;
   803   00FB62  0E00               	movlw	0
   804   00FB64  6E33               	movwf	dc_motor_initialize@ret^0,c
   805                           
   806                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     }
   807   00FB66  EFC5  F07D         	goto	l1406
   808   00FB6A                     l1402:
   809                           
   810                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:         gpio_pin_initialize(&(motor->dc_motor[0]
      +                          ));
   811   00FB6A  C031  F02D         	movff	dc_motor_initialize@motor,gpio_pin_initialize@pin_config
   812   00FB6E  C032  F02E         	movff	dc_motor_initialize@motor+1,gpio_pin_initialize@pin_config+1
   813   00FB72  EC30  F07E         	call	_gpio_pin_initialize	;wreg free
   814                           
   815                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_initialize(&(motor->dc_motor[1]
      +                          ));
   816   00FB76  0E01               	movlw	1
   817   00FB78  2431               	addwf	dc_motor_initialize@motor^0,w,c
   818   00FB7A  6E2D               	movwf	gpio_pin_initialize@pin_config^0,c
   819   00FB7C  0E00               	movlw	0
   820   00FB7E  2032               	addwfc	(dc_motor_initialize@motor+1)^0,w,c
   821   00FB80  6E2E               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   822   00FB82  EC30  F07E         	call	_gpio_pin_initialize	;wreg free
   823   00FB86                     
   824                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:         ret = (std_ReturnType)0x01;
   825   00FB86  0E01               	movlw	1
   826   00FB88  6E33               	movwf	dc_motor_initialize@ret^0,c
   827   00FB8A                     l1406:
   828                           
   829                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
   830   00FB8A  5033               	movf	dc_motor_initialize@ret^0,w,c
   831   00FB8C  0012               	return		;funcret
   832   00FB8E                     __end_of_dc_motor_initialize:
   833                           	callstack 0
   834                           
   835 ;; *************** function _gpio_pin_initialize *****************
   836 ;; Defined at:
   837 ;;		line 122 in file "MCAL_Layer/GPIO/hal_gpio.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  pin_config      2   10[COMRAM] PTR const struct .
   840 ;;		 -> relay_initialize@pin_obj(1), dc_motor_2.dc_motor(2), dc_motor_2(2), dc_motor_1.dc_motor(2), 
   841 ;;		 -> dc_motor_1(2), 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  ret             1   13[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      unsigned char 
   846 ;; Registers used:
   847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        4 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; Hardware stack levels required when called: 1
   860 ;; This function calls:
   861 ;;		_gpio_pin_direction_initialize
   862 ;;		_gpio_pin_write_logic
   863 ;; This function is called by:
   864 ;;		_dc_motor_initialize
   865 ;;		_relay_initialize
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text6
   870   00FC60                     __ptext6:
   871                           	callstack 0
   872   00FC60                     _gpio_pin_initialize:
   873                           	callstack 27
   874   00FC60                     
   875                           ;MCAL_Layer/GPIO/hal_gpio.c: 123:     std_ReturnType ret = (std_ReturnType)0x01;
   876   00FC60  0E01               	movlw	1
   877   00FC62  6E30               	movwf	gpio_pin_initialize@ret^0,c
   878   00FC64                     
   879                           ;MCAL_Layer/GPIO/hal_gpio.c: 124:     if(pin_config == ((void*)0) || pin_config->pin > 8
      +                           -1){
   880   00FC64  502D               	movf	gpio_pin_initialize@pin_config^0,w,c
   881   00FC66  102E               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
   882   00FC68  B4D8               	btfsc	status,2,c
   883   00FC6A  EF39  F07E         	goto	u641
   884   00FC6E  EF3B  F07E         	goto	u640
   885   00FC72                     u641:
   886   00FC72  EF4C  F07E         	goto	l1388
   887   00FC76                     u640:
   888   00FC76  C02D  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   889   00FC7A  C02E  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   890   00FC7E  30DF               	rrcf	223,w,c
   891   00FC80  32E8               	rrcf	wreg,f,c
   892   00FC82  32E8               	rrcf	wreg,f,c
   893   00FC84  0B07               	andlw	7
   894   00FC86  6E2F               	movwf	??_gpio_pin_initialize^0,c
   895   00FC88  0E07               	movlw	7
   896   00FC8A  642F               	cpfsgt	??_gpio_pin_initialize^0,c
   897   00FC8C  EF4A  F07E         	goto	u651
   898   00FC90  EF4C  F07E         	goto	u650
   899   00FC94                     u651:
   900   00FC94  EF50  F07E         	goto	l1390
   901   00FC98                     u650:
   902   00FC98                     l1388:
   903                           
   904                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:         ret = (std_ReturnType)0x00;
   905   00FC98  0E00               	movlw	0
   906   00FC9A  6E30               	movwf	gpio_pin_initialize@ret^0,c
   907                           
   908                           ;MCAL_Layer/GPIO/hal_gpio.c: 126:     }
   909   00FC9C  EF64  F07E         	goto	l1392
   910   00FCA0                     l1390:
   911                           
   912                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:         gpio_pin_direction_initialize(pin_config);
   913   00FCA0  C02D  F023         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
   914   00FCA4  C02E  F024         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
   915   00FCA8  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   916                           
   917                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:         gpio_pin_write_logic(pin_config , pin_config->
      +                          logic);
   918   00FCAC  C02D  F023         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
   919   00FCB0  C02E  F024         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
   920   00FCB4  C02D  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   921   00FCB8  C02E  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   922   00FCBC  0E00               	movlw	0
   923   00FCBE  BEDF               	btfsc	indf2,7,c
   924   00FCC0  0E01               	movlw	1
   925   00FCC2  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   926   00FCC4  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   927   00FCC8                     l1392:
   928                           
   929                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     return ret;
   930   00FCC8  5030               	movf	gpio_pin_initialize@ret^0,w,c
   931   00FCCA  0012               	return		;funcret
   932   00FCCC                     __end_of_gpio_pin_initialize:
   933                           	callstack 0
   934                           
   935 ;; *************** function _gpio_pin_write_logic *****************
   936 ;; Defined at:
   937 ;;		line 74 in file "MCAL_Layer/GPIO/hal_gpio.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  pin_config      2    0[COMRAM] PTR const struct .
   940 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), dc_motor_2.dc_motor(2), 
   941 ;;		 -> dc_motor_2(2), dc_motor_1.dc_motor(2), dc_motor_1(2), led_turn_off@led_pin(1), 
   942 ;;		 -> led_turn_on@led_pin(1), 
   943 ;;  logic           1    2[COMRAM] enum E2480
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  ret             1    9[COMRAM] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   955 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;Total ram usage:       10 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_gpio_pin_initialize
   965 ;;		_dc_motor_move_right
   966 ;;		_dc_motor_move_left
   967 ;;		_dc_motor_stop
   968 ;;		_led_turn_on
   969 ;;		_led_turn_off
   970 ;;		_relay_turn_on
   971 ;;		_relay_turn_off
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text7
   976   00FD90                     __ptext7:
   977                           	callstack 0
   978   00FD90                     _gpio_pin_write_logic:
   979                           	callstack 29
   980   00FD90                     
   981                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     std_ReturnType ret = (std_ReturnType)0x01;
   982   00FD90  0E01               	movlw	1
   983   00FD92  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
   984   00FD94                     
   985                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
   986   00FD94  5023               	movf	gpio_pin_write_logic@pin_config^0,w,c
   987   00FD96  1024               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
   988   00FD98  B4D8               	btfsc	status,2,c
   989   00FD9A  EFD1  F07E         	goto	u601
   990   00FD9E  EFD3  F07E         	goto	u600
   991   00FDA2                     u601:
   992   00FDA2  EFE4  F07E         	goto	l1364
   993   00FDA6                     u600:
   994   00FDA6  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   995   00FDAA  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   996   00FDAE  30DF               	rrcf	223,w,c
   997   00FDB0  32E8               	rrcf	wreg,f,c
   998   00FDB2  32E8               	rrcf	wreg,f,c
   999   00FDB4  0B07               	andlw	7
  1000   00FDB6  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1001   00FDB8  0E07               	movlw	7
  1002   00FDBA  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
  1003   00FDBC  EFE2  F07E         	goto	u611
  1004   00FDC0  EFE4  F07E         	goto	u610
  1005   00FDC4                     u611:
  1006   00FDC4  EF47  F07F         	goto	l1372
  1007   00FDC8                     u610:
  1008   00FDC8                     l1364:
  1009                           
  1010                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:         ret = (std_ReturnType)0x00;
  1011   00FDC8  0E00               	movlw	0
  1012   00FDCA  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
  1013                           
  1014                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     }
  1015   00FDCC  EF5C  F07F         	goto	l1374
  1016   00FDD0                     l1366:
  1017                           
  1018                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:                 (*lat_register[pin_config->port] &= ~((
      +                          uint8)1 << pin_config->pin));
  1019   00FDD0  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1020   00FDD4  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1021   00FDD8  30DF               	rrcf	223,w,c
  1022   00FDDA  32E8               	rrcf	wreg,f,c
  1023   00FDDC  32E8               	rrcf	wreg,f,c
  1024   00FDDE  0B07               	andlw	7
  1025   00FDE0  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1026   00FDE2  0E01               	movlw	1
  1027   00FDE4  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1028   00FDE6  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1029   00FDE8  EFF8  F07E         	goto	u624
  1030   00FDEC                     u625:
  1031   00FDEC  90D8               	bcf	status,0,c
  1032   00FDEE  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1033   00FDF0                     u624:
  1034   00FDF0  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1035   00FDF2  EFF6  F07E         	goto	u625
  1036   00FDF6  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1037   00FDF8  0AFF               	xorlw	255
  1038   00FDFA  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1039   00FDFC  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1040   00FE00  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1041   00FE04  50DF               	movf	223,w,c
  1042   00FE06  0B07               	andlw	7
  1043   00FE08  6E29               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1044   00FE0A  5029               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1045   00FE0C  0D02               	mullw	2
  1046   00FE0E  0E0B               	movlw	low _lat_register
  1047   00FE10  24F3               	addwf	243,w,c
  1048   00FE12  6ED9               	movwf	fsr2l,c
  1049   00FE14  0E00               	movlw	high _lat_register
  1050   00FE16  20F4               	addwfc	prodh,w,c
  1051   00FE18  6EDA               	movwf	fsr2h,c
  1052   00FE1A  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
  1053   00FE1E  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
  1054   00FE22  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1055   00FE26  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1056   00FE2A  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1057   00FE2C  16DF               	andwf	indf2,f,c
  1058                           
  1059                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 break;
  1060   00FE2E  EF5C  F07F         	goto	l1374
  1061   00FE32                     l1368:
  1062                           
  1063                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_register[pin_config->port] |= ((u
      +                          int8)1 << pin_config->pin));
  1064   00FE32  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1065   00FE36  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1066   00FE3A  30DF               	rrcf	223,w,c
  1067   00FE3C  32E8               	rrcf	wreg,f,c
  1068   00FE3E  32E8               	rrcf	wreg,f,c
  1069   00FE40  0B07               	andlw	7
  1070   00FE42  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1071   00FE44  0E01               	movlw	1
  1072   00FE46  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1073   00FE48  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1074   00FE4A  EF29  F07F         	goto	u634
  1075   00FE4E                     u635:
  1076   00FE4E  90D8               	bcf	status,0,c
  1077   00FE50  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1078   00FE52                     u634:
  1079   00FE52  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1080   00FE54  EF27  F07F         	goto	u635
  1081   00FE58  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1082   00FE5C  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1083   00FE60  50DF               	movf	223,w,c
  1084   00FE62  0B07               	andlw	7
  1085   00FE64  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1086   00FE66  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1087   00FE68  0D02               	mullw	2
  1088   00FE6A  0E0B               	movlw	low _lat_register
  1089   00FE6C  24F3               	addwf	243,w,c
  1090   00FE6E  6ED9               	movwf	fsr2l,c
  1091   00FE70  0E00               	movlw	high _lat_register
  1092   00FE72  20F4               	addwfc	prodh,w,c
  1093   00FE74  6EDA               	movwf	fsr2h,c
  1094   00FE76  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
  1095   00FE7A  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
  1096   00FE7E  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1097   00FE82  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1098   00FE86  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1099   00FE88  12DF               	iorwf	indf2,f,c
  1100                           
  1101                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 break;
  1102   00FE8A  EF5C  F07F         	goto	l1374
  1103   00FE8E                     l1372:
  1104   00FE8E  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1105   00FE90  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1106   00FE92  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115   00FE94  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1116   00FE96  0A00               	xorlw	0	; case 0
  1117   00FE98  B4D8               	btfsc	status,2,c
  1118   00FE9A  EF51  F07F         	goto	l1578
  1119   00FE9E  EFE4  F07E         	goto	l1364
  1120   00FEA2                     l1578:
  1121                           
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 2, Range of values is 0 to 1
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            7     4 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128   00FEA2  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1129   00FEA4  0A00               	xorlw	0	; case 0
  1130   00FEA6  B4D8               	btfsc	status,2,c
  1131   00FEA8  EFE8  F07E         	goto	l1366
  1132   00FEAC  0A01               	xorlw	1	; case 1
  1133   00FEAE  B4D8               	btfsc	status,2,c
  1134   00FEB0  EF19  F07F         	goto	l1368
  1135   00FEB4  EFE4  F07E         	goto	l1364
  1136   00FEB8                     l1374:
  1137                           
  1138                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     return ret;
  1139   00FEB8  502C               	movf	gpio_pin_write_logic@ret^0,w,c
  1140   00FEBA  0012               	return		;funcret
  1141   00FEBC                     __end_of_gpio_pin_write_logic:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _gpio_pin_direction_initialize *****************
  1145 ;; Defined at:
  1146 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1149 ;;		 -> relay_initialize@pin_obj(1), dc_motor_2.dc_motor(2), dc_motor_2(2), dc_motor_1.dc_motor(2), 
  1150 ;;		 -> dc_motor_1(2), led_initialize@led_pin(1), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  ret             1    8[COMRAM] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      unsigned char 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;Total ram usage:        9 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_gpio_pin_initialize
  1172 ;;		_button_initialize
  1173 ;;		_led_initialize
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text8
  1178   00FEBC                     __ptext8:
  1179                           	callstack 0
  1180   00FEBC                     _gpio_pin_direction_initialize:
  1181                           	callstack 27
  1182   00FEBC                     
  1183                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     std_ReturnType ret = (std_ReturnType)0x01;
  1184   00FEBC  0E01               	movlw	1
  1185   00FEBE  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1186   00FEC0                     
  1187                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
  1188   00FEC0  5023               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1189   00FEC2  1024               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  1190   00FEC4  B4D8               	btfsc	status,2,c
  1191   00FEC6  EF67  F07F         	goto	u541
  1192   00FECA  EF69  F07F         	goto	u540
  1193   00FECE                     u541:
  1194   00FECE  EF7A  F07F         	goto	l1340
  1195   00FED2                     u540:
  1196   00FED2  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1197   00FED6  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1198   00FEDA  30DF               	rrcf	223,w,c
  1199   00FEDC  32E8               	rrcf	wreg,f,c
  1200   00FEDE  32E8               	rrcf	wreg,f,c
  1201   00FEE0  0B07               	andlw	7
  1202   00FEE2  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1203   00FEE4  0E07               	movlw	7
  1204   00FEE6  6425               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1205   00FEE8  EF78  F07F         	goto	u551
  1206   00FEEC  EF7A  F07F         	goto	u550
  1207   00FEF0                     u551:
  1208   00FEF0  EFDD  F07F         	goto	l1348
  1209   00FEF4                     u550:
  1210   00FEF4                     l1340:
  1211                           
  1212                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (std_ReturnType)0x00;
  1213   00FEF4  0E00               	movlw	0
  1214   00FEF6  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1215                           
  1216                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     }
  1217   00FEF8  EFFE  F07F         	goto	l1350
  1218   00FEFC                     l1342:
  1219                           
  1220                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_register[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
  1221   00FEFC  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1222   00FF00  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1223   00FF04  30DF               	rrcf	223,w,c
  1224   00FF06  32E8               	rrcf	wreg,f,c
  1225   00FF08  32E8               	rrcf	wreg,f,c
  1226   00FF0A  0B07               	andlw	7
  1227   00FF0C  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1228   00FF0E  0E01               	movlw	1
  1229   00FF10  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1230   00FF12  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
  1231   00FF14  EF8E  F07F         	goto	u564
  1232   00FF18                     u565:
  1233   00FF18  90D8               	bcf	status,0,c
  1234   00FF1A  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1235   00FF1C                     u564:
  1236   00FF1C  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1237   00FF1E  EF8C  F07F         	goto	u565
  1238   00FF22  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1239   00FF24  0AFF               	xorlw	255
  1240   00FF26  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1241   00FF28  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1242   00FF2C  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1243   00FF30  50DF               	movf	223,w,c
  1244   00FF32  0B07               	andlw	7
  1245   00FF34  6E28               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1246   00FF36  5028               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1247   00FF38  0D02               	mullw	2
  1248   00FF3A  0E15               	movlw	low _tris_register
  1249   00FF3C  24F3               	addwf	243,w,c
  1250   00FF3E  6ED9               	movwf	fsr2l,c
  1251   00FF40  0E00               	movlw	high _tris_register
  1252   00FF42  20F4               	addwfc	prodh,w,c
  1253   00FF44  6EDA               	movwf	fsr2h,c
  1254   00FF46  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1255   00FF4A  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1256   00FF4E  C029  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1257   00FF52  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1258   00FF56  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1259   00FF58  16DF               	andwf	indf2,f,c
  1260                           
  1261                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  1262   00FF5A  EFFE  F07F         	goto	l1350
  1263   00FF5E                     l1344:
  1264                           
  1265                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_register[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
  1266   00FF5E  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1267   00FF62  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1268   00FF66  30DF               	rrcf	223,w,c
  1269   00FF68  32E8               	rrcf	wreg,f,c
  1270   00FF6A  32E8               	rrcf	wreg,f,c
  1271   00FF6C  0B07               	andlw	7
  1272   00FF6E  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1273   00FF70  0E01               	movlw	1
  1274   00FF72  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1275   00FF74  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
  1276   00FF76  EFBF  F07F         	goto	u574
  1277   00FF7A                     u575:
  1278   00FF7A  90D8               	bcf	status,0,c
  1279   00FF7C  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1280   00FF7E                     u574:
  1281   00FF7E  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1282   00FF80  EFBD  F07F         	goto	u575
  1283   00FF84  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1284   00FF88  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1285   00FF8C  50DF               	movf	223,w,c
  1286   00FF8E  0B07               	andlw	7
  1287   00FF90  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1288   00FF92  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1289   00FF94  0D02               	mullw	2
  1290   00FF96  0E15               	movlw	low _tris_register
  1291   00FF98  24F3               	addwf	243,w,c
  1292   00FF9A  6ED9               	movwf	fsr2l,c
  1293   00FF9C  0E00               	movlw	high _tris_register
  1294   00FF9E  20F4               	addwfc	prodh,w,c
  1295   00FFA0  6EDA               	movwf	fsr2h,c
  1296   00FFA2  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1297   00FFA6  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1298   00FFAA  C028  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1299   00FFAE  C029  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1300   00FFB2  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1301   00FFB4  12DF               	iorwf	indf2,f,c
  1302                           
  1303                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
  1304   00FFB6  EFFE  F07F         	goto	l1350
  1305   00FFBA                     l1348:
  1306   00FFBA  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1307   00FFBE  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1308   00FFC2  BCDF               	btfsc	indf2,6,c
  1309   00FFC4  EFE6  F07F         	goto	u581
  1310   00FFC8  EFE9  F07F         	goto	u580
  1311   00FFCC                     u581:
  1312   00FFCC  0E01               	movlw	1
  1313   00FFCE  EFEA  F07F         	goto	u590
  1314   00FFD2                     u580:
  1315   00FFD2  0E00               	movlw	0
  1316   00FFD4                     u590:
  1317   00FFD4  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1318   00FFD6  6A26               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1319                           
  1320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1321                           ; Switch size 1, requested type "simple"
  1322                           ; Number of cases is 1, Range of values is 0 to 0
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte            4     3 (average)
  1326                           ;	Chosen strategy is simple_byte
  1327   00FFD8  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1328   00FFDA  0A00               	xorlw	0	; case 0
  1329   00FFDC  B4D8               	btfsc	status,2,c
  1330   00FFDE  EFF3  F07F         	goto	l1580
  1331   00FFE2  EF7A  F07F         	goto	l1340
  1332   00FFE6                     l1580:
  1333                           
  1334                           ; Switch size 1, requested type "simple"
  1335                           ; Number of cases is 2, Range of values is 0 to 1
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; simple_byte            7     4 (average)
  1339                           ;	Chosen strategy is simple_byte
  1340   00FFE6  5025               	movf	??_gpio_pin_direction_initialize^0,w,c
  1341   00FFE8  0A00               	xorlw	0	; case 0
  1342   00FFEA  B4D8               	btfsc	status,2,c
  1343   00FFEC  EF7E  F07F         	goto	l1342
  1344   00FFF0  0A01               	xorlw	1	; case 1
  1345   00FFF2  B4D8               	btfsc	status,2,c
  1346   00FFF4  EFAF  F07F         	goto	l1344
  1347   00FFF8  EF7A  F07F         	goto	l1340
  1348   00FFFC                     l1350:
  1349                           
  1350                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  1351   00FFFC  502B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1352   00FFFE  0012               	return		;funcret
  1353   010000                     __end_of_gpio_pin_direction_initialize:
  1354                           	callstack 0
  1355   000000                     
  1356                           	psect	rparam
  1357   000000                     
  1358                           	psect	config
  1359                           
  1360                           ; Padding undefined space
  1361   300000                     	org	3145728
  1362   300000  FF                 	db	255
  1363                           
  1364                           ;Config register CONFIG1H @ 0x300001
  1365                           ;	Oscillator Selection bits
  1366                           ;	OSC = HS, HS oscillator
  1367                           ;	Fail-Safe Clock Monitor Enable bit
  1368                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1369                           ;	Internal/External Oscillator Switchover bit
  1370                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1371   300001                     	org	3145729
  1372   300001  02                 	db	2
  1373                           
  1374                           ;Config register CONFIG2L @ 0x300002
  1375                           ;	Power-up Timer Enable bit
  1376                           ;	PWRT = OFF, PWRT disabled
  1377                           ;	Brown-out Reset Enable bits
  1378                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1379                           ;	Brown Out Reset Voltage bits
  1380                           ;	BORV = 1, 
  1381   300002                     	org	3145730
  1382   300002  09                 	db	9
  1383                           
  1384                           ;Config register CONFIG2H @ 0x300003
  1385                           ;	Watchdog Timer Enable bit
  1386                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1387                           ;	Watchdog Timer Postscale Select bits
  1388                           ;	WDTPS = 32768, 1:32768
  1389   300003                     	org	3145731
  1390   300003  1E                 	db	30
  1391                           
  1392                           ; Padding undefined space
  1393   300004                     	org	3145732
  1394   300004  FF                 	db	255
  1395                           
  1396                           ;Config register CONFIG3H @ 0x300005
  1397                           ;	CCP2 MUX bit
  1398                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1399                           ;	PORTB A/D Enable bit
  1400                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1401                           ;	Low-Power Timer1 Oscillator Enable bit
  1402                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1403                           ;	MCLR Pin Enable bit
  1404                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1405   300005                     	org	3145733
  1406   300005  81                 	db	129
  1407                           
  1408                           ;Config register CONFIG4L @ 0x300006
  1409                           ;	Stack Full/Underflow Reset Enable bit
  1410                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1411                           ;	Single-Supply ICSP Enable bit
  1412                           ;	LVP = OFF, Single-Supply ICSP disabled
  1413                           ;	Extended Instruction Set Enable bit
  1414                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1415                           ;	Background Debugger Enable bit
  1416                           ;	DEBUG = 0x1, unprogrammed default
  1417   300006                     	org	3145734
  1418   300006  81                 	db	129
  1419                           
  1420                           ; Padding undefined space
  1421   300007                     	org	3145735
  1422   300007  FF                 	db	255
  1423                           
  1424                           ;Config register CONFIG5L @ 0x300008
  1425                           ;	Code Protection bit
  1426                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1427                           ;	Code Protection bit
  1428                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1429                           ;	Code Protection bit
  1430                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1431                           ;	Code Protection bit
  1432                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1433   300008                     	org	3145736
  1434   300008  0F                 	db	15
  1435                           
  1436                           ;Config register CONFIG5H @ 0x300009
  1437                           ;	Boot Block Code Protection bit
  1438                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1439                           ;	Data EEPROM Code Protection bit
  1440                           ;	CPD = OFF, Data EEPROM not code-protected
  1441   300009                     	org	3145737
  1442   300009  C0                 	db	192
  1443                           
  1444                           ;Config register CONFIG6L @ 0x30000A
  1445                           ;	Write Protection bit
  1446                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1447                           ;	Write Protection bit
  1448                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1449                           ;	Write Protection bit
  1450                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1451                           ;	Write Protection bit
  1452                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1453   30000A                     	org	3145738
  1454   30000A  0F                 	db	15
  1455                           
  1456                           ;Config register CONFIG6H @ 0x30000B
  1457                           ;	Configuration Register Write Protection bit
  1458                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1459                           ;	Boot Block Write Protection bit
  1460                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1461                           ;	Data EEPROM Write Protection bit
  1462                           ;	WRTD = OFF, Data EEPROM not write-protected
  1463   30000B                     	org	3145739
  1464   30000B  E0                 	db	224
  1465                           
  1466                           ;Config register CONFIG7L @ 0x30000C
  1467                           ;	Table Read Protection bit
  1468                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1469                           ;	Table Read Protection bit
  1470                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1471                           ;	Table Read Protection bit
  1472                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1473                           ;	Table Read Protection bit
  1474                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1475   30000C                     	org	3145740
  1476   30000C  0F                 	db	15
  1477                           
  1478                           ;Config register CONFIG7H @ 0x30000D
  1479                           ;	Boot Block Table Read Protection bit
  1480                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1481   30000D                     	org	3145741
  1482   30000D  40                 	db	64
  1483                           tosu	equ	0xFFF
  1484                           tosh	equ	0xFFE
  1485                           tosl	equ	0xFFD
  1486                           stkptr	equ	0xFFC
  1487                           pclatu	equ	0xFFB
  1488                           pclath	equ	0xFFA
  1489                           pcl	equ	0xFF9
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           indf0	equ	0xFEF
  1497                           postinc0	equ	0xFEE
  1498                           postdec0	equ	0xFED
  1499                           preinc0	equ	0xFEC
  1500                           plusw0	equ	0xFEB
  1501                           fsr0h	equ	0xFEA
  1502                           fsr0l	equ	0xFE9
  1503                           wreg	equ	0xFE8
  1504                           indf1	equ	0xFE7
  1505                           postinc1	equ	0xFE6
  1506                           postdec1	equ	0xFE5
  1507                           preinc1	equ	0xFE4
  1508                           plusw1	equ	0xFE3
  1509                           fsr1h	equ	0xFE2
  1510                           fsr1l	equ	0xFE1
  1511                           bsr	equ	0xFE0
  1512                           indf2	equ	0xFDF
  1513                           postinc2	equ	0xFDE
  1514                           postdec2	equ	0xFDD
  1515                           preinc2	equ	0xFDC
  1516                           plusw2	equ	0xFDB
  1517                           fsr2h	equ	0xFDA
  1518                           fsr2l	equ	0xFD9
  1519                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_stop@motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    dc_motor_move_left@motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    dc_motor_move_right@motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    dc_motor_initialize@motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_initialize@pin_obj(COMRAM[1]), dc_motor_2.dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_1.dc_motor(COMRAM[2]), 
		 -> dc_motor_1(COMRAM[2]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), dc_motor_2.dc_motor(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_1.dc_motor(COMRAM[2]), dc_motor_1(COMRAM[2]), led_turn_off@led_pin(COMRAM[1]), 
		 -> led_turn_on@led_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_initialize@pin_obj(COMRAM[1]), dc_motor_2.dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_1.dc_motor(COMRAM[2]), 
		 -> dc_motor_1(COMRAM[2]), led_initialize@led_pin(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9297
                                             17 COMRAM     2     2      0
             _application_initialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    2094
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    2170
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    2170
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    2863
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2    2863
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    2620
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    1851
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     13      3E       1       48.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      39        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 22 05:15:01 2023

                                    l200 FAF6                                      l106 FFFE  
                                    l125 FEBA                                      l139 FCCA  
                                    l243 FB8C                                      l253 FBD2  
                                    l248 FC18                                      l258 FC5E  
                                    l194 FCD0                                      u600 FDA6  
                                    u601 FDA2                                      u610 FDC8  
                                    u611 FDC4                                      u540 FED2  
                                    u541 FECE                                      u550 FEF4  
                                    u551 FEF0                                      u624 FDF0  
                                    u640 FC76                                      u625 FDEC  
                                    u641 FC72                                      u634 FE52  
                                    u650 FC98                                      u635 FE4E  
                                    u651 FC94                                      u580 FFD2  
                                    u564 FF1C                                      u660 FB62  
                                    u581 FFCC                                      u565 FF18  
                                    u661 FB5E                                      u590 FFD4  
                                    u574 FF7E                                      u670 FBE6  
                                    u575 FF7A                                      u671 FBE2  
                                    u807 FCF6                                      u680 FBA0  
                                    u681 FB9C                                      u817 FD2A  
                                    u690 FC2C                                      u691 FC28  
                                    u827 FD5E            gpio_pin_initialize@pin_config 002D  
                                    _ret 003E                      led_initialize@F2560 003D  
                                    prod 0FF3                                      wreg 0FE8  
                  relay_initialize@F2556 0039                                     l1400 FB62  
                                   l1402 FB6A                                     l1410 FADA  
                                   l1340 FEF4                                     l1404 FB86  
                                   l1420 FC12                                     l1412 FBD4  
                                   l1342 FEFC                                     l1350 FFFC  
                                   l1334 FEBC                                     l1406 FB8A  
                                   l1430 FBA0                                     l1422 FC16  
                                   l1414 FBD4                                     l1510 FD04  
                                   l1344 FF5E                                     l1336 FEC0  
                                   l1360 FD94                                     l1432 FBA8  
                                   l1416 FBE6                                     l1440 FC1A  
                                   l1520 FD7A                                     l1512 FD12  
                                   l1338 FED2                                     l1362 FDA6  
                                   l1434 FBCC                                     l1426 FB8E  
                                   l1418 FBEE                                     l1450 FC5C  
                                   l1442 FC1A                                     l1514 FD20  
                                   l1506 FCCC                                     l1348 FFBA  
                                   l1372 FE8E                                     l1364 FDC8  
                                   l1436 FBD0                                     l1428 FB8E  
                                   l1444 FC2C                                     l1516 FD54  
                                   l1508 FCEC                                     l1366 FDD0  
                                   l1374 FEB8                                     l1358 FD90  
                                   l1390 FCA0                                     l1382 FC60  
                                   l1446 FC34                                     l1518 FD6C  
                                   l1368 FE32                                     l1392 FCC8  
                                   l1384 FC64                                     l1448 FC58  
                                   l1386 FC76                                     l1580 FFE6  
                                   l1388 FC98                                     l1396 FB50  
                                   l1398 FB50                                     l1578 FEA2  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     _main FCCC  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                   dc_motor_initialize@ret 0033  
                   _gpio_pin_write_logic FD90                                    ?_main 0023  
               ??_application_initialize 0034                      relay_turn_off@F2566 0037  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  tablat 0FF5                                    status 0FD8  
         ?_gpio_pin_direction_initialize 0023                          __initialization FB1A  
                           __end_of_main FD90                    ?_gpio_pin_write_logic 0023  
            __end_of_dc_motor_initialize FB8E                                   ??_main 0034  
                          __activetblptr 0002                         led_turn_on@F2565 003C  
                          _tris_register 0015              __end_of_dc_motor_move_right FC1A  
                                 clear_0 FB40                                   isa$std 0001  
                           __pdataCOMRAM 0001                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization FB46  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0026  
                         __pcstackCOMRAM 0023                 dc_motor_initialize@motor 0031  
                             _dc_motor_1 0021                               _dc_motor_2 001F  
                 _application_initialize FADA                               __pnvCOMRAM 003E  
                      led_turn_off@F2570 003B                          led_toggle@F2575 003A  
               dc_motor_move_right@motor 002D                                  __Hparam 0000  
                                __Lparam 0000                    dc_motor_move_left@ret 002F  
                    _gpio_pin_initialize FC60                                  __pcinit FB1A  
                                __ramtop 1000                                  __ptext0 FCCC  
                                __ptext1 FC1A                                  __ptext2 FBD4  
                                __ptext3 FB8E                                  __ptext4 FADA  
                                __ptext5 FB50                                  __ptext6 FC60  
                                __ptext7 FD90                                  __ptext8 FEBC  
        ??_gpio_pin_direction_initialize 0025                     ?_gpio_pin_initialize 002D  
                   end_of_initialization FB46                            __Lmediumconst 0000  
                          _dc_motor_stop FC1A                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                       dc_motor_stop@motor 002D  
                  ??_gpio_pin_initialize 002F                           ?_dc_motor_stop 002D  
                     relay_turn_on@F2561 0038                        relay_toggle@F2571 0036  
                          __pidataCOMRAM FAF8                      start_initialization FB1A  
  __end_of_gpio_pin_direction_initialize 0000            _gpio_pin_direction_initialize FEBC  
                           _lat_register 000B                  ?_application_initialize 0023  
             __end_of_dc_motor_move_left FBD4                  dc_motor_move_left@motor 002D  
                       dc_motor_stop@ret 002F                              __pbssCOMRAM 0036  
         __end_of_application_initialize FAF8           gpio_pin_write_logic@pin_config 0023  
                        ??_dc_motor_stop 002F                gpio_pin_write_logic@logic 0025  
                    _dc_motor_initialize FB50         gpio_pin_direction_initialize@ret 002B  
gpio_pin_direction_initialize@pin_config 0023                   gpio_pin_initialize@ret 0030  
                   ?_dc_motor_initialize 0031                  gpio_pin_write_logic@ret 002C  
                              copy_data0 FB2E                      _dc_motor_move_right FBD4  
                               __Hrparam 0000                                 __Lrparam 0000  
                   ?_dc_motor_move_right 002D              __end_of_gpio_pin_initialize FCCC  
                  ??_dc_motor_initialize 0033                   dc_motor_move_right@ret 002F  
                               isa$xinst 0000                    ??_dc_motor_move_right 002F  
                     _dc_motor_move_left FB8E             __end_of_gpio_pin_write_logic FEBC  
                    ?_dc_motor_move_left 002D                     ??_dc_motor_move_left 002F  
                          _port_register 0001                    __end_of_dc_motor_stop FC60  
