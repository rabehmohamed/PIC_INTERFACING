

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 24 03:36:41 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00F94D                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_register
    64   00F94D  80                 	db	128
    65   00F94E  0F                 	db	15
    66   00F94F  81                 	db	129
    67   00F950  0F                 	db	15
    68   00F951  82                 	db	130
    69   00F952  0F                 	db	15
    70   00F953  83                 	db	131
    71   00F954  0F                 	db	15
    72   00F955  84                 	db	132
    73   00F956  0F                 	db	15
    74                           
    75                           ;initializer for _lat_register
    76   00F957  89                 	db	137
    77   00F958  0F                 	db	15
    78   00F959  8A                 	db	138
    79   00F95A  0F                 	db	15
    80   00F95B  8B                 	db	139
    81   00F95C  0F                 	db	15
    82   00F95D  8C                 	db	140
    83   00F95E  0F                 	db	15
    84   00F95F  8D                 	db	141
    85   00F960  0F                 	db	15
    86                           
    87                           ;initializer for _tris_register
    88   00F961  92                 	db	146
    89   00F962  0F                 	db	15
    90   00F963  93                 	db	147
    91   00F964  0F                 	db	15
    92   00F965  94                 	db	148
    93   00F966  0F                 	db	15
    94   00F967  95                 	db	149
    95   00F968  0F                 	db	15
    96   00F969  96                 	db	150
    97   00F96A  0F                 	db	15
    98                           
    99                           ;initializer for _seg1
   100   00F96B  02                 	db	2
   101   00F96C  0A                 	db	10
   102   00F96D  12                 	db	18
   103   00F96E  1A                 	db	26
   104   00F96F  00                 	db	0
   105                           
   106                           ;initializer for _segment2_enable
   107   00F970  0B                 	db	11
   108                           
   109                           ;initializer for _segment1_enable
   110   00F971  03                 	db	3
   111                           
   112                           	psect	nvCOMRAM
   113   000043                     __pnvCOMRAM:
   114                           	callstack 0
   115   000043                     _ret:
   116                           	callstack 0
   117   000043                     	ds	1
   118   000000                     _PORTE	set	3972
   119   000000                     _PORTD	set	3971
   120   000000                     _PORTC	set	3970
   121   000000                     _PORTB	set	3969
   122   000000                     _PORTA	set	3968
   123   000000                     _LATA	set	3977
   124   000000                     _TRISA	set	3986
   125   000000                     _TRISE	set	3990
   126   000000                     _TRISD	set	3989
   127   000000                     _TRISC	set	3988
   128   000000                     _TRISB	set	3987
   129   000000                     _LATE	set	3981
   130   000000                     _LATD	set	3980
   131   000000                     _LATC	set	3979
   132   000000                     _LATB	set	3978
   133                           
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   00F99E                     __pcinit:
   138                           	callstack 0
   139   00F99E                     start_initialization:
   140                           	callstack 0
   141   00F99E                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (37 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146   00F99E  0E4D               	movlw	low __pidataCOMRAM
   147   00F9A0  6EF6               	movwf	tblptrl,c
   148   00F9A2  0EF9               	movlw	high __pidataCOMRAM
   149   00F9A4  6EF7               	movwf	tblptrh,c
   150   00F9A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151   00F9A8  6EF8               	movwf	tblptru,c
   152   00F9AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   153   00F9AE  EE10 F025          	lfsr	1,37
   154   00F9B2                     copy_data0:
   155   00F9B2  0009               	tblrd		*+
   156   00F9B4  CFF5 FFEE          	movff	tablat,postinc0
   157   00F9B8  50E5               	movf	postdec1,w,c
   158   00F9BA  50E1               	movf	fsr1l,w,c
   159   00F9BC  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (9 bytes)
   162   00F9BE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   163   00F9C2  0E09               	movlw	9
   164   00F9C4                     clear_0:
   165   00F9C4  6AEE               	clrf	postinc0,c
   166   00F9C6  06E8               	decf	wreg,f,c
   167   00F9C8  E1FD               	bnz	clear_0
   168   00F9CA                     end_of_initialization:
   169                           	callstack 0
   170   00F9CA                     __end_of__initialization:
   171                           	callstack 0
   172   00F9CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173   00F9CC  6EF8               	movwf	tblptru,c
   174   00F9CE  0100               	movlb	0
   175   00F9D0  EF55  F07E         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178   00003A                     __pbssCOMRAM:
   179                           	callstack 0
   180   00003A                     _number:
   181                           	callstack 0
   182   00003A                     	ds	1
   183   00003B                     relay_toggle@F2571:
   184                           	callstack 0
   185   00003B                     	ds	1
   186   00003C                     relay_turn_off@F2566:
   187                           	callstack 0
   188   00003C                     	ds	1
   189   00003D                     relay_turn_on@F2561:
   190                           	callstack 0
   191   00003D                     	ds	1
   192   00003E                     relay_initialize@F2556:
   193                           	callstack 0
   194   00003E                     	ds	1
   195   00003F                     led_toggle@F2575:
   196                           	callstack 0
   197   00003F                     	ds	1
   198   000040                     led_turn_off@F2570:
   199                           	callstack 0
   200   000040                     	ds	1
   201   000041                     led_turn_on@F2565:
   202                           	callstack 0
   203   000041                     	ds	1
   204   000042                     led_initialize@F2560:
   205                           	callstack 0
   206   000042                     	ds	1
   207                           
   208                           	psect	dataCOMRAM
   209   000001                     __pdataCOMRAM:
   210                           	callstack 0
   211   000001                     _port_register:
   212                           	callstack 0
   213   000001                     	ds	10
   214   00000B                     _lat_register:
   215                           	callstack 0
   216   00000B                     	ds	10
   217   000015                     _tris_register:
   218                           	callstack 0
   219   000015                     	ds	10
   220   00001F                     _seg1:
   221                           	callstack 0
   222   00001F                     	ds	5
   223   000024                     _segment2_enable:
   224                           	callstack 0
   225   000024                     	ds	1
   226   000025                     _segment1_enable:
   227                           	callstack 0
   228   000025                     	ds	1
   229                           
   230                           	psect	cstackCOMRAM
   231   000026                     __pcstackCOMRAM:
   232                           	callstack 0
   233   000026                     ?___awdiv:
   234                           	callstack 0
   235   000026                     ?___awmod:
   236                           	callstack 0
   237   000026                     gpio_pin_direction_initialize@pin_config:
   238                           	callstack 0
   239   000026                     gpio_pin_write_logic@pin_config:
   240                           	callstack 0
   241   000026                     ___awdiv@dividend:
   242                           	callstack 0
   243   000026                     ___awmod@dividend:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x0
   247   000026                     	ds	2
   248   000028                     ??_gpio_pin_direction_initialize:
   249   000028                     gpio_pin_write_logic@logic:
   250                           	callstack 0
   251   000028                     ___awdiv@divisor:
   252                           	callstack 0
   253   000028                     ___awmod@divisor:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257   000028                     	ds	1
   258   000029                     ??_gpio_pin_write_logic:
   259                           
   260                           ; 1 bytes @ 0x3
   261   000029                     	ds	1
   262   00002A                     ___awdiv@counter:
   263                           	callstack 0
   264   00002A                     ___awmod@counter:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x4
   268   00002A                     	ds	1
   269   00002B                     ___awdiv@sign:
   270                           	callstack 0
   271   00002B                     ___awmod@sign:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x5
   275   00002B                     	ds	1
   276   00002C                     ___awdiv@quotient:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x6
   280   00002C                     	ds	2
   281   00002E                     gpio_pin_direction_initialize@ret:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x8
   285   00002E                     	ds	1
   286   00002F                     gpio_pin_write_logic@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x9
   290   00002F                     	ds	1
   291   000030                     gpio_pin_initialize@pin_config:
   292                           	callstack 0
   293   000030                     seven_segment_write_number@seg:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xA
   297   000030                     	ds	2
   298   000032                     ??_gpio_pin_initialize:
   299   000032                     seven_segment_write_number@number:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xC
   303   000032                     	ds	1
   304   000033                     gpio_pin_initialize@ret:
   305                           	callstack 0
   306   000033                     seven_segment_write_number@ret:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xD
   310   000033                     	ds	1
   311   000034                     seven_segment_initialize@seg:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xE
   315   000034                     	ds	2
   316   000036                     seven_segment_initialize@ret:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x10
   320   000036                     	ds	1
   321   000037                     ??_main:
   322                           
   323                           ; 1 bytes @ 0x11
   324   000037                     	ds	1
   325   000038                     main@number:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x12
   329   000038                     	ds	2
   330                           
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 57 in file "application.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  number          2   18[COMRAM] int 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2  255[None  ] int 
   343 ;; Registers used:
   344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        3 bytes
   355 ;; Hardware stack levels required when called: 4
   356 ;; This function calls:
   357 ;;		___awdiv
   358 ;;		___awmod
   359 ;;		_application_initialize
   360 ;;		_gpio_pin_write_logic
   361 ;;		_seven_segment_write_number
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text0
   368   00FCAA                     __ptext0:
   369                           	callstack 0
   370   00FCAA                     _main:
   371                           	callstack 27
   372   00FCAA                     
   373                           ;application.c: 59:     application_initialize();
   374   00FCAA  ECB9  F07C         	call	_application_initialize	;wreg free
   375   00FCAE                     l1782:
   376                           
   377                           ;application.c: 63:         for(int number=0 ; number<50 ; number++){
   378   00FCAE  0E00               	movlw	0
   379   00FCB0  6E39               	movwf	(main@number+1)^0,c
   380   00FCB2  0E00               	movlw	0
   381   00FCB4  6E38               	movwf	main@number^0,c
   382   00FCB6                     l1788:
   383                           
   384                           ;application.c: 64:             ret = seven_segment_write_number (&seg1 , (uint8)number%
      +                          10 );
   385   00FCB6  0E1F               	movlw	low _seg1
   386   00FCB8  6E30               	movwf	seven_segment_write_number@seg^0,c
   387   00FCBA  0E00               	movlw	high _seg1
   388   00FCBC  6E31               	movwf	(seven_segment_write_number@seg+1)^0,c
   389   00FCBE  C038  F026         	movff	main@number,___awmod@dividend
   390   00FCC2  6A27               	clrf	(___awmod@dividend+1)^0,c
   391   00FCC4  0E00               	movlw	0
   392   00FCC6  6E29               	movwf	(___awmod@divisor+1)^0,c
   393   00FCC8  0E0A               	movlw	10
   394   00FCCA  6E28               	movwf	___awmod@divisor^0,c
   395   00FCCC  EC9B  F07D         	call	___awmod	;wreg free
   396   00FCD0  5026               	movf	?___awmod^0,w,c
   397   00FCD2  6E32               	movwf	seven_segment_write_number@number^0,c
   398   00FCD4  EC51  F07D         	call	_seven_segment_write_number	;wreg free
   399   00FCD8  6E43               	movwf	_ret^0,c
   400                           
   401                           ;application.c: 65:             ret = gpio_pin_write_logic(&segment2_enable , GPIO_HIGH)
      +                          ;
   402   00FCDA  0E24               	movlw	low _segment2_enable
   403   00FCDC  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   404   00FCDE  0E00               	movlw	high _segment2_enable
   405   00FCE0  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   406   00FCE2  0E01               	movlw	1
   407   00FCE4  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   408   00FCE6  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   409   00FCEA  6E43               	movwf	_ret^0,c
   410   00FCEC                     
   411                           ;application.c: 66:             _delay((unsigned long)((10)*(8000000/4000.0)));
   412   00FCEC  0E1A               	movlw	26
   413   00FCEE  6E37               	movwf	??_main^0,c
   414   00FCF0  0EF8               	movlw	248
   415   00FCF2                     u1127:
   416   00FCF2  2EE8               	decfsz	wreg,f,c
   417   00FCF4  D7FE               	bra	u1127
   418   00FCF6  2E37               	decfsz	??_main^0,f,c
   419   00FCF8  D7FC               	bra	u1127
   420   00FCFA  D000               	nop2	
   421   00FCFC                     
   422                           ;application.c: 67:             ret = gpio_pin_write_logic(&segment2_enable , GPIO_LOW);
   423   00FCFC  0E24               	movlw	low _segment2_enable
   424   00FCFE  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   425   00FD00  0E00               	movlw	high _segment2_enable
   426   00FD02  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   427   00FD04  0E00               	movlw	0
   428   00FD06  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   429   00FD08  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   430   00FD0C  6E43               	movwf	_ret^0,c
   431   00FD0E                     
   432                           ;application.c: 69:             ret = seven_segment_write_number (&seg1 , (uint8)number/
      +                          10 );
   433   00FD0E  0E1F               	movlw	low _seg1
   434   00FD10  6E30               	movwf	seven_segment_write_number@seg^0,c
   435   00FD12  0E00               	movlw	high _seg1
   436   00FD14  6E31               	movwf	(seven_segment_write_number@seg+1)^0,c
   437   00FD16  C038  F026         	movff	main@number,___awdiv@dividend
   438   00FD1A  6A27               	clrf	(___awdiv@dividend+1)^0,c
   439   00FD1C  0E00               	movlw	0
   440   00FD1E  6E29               	movwf	(___awdiv@divisor+1)^0,c
   441   00FD20  0E0A               	movlw	10
   442   00FD22  6E28               	movwf	___awdiv@divisor^0,c
   443   00FD24  ECF3  F07D         	call	___awdiv	;wreg free
   444   00FD28  5026               	movf	?___awdiv^0,w,c
   445   00FD2A  6E32               	movwf	seven_segment_write_number@number^0,c
   446   00FD2C  EC51  F07D         	call	_seven_segment_write_number	;wreg free
   447   00FD30  6E43               	movwf	_ret^0,c
   448   00FD32                     
   449                           ;application.c: 70:             ret = gpio_pin_write_logic(&segment1_enable , GPIO_HIGH)
      +                          ;
   450   00FD32  0E25               	movlw	low _segment1_enable
   451   00FD34  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   452   00FD36  0E00               	movlw	high _segment1_enable
   453   00FD38  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   454   00FD3A  0E01               	movlw	1
   455   00FD3C  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   456   00FD3E  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   457   00FD42  6E43               	movwf	_ret^0,c
   458                           
   459                           ;application.c: 71:             _delay((unsigned long)((10)*(8000000/4000.0)));
   460   00FD44  0E1A               	movlw	26
   461   00FD46  6E37               	movwf	??_main^0,c
   462   00FD48  0EF8               	movlw	248
   463   00FD4A                     u1137:
   464   00FD4A  2EE8               	decfsz	wreg,f,c
   465   00FD4C  D7FE               	bra	u1137
   466   00FD4E  2E37               	decfsz	??_main^0,f,c
   467   00FD50  D7FC               	bra	u1137
   468   00FD52  D000               	nop2	
   469   00FD54                     
   470                           ;application.c: 72:             ret = gpio_pin_write_logic(&segment1_enable , GPIO_LOW);
   471   00FD54  0E25               	movlw	low _segment1_enable
   472   00FD56  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   473   00FD58  0E00               	movlw	high _segment1_enable
   474   00FD5A  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   475   00FD5C  0E00               	movlw	0
   476   00FD5E  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   477   00FD60  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   478   00FD64  6E43               	movwf	_ret^0,c
   479   00FD66                     
   480                           ;application.c: 73:         }
   481   00FD66  4A38               	infsnz	main@number^0,f,c
   482   00FD68  2A39               	incf	(main@number+1)^0,f,c
   483   00FD6A  BE39               	btfsc	(main@number+1)^0,7,c
   484   00FD6C  EFC1  F07E         	goto	u1111
   485   00FD70  5039               	movf	(main@number+1)^0,w,c
   486   00FD72  E109               	bnz	u1110
   487   00FD74  0E32               	movlw	50
   488   00FD76  5C38               	subwf	main@number^0,w,c
   489   00FD78  A0D8               	btfss	status,0,c
   490   00FD7A  EFC1  F07E         	goto	u1111
   491   00FD7E  EFC3  F07E         	goto	u1110
   492   00FD82                     u1111:
   493   00FD82  EF5B  F07E         	goto	l1788
   494   00FD86                     u1110:
   495   00FD86                     
   496                           ;application.c: 74:         number++;
   497   00FD86  2A3A               	incf	_number^0,f,c
   498   00FD88  EF57  F07E         	goto	l1782
   499   00FD8C  EF00  F000         	goto	start
   500   00FD90                     __end_of_main:
   501                           	callstack 0
   502                           
   503 ;; *************** function _seven_segment_write_number *****************
   504 ;; Defined at:
   505 ;;		line 32 in file "ECU_Layer/7_Segment/ecu_seven_segment.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  seg             2   10[COMRAM] PTR const struct .
   508 ;;		 -> seg1(5), 
   509 ;;  number          1   12[COMRAM] unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  ret             1   13[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      unsigned char 
   514 ;; Registers used:
   515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   521 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;Total ram usage:        4 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		_gpio_pin_write_logic
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text1
   536   00FAA2                     __ptext1:
   537                           	callstack 0
   538   00FAA2                     _seven_segment_write_number:
   539                           	callstack 29
   540   00FAA2                     
   541                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 34:     if((seg == ((void*)0)) &&(number > 9) 
      +                          ){
   542   00FAA2  5030               	movf	seven_segment_write_number@seg^0,w,c
   543   00FAA4  1031               	iorwf	(seven_segment_write_number@seg+1)^0,w,c
   544   00FAA6  A4D8               	btfss	status,2,c
   545   00FAA8  EF58  F07D         	goto	u831
   546   00FAAC  EF5A  F07D         	goto	u830
   547   00FAB0                     u831:
   548   00FAB0  EF66  F07D         	goto	l1546
   549   00FAB4                     u830:
   550   00FAB4  0E09               	movlw	9
   551   00FAB6  6432               	cpfsgt	seven_segment_write_number@number^0,c
   552   00FAB8  EF60  F07D         	goto	u841
   553   00FABC  EF62  F07D         	goto	u840
   554   00FAC0                     u841:
   555   00FAC0  EF66  F07D         	goto	l1546
   556   00FAC4                     u840:
   557   00FAC4                     
   558                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 35:         ret = (std_ReturnType)0x00;
   559   00FAC4  0E00               	movlw	0
   560   00FAC6  6E33               	movwf	seven_segment_write_number@ret^0,c
   561                           
   562                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 36:     }
   563   00FAC8  EF99  F07D         	goto	l1548
   564   00FACC                     l1546:
   565                           
   566                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 38:        ret = gpio_pin_write_logic(&(seg->s
      +                          egment_pins[0]) , number&0x01);
   567   00FACC  C030  F026         	movff	seven_segment_write_number@seg,gpio_pin_write_logic@pin_config
   568   00FAD0  C031  F027         	movff	seven_segment_write_number@seg+1,gpio_pin_write_logic@pin_config+1
   569   00FAD4  5032               	movf	seven_segment_write_number@number^0,w,c
   570   00FAD6  0B01               	andlw	1
   571   00FAD8  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   572   00FADA  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   573   00FADE  6E33               	movwf	seven_segment_write_number@ret^0,c
   574                           
   575                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 39:        ret = gpio_pin_write_logic(&(seg->s
      +                          egment_pins[1]) , (number>>1) & 0x01);
   576   00FAE0  0E01               	movlw	1
   577   00FAE2  2430               	addwf	seven_segment_write_number@seg^0,w,c
   578   00FAE4  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   579   00FAE6  0E00               	movlw	0
   580   00FAE8  2031               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   581   00FAEA  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   582   00FAEC  90D8               	bcf	status,0,c
   583   00FAEE  3032               	rrcf	seven_segment_write_number@number^0,w,c
   584   00FAF0  0B01               	andlw	1
   585   00FAF2  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   586   00FAF4  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   587   00FAF8  6E33               	movwf	seven_segment_write_number@ret^0,c
   588                           
   589                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 40:        ret = gpio_pin_write_logic(&(seg->s
      +                          egment_pins[2]) , (number>>2) & 0x01);
   590   00FAFA  0E02               	movlw	2
   591   00FAFC  2430               	addwf	seven_segment_write_number@seg^0,w,c
   592   00FAFE  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   593   00FB00  0E00               	movlw	0
   594   00FB02  2031               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   595   00FB04  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   596   00FB06  4032               	rrncf	seven_segment_write_number@number^0,w,c
   597   00FB08  42E8               	rrncf	wreg,f,c
   598   00FB0A  0B3F               	andlw	63
   599   00FB0C  0B01               	andlw	1
   600   00FB0E  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   601   00FB10  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   602   00FB14  6E33               	movwf	seven_segment_write_number@ret^0,c
   603                           
   604                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 41:        ret = gpio_pin_write_logic(&(seg->s
      +                          egment_pins[3]) , (number>>3) & 0x01);
   605   00FB16  0E03               	movlw	3
   606   00FB18  2430               	addwf	seven_segment_write_number@seg^0,w,c
   607   00FB1A  6E26               	movwf	gpio_pin_write_logic@pin_config^0,c
   608   00FB1C  0E00               	movlw	0
   609   00FB1E  2031               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   610   00FB20  6E27               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   611   00FB22  3832               	swapf	seven_segment_write_number@number^0,w,c
   612   00FB24  46E8               	rlncf	wreg,f,c
   613   00FB26  0B1F               	andlw	31
   614   00FB28  0B01               	andlw	1
   615   00FB2A  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   616   00FB2C  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   617   00FB30  6E33               	movwf	seven_segment_write_number@ret^0,c
   618   00FB32                     l1548:
   619                           
   620                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 44:     return ret;
   621   00FB32  5033               	movf	seven_segment_write_number@ret^0,w,c
   622   00FB34  0012               	return		;funcret
   623   00FB36                     __end_of_seven_segment_write_number:
   624                           	callstack 0
   625                           
   626 ;; *************** function _application_initialize *****************
   627 ;; Defined at:
   628 ;;		line 82 in file "application.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 3
   649 ;; This function calls:
   650 ;;		_gpio_pin_initialize
   651 ;;		_seven_segment_initialize
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658   00F972                     __ptext2:
   659                           	callstack 0
   660   00F972                     _application_initialize:
   661                           	callstack 27
   662   00F972                     
   663                           ;application.c: 83:     ret = gpio_pin_initialize(&segment1_enable);
   664   00F972  0E25               	movlw	low _segment1_enable
   665   00F974  6E30               	movwf	gpio_pin_initialize@pin_config^0,c
   666   00F976  0E00               	movlw	high _segment1_enable
   667   00F978  6E31               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   668   00F97A  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   669   00F97E  6E43               	movwf	_ret^0,c
   670                           
   671                           ;application.c: 84:     ret = gpio_pin_initialize(&segment2_enable);
   672   00F980  0E24               	movlw	low _segment2_enable
   673   00F982  6E30               	movwf	gpio_pin_initialize@pin_config^0,c
   674   00F984  0E00               	movlw	high _segment2_enable
   675   00F986  6E31               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   676   00F988  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   677   00F98C  6E43               	movwf	_ret^0,c
   678                           
   679                           ;application.c: 85:     ret = seven_segment_initialize(&seg1);
   680   00F98E  0E1F               	movlw	low _seg1
   681   00F990  6E34               	movwf	seven_segment_initialize@seg^0,c
   682   00F992  0E00               	movlw	high _seg1
   683   00F994  6E35               	movwf	(seven_segment_initialize@seg+1)^0,c
   684   00F996  ECEA  F07C         	call	_seven_segment_initialize	;wreg free
   685   00F99A  6E43               	movwf	_ret^0,c
   686   00F99C  0012               	return		;funcret
   687   00F99E                     __end_of_application_initialize:
   688                           	callstack 0
   689                           
   690 ;; *************** function _seven_segment_initialize *****************
   691 ;; Defined at:
   692 ;;		line 16 in file "ECU_Layer/7_Segment/ecu_seven_segment.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  seg             2   14[COMRAM] PTR const struct .
   695 ;;		 -> seg1(5), 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  ret             1   16[COMRAM] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      unsigned char 
   700 ;; Registers used:
   701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;Total ram usage:        3 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 2
   714 ;; This function calls:
   715 ;;		_gpio_pin_initialize
   716 ;; This function is called by:
   717 ;;		_application_initialize
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text3
   722   00F9D4                     __ptext3:
   723                           	callstack 0
   724   00F9D4                     _seven_segment_initialize:
   725                           	callstack 27
   726   00F9D4                     
   727                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 18:     if(seg == ((void*)0)){
   728   00F9D4  5034               	movf	seven_segment_initialize@seg^0,w,c
   729   00F9D6  1035               	iorwf	(seven_segment_initialize@seg+1)^0,w,c
   730   00F9D8  A4D8               	btfss	status,2,c
   731   00F9DA  EFF1  F07C         	goto	u821
   732   00F9DE  EFF3  F07C         	goto	u820
   733   00F9E2                     u821:
   734   00F9E2  EFF7  F07C         	goto	l1530
   735   00F9E6                     u820:
   736   00F9E6                     
   737                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 19:         ret = (std_ReturnType)0x00;
   738   00F9E6  0E00               	movlw	0
   739   00F9E8  6E36               	movwf	seven_segment_initialize@ret^0,c
   740                           
   741                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 20:     }
   742   00F9EA  EF19  F07D         	goto	l1532
   743   00F9EE                     l1530:
   744                           
   745                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 22:         ret = gpio_pin_initialize(&(seg->s
      +                          egment_pins[0]));
   746   00F9EE  C034  F030         	movff	seven_segment_initialize@seg,gpio_pin_initialize@pin_config
   747   00F9F2  C035  F031         	movff	seven_segment_initialize@seg+1,gpio_pin_initialize@pin_config+1
   748   00F9F6  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   749   00F9FA  6E36               	movwf	seven_segment_initialize@ret^0,c
   750                           
   751                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 23:         ret = gpio_pin_initialize(&(seg->s
      +                          egment_pins[1]));
   752   00F9FC  0E01               	movlw	1
   753   00F9FE  2434               	addwf	seven_segment_initialize@seg^0,w,c
   754   00FA00  6E30               	movwf	gpio_pin_initialize@pin_config^0,c
   755   00FA02  0E00               	movlw	0
   756   00FA04  2035               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   757   00FA06  6E31               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   758   00FA08  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   759   00FA0C  6E36               	movwf	seven_segment_initialize@ret^0,c
   760                           
   761                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 24:         ret = gpio_pin_initialize(&(seg->s
      +                          egment_pins[2]));
   762   00FA0E  0E02               	movlw	2
   763   00FA10  2434               	addwf	seven_segment_initialize@seg^0,w,c
   764   00FA12  6E30               	movwf	gpio_pin_initialize@pin_config^0,c
   765   00FA14  0E00               	movlw	0
   766   00FA16  2035               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   767   00FA18  6E31               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   768   00FA1A  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   769   00FA1E  6E36               	movwf	seven_segment_initialize@ret^0,c
   770                           
   771                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 25:         ret = gpio_pin_initialize(&(seg->s
      +                          egment_pins[3]));
   772   00FA20  0E03               	movlw	3
   773   00FA22  2434               	addwf	seven_segment_initialize@seg^0,w,c
   774   00FA24  6E30               	movwf	gpio_pin_initialize@pin_config^0,c
   775   00FA26  0E00               	movlw	0
   776   00FA28  2035               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   777   00FA2A  6E31               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   778   00FA2C  EC1B  F07D         	call	_gpio_pin_initialize	;wreg free
   779   00FA30  6E36               	movwf	seven_segment_initialize@ret^0,c
   780   00FA32                     l1532:
   781                           
   782                           ;ECU_Layer/7_Segment/ecu_seven_segment.c: 28:     return ret;
   783   00FA32  5036               	movf	seven_segment_initialize@ret^0,w,c
   784   00FA34  0012               	return		;funcret
   785   00FA36                     __end_of_seven_segment_initialize:
   786                           	callstack 0
   787                           
   788 ;; *************** function _gpio_pin_initialize *****************
   789 ;; Defined at:
   790 ;;		line 122 in file "MCAL_Layer/GPIO/hal_gpio.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  pin_config      2   10[COMRAM] PTR const struct .
   793 ;;		 -> segment1_enable(1), segment2_enable(1), seg1.segment_pins(4), seg1(5), 
   794 ;;		 -> relay_initialize@pin_obj(1), 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  ret             1   13[COMRAM] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      unsigned char 
   799 ;; Registers used:
   800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        4 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 1
   813 ;; This function calls:
   814 ;;		_gpio_pin_direction_initialize
   815 ;;		_gpio_pin_write_logic
   816 ;; This function is called by:
   817 ;;		_application_initialize
   818 ;;		_seven_segment_initialize
   819 ;;		_relay_initialize
   820 ;;		_dc_motor_initialize
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text4
   825   00FA36                     __ptext4:
   826                           	callstack 0
   827   00FA36                     _gpio_pin_initialize:
   828                           	callstack 27
   829   00FA36                     
   830                           ;MCAL_Layer/GPIO/hal_gpio.c: 123:     std_ReturnType ret = (std_ReturnType)0x01;
   831   00FA36  0E01               	movlw	1
   832   00FA38  6E33               	movwf	gpio_pin_initialize@ret^0,c
   833   00FA3A                     
   834                           ;MCAL_Layer/GPIO/hal_gpio.c: 124:     if(pin_config == ((void*)0) || pin_config->pin > 8
      +                           -1){
   835   00FA3A  5030               	movf	gpio_pin_initialize@pin_config^0,w,c
   836   00FA3C  1031               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
   837   00FA3E  B4D8               	btfsc	status,2,c
   838   00FA40  EF24  F07D         	goto	u801
   839   00FA44  EF26  F07D         	goto	u800
   840   00FA48                     u801:
   841   00FA48  EF37  F07D         	goto	l1516
   842   00FA4C                     u800:
   843   00FA4C  C030  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   844   00FA50  C031  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   845   00FA54  30DF               	rrcf	223,w,c
   846   00FA56  32E8               	rrcf	wreg,f,c
   847   00FA58  32E8               	rrcf	wreg,f,c
   848   00FA5A  0B07               	andlw	7
   849   00FA5C  6E32               	movwf	??_gpio_pin_initialize^0,c
   850   00FA5E  0E07               	movlw	7
   851   00FA60  6432               	cpfsgt	??_gpio_pin_initialize^0,c
   852   00FA62  EF35  F07D         	goto	u811
   853   00FA66  EF37  F07D         	goto	u810
   854   00FA6A                     u811:
   855   00FA6A  EF3B  F07D         	goto	l1518
   856   00FA6E                     u810:
   857   00FA6E                     l1516:
   858                           
   859                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:         ret = (std_ReturnType)0x00;
   860   00FA6E  0E00               	movlw	0
   861   00FA70  6E33               	movwf	gpio_pin_initialize@ret^0,c
   862                           
   863                           ;MCAL_Layer/GPIO/hal_gpio.c: 126:     }
   864   00FA72  EF4F  F07D         	goto	l1520
   865   00FA76                     l1518:
   866                           
   867                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:         gpio_pin_direction_initialize(pin_config);
   868   00FA76  C030  F026         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
   869   00FA7A  C031  F027         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
   870   00FA7E  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   871                           
   872                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:         gpio_pin_write_logic(pin_config , pin_config->
      +                          logic);
   873   00FA82  C030  F026         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
   874   00FA86  C031  F027         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
   875   00FA8A  C030  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   876   00FA8E  C031  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   877   00FA92  0E00               	movlw	0
   878   00FA94  BEDF               	btfsc	indf2,7,c
   879   00FA96  0E01               	movlw	1
   880   00FA98  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   881   00FA9A  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   882   00FA9E                     l1520:
   883                           
   884                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     return ret;
   885   00FA9E  5033               	movf	gpio_pin_initialize@ret^0,w,c
   886   00FAA0  0012               	return		;funcret
   887   00FAA2                     __end_of_gpio_pin_initialize:
   888                           	callstack 0
   889                           
   890 ;; *************** function _gpio_pin_write_logic *****************
   891 ;; Defined at:
   892 ;;		line 74 in file "MCAL_Layer/GPIO/hal_gpio.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  pin_config      2    0[COMRAM] PTR const struct .
   895 ;;		 -> segment1_enable(1), segment2_enable(1), seg1.segment_pins(4), seg1(5), 
   896 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@led_pin(1), 
   897 ;;		 -> led_turn_on@led_pin(1), 
   898 ;;  logic           1    2[COMRAM] enum E2480
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  ret             1    9[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:       10 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_gpio_pin_initialize
   920 ;;		_main
   921 ;;		_seven_segment_write_number
   922 ;;		_led_turn_on
   923 ;;		_led_turn_off
   924 ;;		_relay_turn_on
   925 ;;		_relay_turn_off
   926 ;;		_dc_motor_move_right
   927 ;;		_dc_motor_move_left
   928 ;;		_dc_motor_stop
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text5
   933   00FD90                     __ptext5:
   934                           	callstack 0
   935   00FD90                     _gpio_pin_write_logic:
   936                           	callstack 29
   937   00FD90                     
   938                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     std_ReturnType ret = (std_ReturnType)0x01;
   939   00FD90  0E01               	movlw	1
   940   00FD92  6E2F               	movwf	gpio_pin_write_logic@ret^0,c
   941   00FD94                     
   942                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
   943   00FD94  5026               	movf	gpio_pin_write_logic@pin_config^0,w,c
   944   00FD96  1027               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
   945   00FD98  B4D8               	btfsc	status,2,c
   946   00FD9A  EFD1  F07E         	goto	u761
   947   00FD9E  EFD3  F07E         	goto	u760
   948   00FDA2                     u761:
   949   00FDA2  EFE4  F07E         	goto	l1492
   950   00FDA6                     u760:
   951   00FDA6  C026  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   952   00FDAA  C027  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   953   00FDAE  30DF               	rrcf	223,w,c
   954   00FDB0  32E8               	rrcf	wreg,f,c
   955   00FDB2  32E8               	rrcf	wreg,f,c
   956   00FDB4  0B07               	andlw	7
   957   00FDB6  6E29               	movwf	??_gpio_pin_write_logic^0,c
   958   00FDB8  0E07               	movlw	7
   959   00FDBA  6429               	cpfsgt	??_gpio_pin_write_logic^0,c
   960   00FDBC  EFE2  F07E         	goto	u771
   961   00FDC0  EFE4  F07E         	goto	u770
   962   00FDC4                     u771:
   963   00FDC4  EF47  F07F         	goto	l1500
   964   00FDC8                     u770:
   965   00FDC8                     l1492:
   966                           
   967                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:         ret = (std_ReturnType)0x00;
   968   00FDC8  0E00               	movlw	0
   969   00FDCA  6E2F               	movwf	gpio_pin_write_logic@ret^0,c
   970                           
   971                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     }
   972   00FDCC  EF5C  F07F         	goto	l1502
   973   00FDD0                     l1494:
   974                           
   975                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:                 (*lat_register[pin_config->port] &= ~((
      +                          uint8)1 << pin_config->pin));
   976   00FDD0  C026  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   977   00FDD4  C027  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   978   00FDD8  30DF               	rrcf	223,w,c
   979   00FDDA  32E8               	rrcf	wreg,f,c
   980   00FDDC  32E8               	rrcf	wreg,f,c
   981   00FDDE  0B07               	andlw	7
   982   00FDE0  6E29               	movwf	??_gpio_pin_write_logic^0,c
   983   00FDE2  0E01               	movlw	1
   984   00FDE4  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
   985   00FDE6  2A29               	incf	??_gpio_pin_write_logic^0,f,c
   986   00FDE8  EFF8  F07E         	goto	u784
   987   00FDEC                     u785:
   988   00FDEC  90D8               	bcf	status,0,c
   989   00FDEE  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   990   00FDF0                     u784:
   991   00FDF0  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
   992   00FDF2  EFF6  F07E         	goto	u785
   993   00FDF6  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   994   00FDF8  0AFF               	xorlw	255
   995   00FDFA  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
   996   00FDFC  C026  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   997   00FE00  C027  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   998   00FE04  50DF               	movf	223,w,c
   999   00FE06  0B07               	andlw	7
  1000   00FE08  6E2C               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1001   00FE0A  502C               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1002   00FE0C  0D02               	mullw	2
  1003   00FE0E  0E0B               	movlw	low _lat_register
  1004   00FE10  24F3               	addwf	243,w,c
  1005   00FE12  6ED9               	movwf	fsr2l,c
  1006   00FE14  0E00               	movlw	high _lat_register
  1007   00FE16  20F4               	addwfc	prodh,w,c
  1008   00FE18  6EDA               	movwf	fsr2h,c
  1009   00FE1A  CFDE F02D          	movff	postinc2,??_gpio_pin_write_logic+4
  1010   00FE1E  CFDD F02E          	movff	postdec2,??_gpio_pin_write_logic+5
  1011   00FE22  C02D  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1012   00FE26  C02E  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1013   00FE2A  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1014   00FE2C  16DF               	andwf	indf2,f,c
  1015                           
  1016                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 break;
  1017   00FE2E  EF5C  F07F         	goto	l1502
  1018   00FE32                     l1496:
  1019                           
  1020                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_register[pin_config->port] |= ((u
      +                          int8)1 << pin_config->pin));
  1021   00FE32  C026  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1022   00FE36  C027  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1023   00FE3A  30DF               	rrcf	223,w,c
  1024   00FE3C  32E8               	rrcf	wreg,f,c
  1025   00FE3E  32E8               	rrcf	wreg,f,c
  1026   00FE40  0B07               	andlw	7
  1027   00FE42  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1028   00FE44  0E01               	movlw	1
  1029   00FE46  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1030   00FE48  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1031   00FE4A  EF29  F07F         	goto	u794
  1032   00FE4E                     u795:
  1033   00FE4E  90D8               	bcf	status,0,c
  1034   00FE50  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1035   00FE52                     u794:
  1036   00FE52  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1037   00FE54  EF27  F07F         	goto	u795
  1038   00FE58  C026  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1039   00FE5C  C027  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1040   00FE60  50DF               	movf	223,w,c
  1041   00FE62  0B07               	andlw	7
  1042   00FE64  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1043   00FE66  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1044   00FE68  0D02               	mullw	2
  1045   00FE6A  0E0B               	movlw	low _lat_register
  1046   00FE6C  24F3               	addwf	243,w,c
  1047   00FE6E  6ED9               	movwf	fsr2l,c
  1048   00FE70  0E00               	movlw	high _lat_register
  1049   00FE72  20F4               	addwfc	prodh,w,c
  1050   00FE74  6EDA               	movwf	fsr2h,c
  1051   00FE76  CFDE F02C          	movff	postinc2,??_gpio_pin_write_logic+3
  1052   00FE7A  CFDD F02D          	movff	postdec2,??_gpio_pin_write_logic+4
  1053   00FE7E  C02C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1054   00FE82  C02D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1055   00FE86  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1056   00FE88  12DF               	iorwf	indf2,f,c
  1057                           
  1058                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 break;
  1059   00FE8A  EF5C  F07F         	goto	l1502
  1060   00FE8E                     l1500:
  1061   00FE8E  5028               	movf	gpio_pin_write_logic@logic^0,w,c
  1062   00FE90  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1063   00FE92  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1064                           
  1065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 1, Range of values is 0 to 0
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte            4     3 (average)
  1071                           ;	Chosen strategy is simple_byte
  1072   00FE94  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1073   00FE96  0A00               	xorlw	0	; case 0
  1074   00FE98  B4D8               	btfsc	status,2,c
  1075   00FE9A  EF51  F07F         	goto	l1814
  1076   00FE9E  EFE4  F07E         	goto	l1492
  1077   00FEA2                     l1814:
  1078                           
  1079                           ; Switch size 1, requested type "simple"
  1080                           ; Number of cases is 2, Range of values is 0 to 1
  1081                           ; switch strategies available:
  1082                           ; Name         Instructions Cycles
  1083                           ; simple_byte            7     4 (average)
  1084                           ;	Chosen strategy is simple_byte
  1085   00FEA2  5029               	movf	??_gpio_pin_write_logic^0,w,c
  1086   00FEA4  0A00               	xorlw	0	; case 0
  1087   00FEA6  B4D8               	btfsc	status,2,c
  1088   00FEA8  EFE8  F07E         	goto	l1494
  1089   00FEAC  0A01               	xorlw	1	; case 1
  1090   00FEAE  B4D8               	btfsc	status,2,c
  1091   00FEB0  EF19  F07F         	goto	l1496
  1092   00FEB4  EFE4  F07E         	goto	l1492
  1093   00FEB8                     l1502:
  1094                           
  1095                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     return ret;
  1096   00FEB8  502F               	movf	gpio_pin_write_logic@ret^0,w,c
  1097   00FEBA  0012               	return		;funcret
  1098   00FEBC                     __end_of_gpio_pin_write_logic:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _gpio_pin_direction_initialize *****************
  1102 ;; Defined at:
  1103 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1106 ;;		 -> segment1_enable(1), segment2_enable(1), seg1.segment_pins(4), seg1(5), 
  1107 ;;		 -> relay_initialize@pin_obj(1), led_initialize@led_pin(1), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  ret             1    8[COMRAM] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      unsigned char 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;Total ram usage:        9 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_gpio_pin_initialize
  1129 ;;		_button_initialize
  1130 ;;		_led_initialize
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text6
  1135   00FEBC                     __ptext6:
  1136                           	callstack 0
  1137   00FEBC                     _gpio_pin_direction_initialize:
  1138                           	callstack 27
  1139   00FEBC                     
  1140                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     std_ReturnType ret = (std_ReturnType)0x01;
  1141   00FEBC  0E01               	movlw	1
  1142   00FEBE  6E2E               	movwf	gpio_pin_direction_initialize@ret^0,c
  1143   00FEC0                     
  1144                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
  1145   00FEC0  5026               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1146   00FEC2  1027               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  1147   00FEC4  B4D8               	btfsc	status,2,c
  1148   00FEC6  EF67  F07F         	goto	u701
  1149   00FECA  EF69  F07F         	goto	u700
  1150   00FECE                     u701:
  1151   00FECE  EF7A  F07F         	goto	l1468
  1152   00FED2                     u700:
  1153   00FED2  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1154   00FED6  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1155   00FEDA  30DF               	rrcf	223,w,c
  1156   00FEDC  32E8               	rrcf	wreg,f,c
  1157   00FEDE  32E8               	rrcf	wreg,f,c
  1158   00FEE0  0B07               	andlw	7
  1159   00FEE2  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1160   00FEE4  0E07               	movlw	7
  1161   00FEE6  6428               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1162   00FEE8  EF78  F07F         	goto	u711
  1163   00FEEC  EF7A  F07F         	goto	u710
  1164   00FEF0                     u711:
  1165   00FEF0  EFDD  F07F         	goto	l1476
  1166   00FEF4                     u710:
  1167   00FEF4                     l1468:
  1168                           
  1169                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (std_ReturnType)0x00;
  1170   00FEF4  0E00               	movlw	0
  1171   00FEF6  6E2E               	movwf	gpio_pin_direction_initialize@ret^0,c
  1172                           
  1173                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     }
  1174   00FEF8  EFFE  F07F         	goto	l1478
  1175   00FEFC                     l1470:
  1176                           
  1177                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_register[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
  1178   00FEFC  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1179   00FF00  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1180   00FF04  30DF               	rrcf	223,w,c
  1181   00FF06  32E8               	rrcf	wreg,f,c
  1182   00FF08  32E8               	rrcf	wreg,f,c
  1183   00FF0A  0B07               	andlw	7
  1184   00FF0C  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1185   00FF0E  0E01               	movlw	1
  1186   00FF10  6E29               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1187   00FF12  2A28               	incf	??_gpio_pin_direction_initialize^0,f,c
  1188   00FF14  EF8E  F07F         	goto	u724
  1189   00FF18                     u725:
  1190   00FF18  90D8               	bcf	status,0,c
  1191   00FF1A  3629               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1192   00FF1C                     u724:
  1193   00FF1C  2E28               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1194   00FF1E  EF8C  F07F         	goto	u725
  1195   00FF22  5029               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1196   00FF24  0AFF               	xorlw	255
  1197   00FF26  6E2A               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1198   00FF28  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1199   00FF2C  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1200   00FF30  50DF               	movf	223,w,c
  1201   00FF32  0B07               	andlw	7
  1202   00FF34  6E2B               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1203   00FF36  502B               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1204   00FF38  0D02               	mullw	2
  1205   00FF3A  0E15               	movlw	low _tris_register
  1206   00FF3C  24F3               	addwf	243,w,c
  1207   00FF3E  6ED9               	movwf	fsr2l,c
  1208   00FF40  0E00               	movlw	high _tris_register
  1209   00FF42  20F4               	addwfc	prodh,w,c
  1210   00FF44  6EDA               	movwf	fsr2h,c
  1211   00FF46  CFDE F02C          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1212   00FF4A  CFDD F02D          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1213   00FF4E  C02C  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1214   00FF52  C02D  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1215   00FF56  502A               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1216   00FF58  16DF               	andwf	indf2,f,c
  1217                           
  1218                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  1219   00FF5A  EFFE  F07F         	goto	l1478
  1220   00FF5E                     l1472:
  1221                           
  1222                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_register[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
  1223   00FF5E  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1224   00FF62  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1225   00FF66  30DF               	rrcf	223,w,c
  1226   00FF68  32E8               	rrcf	wreg,f,c
  1227   00FF6A  32E8               	rrcf	wreg,f,c
  1228   00FF6C  0B07               	andlw	7
  1229   00FF6E  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1230   00FF70  0E01               	movlw	1
  1231   00FF72  6E29               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1232   00FF74  2A28               	incf	??_gpio_pin_direction_initialize^0,f,c
  1233   00FF76  EFBF  F07F         	goto	u734
  1234   00FF7A                     u735:
  1235   00FF7A  90D8               	bcf	status,0,c
  1236   00FF7C  3629               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1237   00FF7E                     u734:
  1238   00FF7E  2E28               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1239   00FF80  EFBD  F07F         	goto	u735
  1240   00FF84  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1241   00FF88  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1242   00FF8C  50DF               	movf	223,w,c
  1243   00FF8E  0B07               	andlw	7
  1244   00FF90  6E2A               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1245   00FF92  502A               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1246   00FF94  0D02               	mullw	2
  1247   00FF96  0E15               	movlw	low _tris_register
  1248   00FF98  24F3               	addwf	243,w,c
  1249   00FF9A  6ED9               	movwf	fsr2l,c
  1250   00FF9C  0E00               	movlw	high _tris_register
  1251   00FF9E  20F4               	addwfc	prodh,w,c
  1252   00FFA0  6EDA               	movwf	fsr2h,c
  1253   00FFA2  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1254   00FFA6  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1255   00FFAA  C02B  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1256   00FFAE  C02C  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1257   00FFB2  5029               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1258   00FFB4  12DF               	iorwf	indf2,f,c
  1259                           
  1260                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
  1261   00FFB6  EFFE  F07F         	goto	l1478
  1262   00FFBA                     l1476:
  1263   00FFBA  C026  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1264   00FFBE  C027  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1265   00FFC2  BCDF               	btfsc	indf2,6,c
  1266   00FFC4  EFE6  F07F         	goto	u741
  1267   00FFC8  EFE9  F07F         	goto	u740
  1268   00FFCC                     u741:
  1269   00FFCC  0E01               	movlw	1
  1270   00FFCE  EFEA  F07F         	goto	u750
  1271   00FFD2                     u740:
  1272   00FFD2  0E00               	movlw	0
  1273   00FFD4                     u750:
  1274   00FFD4  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1275   00FFD6  6A29               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1276                           
  1277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 1, Range of values is 0 to 0
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte            4     3 (average)
  1283                           ;	Chosen strategy is simple_byte
  1284   00FFD8  5029               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1285   00FFDA  0A00               	xorlw	0	; case 0
  1286   00FFDC  B4D8               	btfsc	status,2,c
  1287   00FFDE  EFF3  F07F         	goto	l1816
  1288   00FFE2  EF7A  F07F         	goto	l1468
  1289   00FFE6                     l1816:
  1290                           
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 2, Range of values is 0 to 1
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte            7     4 (average)
  1296                           ;	Chosen strategy is simple_byte
  1297   00FFE6  5028               	movf	??_gpio_pin_direction_initialize^0,w,c
  1298   00FFE8  0A00               	xorlw	0	; case 0
  1299   00FFEA  B4D8               	btfsc	status,2,c
  1300   00FFEC  EF7E  F07F         	goto	l1470
  1301   00FFF0  0A01               	xorlw	1	; case 1
  1302   00FFF2  B4D8               	btfsc	status,2,c
  1303   00FFF4  EFAF  F07F         	goto	l1472
  1304   00FFF8  EF7A  F07F         	goto	l1468
  1305   00FFFC                     l1478:
  1306                           
  1307                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  1308   00FFFC  502E               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1309   00FFFE  0012               	return		;funcret
  1310   010000                     __end_of_gpio_pin_direction_initialize:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function ___awmod *****************
  1314 ;; Defined at:
  1315 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  dividend        2    0[COMRAM] int 
  1318 ;;  divisor         2    2[COMRAM] int 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  sign            1    5[COMRAM] unsigned char 
  1321 ;;  counter         1    4[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    0[COMRAM] int 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;Total ram usage:        6 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text7
  1345   00FB36                     __ptext7:
  1346                           	callstack 0
  1347   00FB36                     ___awmod:
  1348                           	callstack 30
  1349   00FB36  0E00               	movlw	0
  1350   00FB38  6E2B               	movwf	___awmod@sign^0,c
  1351   00FB3A  BE27               	btfsc	(___awmod@dividend+1)^0,7,c
  1352   00FB3C  EFA4  F07D         	goto	u910
  1353   00FB40  EFA2  F07D         	goto	u911
  1354   00FB44                     u911:
  1355   00FB44  EFAA  F07D         	goto	l1604
  1356   00FB48                     u910:
  1357   00FB48  6C26               	negf	___awmod@dividend^0,c
  1358   00FB4A  1E27               	comf	(___awmod@dividend+1)^0,f,c
  1359   00FB4C  B0D8               	btfsc	status,0,c
  1360   00FB4E  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1361   00FB50  0E01               	movlw	1
  1362   00FB52  6E2B               	movwf	___awmod@sign^0,c
  1363   00FB54                     l1604:
  1364   00FB54  BE29               	btfsc	(___awmod@divisor+1)^0,7,c
  1365   00FB56  EFB1  F07D         	goto	u920
  1366   00FB5A  EFAF  F07D         	goto	u921
  1367   00FB5E                     u921:
  1368   00FB5E  EFB5  F07D         	goto	l1608
  1369   00FB62                     u920:
  1370   00FB62  6C28               	negf	___awmod@divisor^0,c
  1371   00FB64  1E29               	comf	(___awmod@divisor+1)^0,f,c
  1372   00FB66  B0D8               	btfsc	status,0,c
  1373   00FB68  2A29               	incf	(___awmod@divisor+1)^0,f,c
  1374   00FB6A                     l1608:
  1375   00FB6A  5028               	movf	___awmod@divisor^0,w,c
  1376   00FB6C  1029               	iorwf	(___awmod@divisor+1)^0,w,c
  1377   00FB6E  B4D8               	btfsc	status,2,c
  1378   00FB70  EFBC  F07D         	goto	u931
  1379   00FB74  EFBE  F07D         	goto	u930
  1380   00FB78                     u931:
  1381   00FB78  EFE2  F07D         	goto	l1624
  1382   00FB7C                     u930:
  1383   00FB7C  0E01               	movlw	1
  1384   00FB7E  6E2A               	movwf	___awmod@counter^0,c
  1385   00FB80  EFC6  F07D         	goto	l1614
  1386   00FB84                     l1612:
  1387   00FB84  90D8               	bcf	status,0,c
  1388   00FB86  3628               	rlcf	___awmod@divisor^0,f,c
  1389   00FB88  3629               	rlcf	(___awmod@divisor+1)^0,f,c
  1390   00FB8A  2A2A               	incf	___awmod@counter^0,f,c
  1391   00FB8C                     l1614:
  1392   00FB8C  AE29               	btfss	(___awmod@divisor+1)^0,7,c
  1393   00FB8E  EFCB  F07D         	goto	u941
  1394   00FB92  EFCD  F07D         	goto	u940
  1395   00FB96                     u941:
  1396   00FB96  EFC2  F07D         	goto	l1612
  1397   00FB9A                     u940:
  1398   00FB9A                     l1616:
  1399   00FB9A  5028               	movf	___awmod@divisor^0,w,c
  1400   00FB9C  5C26               	subwf	___awmod@dividend^0,w,c
  1401   00FB9E  5029               	movf	(___awmod@divisor+1)^0,w,c
  1402   00FBA0  5827               	subwfb	(___awmod@dividend+1)^0,w,c
  1403   00FBA2  A0D8               	btfss	status,0,c
  1404   00FBA4  EFD6  F07D         	goto	u951
  1405   00FBA8  EFD8  F07D         	goto	u950
  1406   00FBAC                     u951:
  1407   00FBAC  EFDC  F07D         	goto	l1620
  1408   00FBB0                     u950:
  1409   00FBB0  5028               	movf	___awmod@divisor^0,w,c
  1410   00FBB2  5E26               	subwf	___awmod@dividend^0,f,c
  1411   00FBB4  5029               	movf	(___awmod@divisor+1)^0,w,c
  1412   00FBB6  5A27               	subwfb	(___awmod@dividend+1)^0,f,c
  1413   00FBB8                     l1620:
  1414   00FBB8  90D8               	bcf	status,0,c
  1415   00FBBA  3229               	rrcf	(___awmod@divisor+1)^0,f,c
  1416   00FBBC  3228               	rrcf	___awmod@divisor^0,f,c
  1417   00FBBE  2E2A               	decfsz	___awmod@counter^0,f,c
  1418   00FBC0  EFCD  F07D         	goto	l1616
  1419   00FBC4                     l1624:
  1420   00FBC4  502B               	movf	___awmod@sign^0,w,c
  1421   00FBC6  B4D8               	btfsc	status,2,c
  1422   00FBC8  EFE8  F07D         	goto	u961
  1423   00FBCC  EFEA  F07D         	goto	u960
  1424   00FBD0                     u961:
  1425   00FBD0  EFEE  F07D         	goto	l1628
  1426   00FBD4                     u960:
  1427   00FBD4  6C26               	negf	___awmod@dividend^0,c
  1428   00FBD6  1E27               	comf	(___awmod@dividend+1)^0,f,c
  1429   00FBD8  B0D8               	btfsc	status,0,c
  1430   00FBDA  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1431   00FBDC                     l1628:
  1432   00FBDC  C026  F026         	movff	___awmod@dividend,?___awmod
  1433   00FBE0  C027  F027         	movff	___awmod@dividend+1,?___awmod+1
  1434   00FBE4  0012               	return		;funcret
  1435   00FBE6                     __end_of___awmod:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function ___awdiv *****************
  1439 ;; Defined at:
  1440 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  dividend        2    0[COMRAM] int 
  1443 ;;  divisor         2    2[COMRAM] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  quotient        2    6[COMRAM] int 
  1446 ;;  sign            1    5[COMRAM] unsigned char 
  1447 ;;  counter         1    4[COMRAM] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2    0[COMRAM] int 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;Total ram usage:        8 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text8
  1471   00FBE6                     __ptext8:
  1472                           	callstack 0
  1473   00FBE6                     ___awdiv:
  1474                           	callstack 30
  1475   00FBE6  0E00               	movlw	0
  1476   00FBE8  6E2B               	movwf	___awdiv@sign^0,c
  1477   00FBEA  BE29               	btfsc	(___awdiv@divisor+1)^0,7,c
  1478   00FBEC  EFFC  F07D         	goto	u850
  1479   00FBF0  EFFA  F07D         	goto	u851
  1480   00FBF4                     u851:
  1481   00FBF4  EF02  F07E         	goto	l1560
  1482   00FBF8                     u850:
  1483   00FBF8  6C28               	negf	___awdiv@divisor^0,c
  1484   00FBFA  1E29               	comf	(___awdiv@divisor+1)^0,f,c
  1485   00FBFC  B0D8               	btfsc	status,0,c
  1486   00FBFE  2A29               	incf	(___awdiv@divisor+1)^0,f,c
  1487   00FC00  0E01               	movlw	1
  1488   00FC02  6E2B               	movwf	___awdiv@sign^0,c
  1489   00FC04                     l1560:
  1490   00FC04  BE27               	btfsc	(___awdiv@dividend+1)^0,7,c
  1491   00FC06  EF09  F07E         	goto	u860
  1492   00FC0A  EF07  F07E         	goto	u861
  1493   00FC0E                     u861:
  1494   00FC0E  EF0F  F07E         	goto	l1566
  1495   00FC12                     u860:
  1496   00FC12  6C26               	negf	___awdiv@dividend^0,c
  1497   00FC14  1E27               	comf	(___awdiv@dividend+1)^0,f,c
  1498   00FC16  B0D8               	btfsc	status,0,c
  1499   00FC18  2A27               	incf	(___awdiv@dividend+1)^0,f,c
  1500   00FC1A  0E01               	movlw	1
  1501   00FC1C  1A2B               	xorwf	___awdiv@sign^0,f,c
  1502   00FC1E                     l1566:
  1503   00FC1E  0E00               	movlw	0
  1504   00FC20  6E2D               	movwf	(___awdiv@quotient+1)^0,c
  1505   00FC22  0E00               	movlw	0
  1506   00FC24  6E2C               	movwf	___awdiv@quotient^0,c
  1507   00FC26  5028               	movf	___awdiv@divisor^0,w,c
  1508   00FC28  1029               	iorwf	(___awdiv@divisor+1)^0,w,c
  1509   00FC2A  B4D8               	btfsc	status,2,c
  1510   00FC2C  EF1A  F07E         	goto	u871
  1511   00FC30  EF1C  F07E         	goto	u870
  1512   00FC34                     u871:
  1513   00FC34  EF44  F07E         	goto	l1588
  1514   00FC38                     u870:
  1515   00FC38  0E01               	movlw	1
  1516   00FC3A  6E2A               	movwf	___awdiv@counter^0,c
  1517   00FC3C  EF24  F07E         	goto	l1574
  1518   00FC40                     l1572:
  1519   00FC40  90D8               	bcf	status,0,c
  1520   00FC42  3628               	rlcf	___awdiv@divisor^0,f,c
  1521   00FC44  3629               	rlcf	(___awdiv@divisor+1)^0,f,c
  1522   00FC46  2A2A               	incf	___awdiv@counter^0,f,c
  1523   00FC48                     l1574:
  1524   00FC48  AE29               	btfss	(___awdiv@divisor+1)^0,7,c
  1525   00FC4A  EF29  F07E         	goto	u881
  1526   00FC4E  EF2B  F07E         	goto	u880
  1527   00FC52                     u881:
  1528   00FC52  EF20  F07E         	goto	l1572
  1529   00FC56                     u880:
  1530   00FC56                     l1576:
  1531   00FC56  90D8               	bcf	status,0,c
  1532   00FC58  362C               	rlcf	___awdiv@quotient^0,f,c
  1533   00FC5A  362D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1534   00FC5C  5028               	movf	___awdiv@divisor^0,w,c
  1535   00FC5E  5C26               	subwf	___awdiv@dividend^0,w,c
  1536   00FC60  5029               	movf	(___awdiv@divisor+1)^0,w,c
  1537   00FC62  5827               	subwfb	(___awdiv@dividend+1)^0,w,c
  1538   00FC64  A0D8               	btfss	status,0,c
  1539   00FC66  EF37  F07E         	goto	u891
  1540   00FC6A  EF39  F07E         	goto	u890
  1541   00FC6E                     u891:
  1542   00FC6E  EF3E  F07E         	goto	l1584
  1543   00FC72                     u890:
  1544   00FC72  5028               	movf	___awdiv@divisor^0,w,c
  1545   00FC74  5E26               	subwf	___awdiv@dividend^0,f,c
  1546   00FC76  5029               	movf	(___awdiv@divisor+1)^0,w,c
  1547   00FC78  5A27               	subwfb	(___awdiv@dividend+1)^0,f,c
  1548   00FC7A  802C               	bsf	___awdiv@quotient^0,0,c
  1549   00FC7C                     l1584:
  1550   00FC7C  90D8               	bcf	status,0,c
  1551   00FC7E  3229               	rrcf	(___awdiv@divisor+1)^0,f,c
  1552   00FC80  3228               	rrcf	___awdiv@divisor^0,f,c
  1553   00FC82  2E2A               	decfsz	___awdiv@counter^0,f,c
  1554   00FC84  EF2B  F07E         	goto	l1576
  1555   00FC88                     l1588:
  1556   00FC88  502B               	movf	___awdiv@sign^0,w,c
  1557   00FC8A  B4D8               	btfsc	status,2,c
  1558   00FC8C  EF4A  F07E         	goto	u901
  1559   00FC90  EF4C  F07E         	goto	u900
  1560   00FC94                     u901:
  1561   00FC94  EF50  F07E         	goto	l1592
  1562   00FC98                     u900:
  1563   00FC98  6C2C               	negf	___awdiv@quotient^0,c
  1564   00FC9A  1E2D               	comf	(___awdiv@quotient+1)^0,f,c
  1565   00FC9C  B0D8               	btfsc	status,0,c
  1566   00FC9E  2A2D               	incf	(___awdiv@quotient+1)^0,f,c
  1567   00FCA0                     l1592:
  1568   00FCA0  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  1569   00FCA4  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  1570   00FCA8  0012               	return		;funcret
  1571   00FCAA                     __end_of___awdiv:
  1572                           	callstack 0
  1573   000000                     
  1574                           	psect	rparam
  1575   000000                     
  1576                           	psect	config
  1577                           
  1578                           ; Padding undefined space
  1579   300000                     	org	3145728
  1580   300000  FF                 	db	255
  1581                           
  1582                           ;Config register CONFIG1H @ 0x300001
  1583                           ;	Oscillator Selection bits
  1584                           ;	OSC = HS, HS oscillator
  1585                           ;	Fail-Safe Clock Monitor Enable bit
  1586                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1587                           ;	Internal/External Oscillator Switchover bit
  1588                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1589   300001                     	org	3145729
  1590   300001  02                 	db	2
  1591                           
  1592                           ;Config register CONFIG2L @ 0x300002
  1593                           ;	Power-up Timer Enable bit
  1594                           ;	PWRT = OFF, PWRT disabled
  1595                           ;	Brown-out Reset Enable bits
  1596                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1597                           ;	Brown Out Reset Voltage bits
  1598                           ;	BORV = 1, 
  1599   300002                     	org	3145730
  1600   300002  09                 	db	9
  1601                           
  1602                           ;Config register CONFIG2H @ 0x300003
  1603                           ;	Watchdog Timer Enable bit
  1604                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1605                           ;	Watchdog Timer Postscale Select bits
  1606                           ;	WDTPS = 32768, 1:32768
  1607   300003                     	org	3145731
  1608   300003  1E                 	db	30
  1609                           
  1610                           ; Padding undefined space
  1611   300004                     	org	3145732
  1612   300004  FF                 	db	255
  1613                           
  1614                           ;Config register CONFIG3H @ 0x300005
  1615                           ;	CCP2 MUX bit
  1616                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1617                           ;	PORTB A/D Enable bit
  1618                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1619                           ;	Low-Power Timer1 Oscillator Enable bit
  1620                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1621                           ;	MCLR Pin Enable bit
  1622                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1623   300005                     	org	3145733
  1624   300005  81                 	db	129
  1625                           
  1626                           ;Config register CONFIG4L @ 0x300006
  1627                           ;	Stack Full/Underflow Reset Enable bit
  1628                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1629                           ;	Single-Supply ICSP Enable bit
  1630                           ;	LVP = OFF, Single-Supply ICSP disabled
  1631                           ;	Extended Instruction Set Enable bit
  1632                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1633                           ;	Background Debugger Enable bit
  1634                           ;	DEBUG = 0x1, unprogrammed default
  1635   300006                     	org	3145734
  1636   300006  81                 	db	129
  1637                           
  1638                           ; Padding undefined space
  1639   300007                     	org	3145735
  1640   300007  FF                 	db	255
  1641                           
  1642                           ;Config register CONFIG5L @ 0x300008
  1643                           ;	Code Protection bit
  1644                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1645                           ;	Code Protection bit
  1646                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1647                           ;	Code Protection bit
  1648                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1649                           ;	Code Protection bit
  1650                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1651   300008                     	org	3145736
  1652   300008  0F                 	db	15
  1653                           
  1654                           ;Config register CONFIG5H @ 0x300009
  1655                           ;	Boot Block Code Protection bit
  1656                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1657                           ;	Data EEPROM Code Protection bit
  1658                           ;	CPD = OFF, Data EEPROM not code-protected
  1659   300009                     	org	3145737
  1660   300009  C0                 	db	192
  1661                           
  1662                           ;Config register CONFIG6L @ 0x30000A
  1663                           ;	Write Protection bit
  1664                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1665                           ;	Write Protection bit
  1666                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1667                           ;	Write Protection bit
  1668                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1669                           ;	Write Protection bit
  1670                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1671   30000A                     	org	3145738
  1672   30000A  0F                 	db	15
  1673                           
  1674                           ;Config register CONFIG6H @ 0x30000B
  1675                           ;	Configuration Register Write Protection bit
  1676                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1677                           ;	Boot Block Write Protection bit
  1678                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1679                           ;	Data EEPROM Write Protection bit
  1680                           ;	WRTD = OFF, Data EEPROM not write-protected
  1681   30000B                     	org	3145739
  1682   30000B  E0                 	db	224
  1683                           
  1684                           ;Config register CONFIG7L @ 0x30000C
  1685                           ;	Table Read Protection bit
  1686                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1687                           ;	Table Read Protection bit
  1688                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1689                           ;	Table Read Protection bit
  1690                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1691                           ;	Table Read Protection bit
  1692                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1693   30000C                     	org	3145740
  1694   30000C  0F                 	db	15
  1695                           
  1696                           ;Config register CONFIG7H @ 0x30000D
  1697                           ;	Boot Block Table Read Protection bit
  1698                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1699   30000D                     	org	3145741
  1700   30000D  40                 	db	64
  1701                           tosu	equ	0xFFF
  1702                           tosh	equ	0xFFE
  1703                           tosl	equ	0xFFD
  1704                           stkptr	equ	0xFFC
  1705                           pclatu	equ	0xFFB
  1706                           pclath	equ	0xFFA
  1707                           pcl	equ	0xFF9
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           indf0	equ	0xFEF
  1715                           postinc0	equ	0xFEE
  1716                           postdec0	equ	0xFED
  1717                           preinc0	equ	0xFEC
  1718                           plusw0	equ	0xFEB
  1719                           fsr0h	equ	0xFEA
  1720                           fsr0l	equ	0xFE9
  1721                           wreg	equ	0xFE8
  1722                           indf1	equ	0xFE7
  1723                           postinc1	equ	0xFE6
  1724                           postdec1	equ	0xFE5
  1725                           preinc1	equ	0xFE4
  1726                           plusw1	equ	0xFE3
  1727                           fsr1h	equ	0xFE2
  1728                           fsr1l	equ	0xFE1
  1729                           bsr	equ	0xFE0
  1730                           indf2	equ	0xFDF
  1731                           postinc2	equ	0xFDE
  1732                           postdec2	equ	0xFDD
  1733                           preinc2	equ	0xFDC
  1734                           plusw2	equ	0xFDB
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        37
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      67
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    seven_segment_write_number@seg	PTR const struct . size(2) Largest target is 5
		 -> seg1(COMRAM[5]), 

    seven_segment_initialize@seg	PTR const struct . size(2) Largest target is 5
		 -> seg1(COMRAM[5]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> segment1_enable(COMRAM[1]), segment2_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 5
		 -> segment1_enable(COMRAM[1]), segment2_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@led_pin(COMRAM[1]), 
		 -> led_turn_on@led_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> segment1_enable(COMRAM[1]), segment2_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@led_pin(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _seven_segment_write_number->_gpio_pin_write_logic
    _application_initialize->_seven_segment_initialize
    _seven_segment_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16474
                                             17 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
             _application_initialize
               _gpio_pin_write_logic
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     1      3    3619
                                             10 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    8798
                _gpio_pin_initialize
           _seven_segment_initialize
 ---------------------------------------------------------------------------------
 (2) _seven_segment_initialize                             3     1      2    4506
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    4292
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    3067
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _application_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _seven_segment_initialize
       _gpio_pin_initialize
   _gpio_pin_write_logic
   _seven_segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      43       1       52.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      39        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 24 03:36:41 2023

                           ___awdiv@sign 002B                                      l164 FFFE  
                                    l183 FEBA                                      l512 FCA8  
                                    l264 F99C                                      l273 FA34  
                                    l525 FBE4                                      l197 FAA0  
                                    l278 FB34                                      u700 FED2  
                                    u701 FECE                                      u710 FEF4  
                                    u711 FEF0                                      u800 FA4C  
                                    u801 FA48                                      u810 FA6E  
                                    u811 FA6A                                      u900 FC98  
                                    u740 FFD2                                      u724 FF1C  
                                    u820 F9E6                                      u901 FC94  
                                    u741 FFCC                                      u725 FF18  
                                    u821 F9E2                                      u910 FB48  
                                    u750 FFD4                                      u734 FF7E  
                                    u830 FAB4                                      u911 FB44  
                                    u735 FF7A                                      u831 FAB0  
                                    u920 FB62                                      u760 FDA6  
                                    u840 FAC4                                      u921 FB5E  
                                    u761 FDA2                                      u841 FAC0  
                                    u850 FBF8                                      u930 FB7C  
                                    u770 FDC8                                      u851 FBF4  
                                    u931 FB78                                      u771 FDC4  
                                    u860 FC12                                      u940 FB9A  
                                    u861 FC0E                                      u941 FB96  
                                    u870 FC38                                      u950 FBB0  
                                    u871 FC34                                      u951 FBAC  
                                    u880 FC56                                      u960 FBD4  
                                    u784 FDF0                                      u881 FC52  
                                    u961 FBD0                                      u785 FDEC  
                                    u890 FC72                                      u794 FE52  
                                    u891 FC6E                                      u795 FE4E  
          gpio_pin_initialize@pin_config 0030                                      _ret 0043  
                           ___awmod@sign 002B                      led_initialize@F2560 0042  
                                    prod 0FF3                                      wreg 0FE8  
                  relay_initialize@F2556 003E              ?_seven_segment_write_number 0030  
                                   l1500 FE8E                                     l1502 FEB8  
                                   l1510 FA36                                     l1600 FB48  
                                   l1520 FA9E                                     l1512 FA3A  
                                   l1610 FB7C                                     l1602 FB50  
                                   l1514 FA4C                                     l1530 F9EE  
                                   l1620 FBB8                                     l1612 FB84  
                                   l1604 FB54                                     l1516 FA6E  
                                   l1532 FA32                                     l1524 F9D4  
                                   l1540 FAA2                                     l1622 FBBE  
                                   l1614 FB8C                                     l1606 FB62  
                                   l1470 FEFC                                     l1462 FEBC  
                                   l1518 FA76                                     l1526 F9D4  
                                   l1542 FAB4                                     l1560 FC04  
                                   l1552 FBE6                                     l1616 FB9A  
                                   l1624 FBC4                                     l1608 FB6A  
                                   l1472 FF5E                                     l1464 FEC0  
                                   l1528 F9E6                                     l1536 F972  
                                   l1544 FAC4                                     l1800 FD66  
                                   l1570 FC38                                     l1562 FC12  
                                   l1554 FBEA                                     l1626 FBD4  
                                   l1618 FBB0                                     l1466 FED2  
                                   l1490 FDA6                                     l1546 FACC  
                                   l1538 FAA2                                     l1802 FD6A  
                                   l1580 FC72                                     l1572 FC40  
                                   l1564 FC1A                                     l1556 FBF8  
                                   l1628 FBDC                                     l1476 FFBA  
                                   l1468 FEF4                                     l1492 FDC8  
                                   l1548 FB32                                     l1804 FD86  
                                   l1590 FC98                                     l1582 FC7A  
                                   l1574 FC48                                     l1566 FC1E  
                                   l1558 FC00                                     l1478 FFFC  
                                   l1814 FEA2                                     l1494 FDD0  
                                   l1486 FD90                                     l1592 FCA0  
                                   l1584 FC7C                                     l1576 FC56  
                                   l1568 FC26                                     l1816 FFE6  
                                   l1496 FE32                                     l1488 FD94  
                                   l1586 FC82                                     l1578 FC5C  
                                   l1588 FC88                                     l1596 FB36  
                                   l1780 FCAA                                     l1598 FB3A  
                                   l1790 FCEC                                     l1782 FCAE  
                                   l1792 FCFC                                     l1794 FD0E  
                                   l1796 FD32                                     l1788 FCB6  
                                   l1798 FD54                                     u1110 FD86  
                                   u1111 FD82                                     u1127 FCF2  
                                   u1137 FD4A                                     _LATA 0F89  
                                   _LATB 0F8A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                                   _seg1 001F                                     _main FCAA  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                     _gpio_pin_write_logic FD90  
                                  ?_main 0026                 ??_application_initialize 0037  
                        __end_of___awdiv FCAA                          __end_of___awmod FBE6  
                        ___awdiv@divisor 0028                          ___awdiv@counter 002A  
                    relay_turn_off@F2566 003C                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    tablat 0FF5  
                                  status 0FD8           ?_gpio_pin_direction_initialize 0026  
                        __initialization F99E                             __end_of_main FD90  
                  ?_gpio_pin_write_logic 0026                                   ??_main 0037  
                          __activetblptr 0002                         led_turn_on@F2565 0041  
                       ___awdiv@dividend 0026                            _tris_register 0015  
                              ??___awdiv 002A                                ??___awmod 002A  
                                 clear_0 F9C4                         ___awdiv@quotient 002C  
                        ___awmod@divisor 0028                                   isa$std 0001  
                                 _number 003A                          ___awmod@counter 002A  
                           __pdataCOMRAM 0001                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization F9CA  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0029  
                         __pcstackCOMRAM 0026                   _application_initialize F972  
                             __pnvCOMRAM 0043                        led_turn_off@F2570 0040  
                        led_toggle@F2575 003F                 _seven_segment_initialize F9D4  
            seven_segment_initialize@seg 0034              seven_segment_initialize@ret 0036  
                        _segment1_enable 0025                          _segment2_enable 0024  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize FA36                                  ___awdiv FBE6  
                                ___awmod FB36                                  __pcinit F99E  
                                __ramtop 1000                                  __ptext0 FCAA  
                                __ptext1 FAA2                                  __ptext2 F972  
                                __ptext3 F9D4                                  __ptext4 FA36  
                                __ptext5 FD90                                  __ptext6 FEBC  
                                __ptext7 FB36                                  __ptext8 FBE6  
        ??_gpio_pin_direction_initialize 0028                         ___awmod@dividend 0026  
                   ?_gpio_pin_initialize 0030                     end_of_initialization F9CA  
                          __Lmediumconst 0000                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                    ??_gpio_pin_initialize 0032  
                             main@number 0038                       relay_turn_on@F2561 003D  
                      relay_toggle@F2571 003B                            __pidataCOMRAM F94D  
                    start_initialization F99E             ??_seven_segment_write_number 0033  
  __end_of_gpio_pin_direction_initialize 0000            _gpio_pin_direction_initialize FEBC  
                           _lat_register 000B                  ?_application_initialize 0026  
             ??_seven_segment_initialize 0036                              __pbssCOMRAM 003A  
         __end_of_application_initialize F99E           gpio_pin_write_logic@pin_config 0026  
                               ?___awdiv 0026                                 ?___awmod 0026  
              gpio_pin_write_logic@logic 0028         gpio_pin_direction_initialize@ret 002E  
gpio_pin_direction_initialize@pin_config 0026       __end_of_seven_segment_write_number FB36  
             _seven_segment_write_number FAA2                   gpio_pin_initialize@ret 0033  
                gpio_pin_write_logic@ret 002F                                copy_data0 F9B2  
                               __Hrparam 0000                                 __Lrparam 0000  
       __end_of_seven_segment_initialize FA36            seven_segment_write_number@seg 0030  
          seven_segment_write_number@ret 0033              __end_of_gpio_pin_initialize FAA2  
                               isa$xinst 0000         seven_segment_write_number@number 0032  
           __end_of_gpio_pin_write_logic FEBC                ?_seven_segment_initialize 0034  
                          _port_register 0001  
