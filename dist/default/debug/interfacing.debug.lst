

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jul 25 02:16:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   001586                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_register
    64   001586  80                 	db	128
    65   001587  0F                 	db	15
    66   001588  81                 	db	129
    67   001589  0F                 	db	15
    68   00158A  82                 	db	130
    69   00158B  0F                 	db	15
    70   00158C  83                 	db	131
    71   00158D  0F                 	db	15
    72   00158E  84                 	db	132
    73   00158F  0F                 	db	15
    74                           
    75                           ;initializer for _lat_register
    76   001590  89                 	db	137
    77   001591  0F                 	db	15
    78   001592  8A                 	db	138
    79   001593  0F                 	db	15
    80   001594  8B                 	db	139
    81   001595  0F                 	db	15
    82   001596  8C                 	db	140
    83   001597  0F                 	db	15
    84   001598  8D                 	db	141
    85   001599  0F                 	db	15
    86                           
    87                           ;initializer for _tris_register
    88   00159A  92                 	db	146
    89   00159B  0F                 	db	15
    90   00159C  93                 	db	147
    91   00159D  0F                 	db	15
    92   00159E  94                 	db	148
    93   00159F  0F                 	db	15
    94   0015A0  95                 	db	149
    95   0015A1  0F                 	db	15
    96   0015A2  96                 	db	150
    97   0015A3  0F                 	db	15
    98                           
    99                           ;initializer for _keypad1
   100   0015A4  02                 	db	2
   101   0015A5  0A                 	db	10
   102   0015A6  12                 	db	18
   103   0015A7  1A                 	db	26
   104   0015A8  62                 	db	98
   105   0015A9  6A                 	db	106
   106   0015AA  72                 	db	114
   107   0015AB  7A                 	db	122
   108                           
   109                           	psect	smallconst
   110   001000                     __psmallconst:
   111                           	callstack 0
   112   001000  00                 	db	0
   113   001001                     _btn_values:
   114                           	callstack 0
   115   001001  37                 	db	55
   116   001002  38                 	db	56
   117   001003  39                 	db	57
   118   001004  2F                 	db	47
   119   001005  34                 	db	52
   120   001006  35                 	db	53
   121   001007  36                 	db	54
   122   001008  2A                 	db	42
   123   001009  31                 	db	49
   124   00100A  32                 	db	50
   125   00100B  33                 	db	51
   126   00100C  2D                 	db	45
   127   00100D  23                 	db	35
   128   00100E  30                 	db	48
   129   00100F  3D                 	db	61
   130   001010  2B                 	db	43
   131   001011                     __end_of_btn_values:
   132                           	callstack 0
   133   001011  00                 	db	0	; dummy byte at the end
   134   000000                     
   135                           	psect	nvCOMRAM
   136   000045                     __pnvCOMRAM:
   137                           	callstack 0
   138   000045                     _ret:
   139                           	callstack 0
   140   000045                     	ds	1
   141   000000                     _PORTE	set	3972
   142   000000                     _PORTD	set	3971
   143   000000                     _PORTC	set	3970
   144   000000                     _PORTB	set	3969
   145   000000                     _PORTA	set	3968
   146   000000                     _LATA	set	3977
   147   000000                     _TRISA	set	3986
   148   000000                     _TRISE	set	3990
   149   000000                     _TRISD	set	3989
   150   000000                     _TRISC	set	3988
   151   000000                     _TRISB	set	3987
   152   000000                     _LATE	set	3981
   153   000000                     _LATD	set	3980
   154   000000                     _LATC	set	3979
   155   000000                     _LATB	set	3978
   156                           
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160   001520                     __pcinit:
   161                           	callstack 0
   162   001520                     start_initialization:
   163                           	callstack 0
   164   001520                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (38 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169   001520  0E86               	movlw	low __pidataCOMRAM
   170   001522  6EF6               	movwf	tblptrl,c
   171   001524  0E15               	movlw	high __pidataCOMRAM
   172   001526  6EF7               	movwf	tblptrh,c
   173   001528  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174   00152A  6EF8               	movwf	tblptru,c
   175   00152C  EE00  F001         	lfsr	0,__pdataCOMRAM
   176   001530  EE10 F026          	lfsr	1,38
   177   001534                     copy_data0:
   178   001534  0009               	tblrd		*+
   179   001536  CFF5 FFEE          	movff	tablat,postinc0
   180   00153A  50E5               	movf	postdec1,w,c
   181   00153C  50E1               	movf	fsr1l,w,c
   182   00153E  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (9 bytes)
   185   001540  EE00  F03C         	lfsr	0,__pbssCOMRAM
   186   001544  0E09               	movlw	9
   187   001546                     clear_0:
   188   001546  6AEE               	clrf	postinc0,c
   189   001548  06E8               	decf	wreg,f,c
   190   00154A  E1FD               	bnz	clear_0
   191   00154C                     end_of_initialization:
   192                           	callstack 0
   193   00154C                     __end_of__initialization:
   194                           	callstack 0
   195   00154C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196   00154E  6EF8               	movwf	tblptru,c
   197   001550  0100               	movlb	0
   198   001552  EFAB  F00A         	goto	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMRAM
   201   00003C                     __pbssCOMRAM:
   202                           	callstack 0
   203   00003C                     relay_toggle@F2571:
   204                           	callstack 0
   205   00003C                     	ds	1
   206   00003D                     relay_turn_off@F2566:
   207                           	callstack 0
   208   00003D                     	ds	1
   209   00003E                     relay_turn_on@F2561:
   210                           	callstack 0
   211   00003E                     	ds	1
   212   00003F                     relay_initialize@F2556:
   213                           	callstack 0
   214   00003F                     	ds	1
   215   000040                     led_toggle@F2575:
   216                           	callstack 0
   217   000040                     	ds	1
   218   000041                     led_turn_off@F2570:
   219                           	callstack 0
   220   000041                     	ds	1
   221   000042                     led_turn_on@F2565:
   222                           	callstack 0
   223   000042                     	ds	1
   224   000043                     led_initialize@F2560:
   225                           	callstack 0
   226   000043                     	ds	1
   227   000044                     _keypad_value:
   228                           	callstack 0
   229   000044                     	ds	1
   230                           
   231                           	psect	dataCOMRAM
   232   000001                     __pdataCOMRAM:
   233                           	callstack 0
   234   000001                     _port_register:
   235                           	callstack 0
   236   000001                     	ds	10
   237   00000B                     _lat_register:
   238                           	callstack 0
   239   00000B                     	ds	10
   240   000015                     _tris_register:
   241                           	callstack 0
   242   000015                     	ds	10
   243   00001F                     _keypad1:
   244                           	callstack 0
   245   00001F                     	ds	8
   246                           
   247                           	psect	cstackCOMRAM
   248   000027                     __pcstackCOMRAM:
   249                           	callstack 0
   250   000027                     gpio_pin_direction_initialize@pin_config:
   251                           	callstack 0
   252   000027                     gpio_pin_write_logic@pin_config:
   253                           	callstack 0
   254   000027                     gpio_pin_read_logic@pin_config:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x0
   258   000027                     	ds	2
   259   000029                     ??_gpio_pin_direction_initialize:
   260   000029                     gpio_pin_write_logic@logic:
   261                           	callstack 0
   262   000029                     gpio_pin_read_logic@logic:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266   000029                     	ds	1
   267   00002A                     ??_gpio_pin_write_logic:
   268                           
   269                           ; 1 bytes @ 0x3
   270   00002A                     	ds	1
   271   00002B                     ??_gpio_pin_read_logic:
   272                           
   273                           ; 1 bytes @ 0x4
   274   00002B                     	ds	4
   275   00002F                     gpio_pin_direction_initialize@ret:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x8
   279   00002F                     	ds	1
   280   000030                     gpio_pin_write_logic@ret:
   281                           	callstack 0
   282   000030                     gpio_pin_read_logic@ret:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x9
   286   000030                     	ds	1
   287   000031                     gpio_pin_initialize@pin_config:
   288                           	callstack 0
   289   000031                     keypad_get_value@keypad:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0xA
   293   000031                     	ds	2
   294   000033                     ??_gpio_pin_initialize:
   295   000033                     keypad_get_value@value:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xC
   299   000033                     	ds	1
   300   000034                     gpio_pin_initialize@ret:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xD
   304   000034                     	ds	1
   305   000035                     ??_keypad_get_value:
   306   000035                     keypad_initialize@keypad:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xE
   310   000035                     	ds	2
   311   000037                     ??_keypad_initialize:
   312   000037                     keypad_get_value@ret:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x10
   316   000037                     	ds	1
   317   000038                     keypad_get_value@col_logic:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x11
   321   000038                     	ds	1
   322   000039                     keypad_initialize@ret:
   323                           	callstack 0
   324   000039                     keypad_get_value@row_counter2:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x12
   328   000039                     	ds	1
   329   00003A                     keypad_initialize@row_counter:
   330                           	callstack 0
   331   00003A                     keypad_get_value@row_counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x13
   335   00003A                     	ds	1
   336   00003B                     keypad_initialize@col_counter:
   337                           	callstack 0
   338   00003B                     keypad_get_value@col_counter:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x14
   342   00003B                     	ds	1
   343   00003C                     
   344                           ; 1 bytes @ 0x15
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 64 in file "application.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  2  225[None  ] int 
   357 ;; Registers used:
   358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called: 3
   370 ;; This function calls:
   371 ;;		_application_initialize
   372 ;;		_keypad_get_value
   373 ;;		_keypad_initialize
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text0
   380   001556                     __ptext0:
   381                           	callstack 0
   382   001556                     _main:
   383                           	callstack 28
   384   001556                     
   385                           ;application.c: 65:     ret = keypad_initialize(&keypad1);
   386   001556  0E1F               	movlw	low _keypad1
   387   001558  6E35               	movwf	keypad_initialize@keypad^0,c
   388   00155A  0E00               	movlw	high _keypad1
   389   00155C  6E36               	movwf	(keypad_initialize@keypad+1)^0,c
   390   00155E  EC1E  F00A         	call	_keypad_initialize	;wreg free
   391   001562  6E45               	movwf	_ret^0,c
   392   001564                     
   393                           ;application.c: 66:     application_initialize();
   394   001564  ECD6  F00A         	call	_application_initialize	;wreg free
   395   001568                     l1785:
   396                           
   397                           ;application.c: 69:         ret = keypad_get_value(&keypad1 , &keypad_value);
   398   001568  0E1F               	movlw	low _keypad1
   399   00156A  6E31               	movwf	keypad_get_value@keypad^0,c
   400   00156C  0E00               	movlw	high _keypad1
   401   00156E  6E32               	movwf	(keypad_get_value@keypad+1)^0,c
   402   001570  0E44               	movlw	low _keypad_value
   403   001572  6E33               	movwf	keypad_get_value@value^0,c
   404   001574  0E00               	movlw	high _keypad_value
   405   001576  6E34               	movwf	(keypad_get_value@value+1)^0,c
   406   001578  EC41  F009         	call	_keypad_get_value	;wreg free
   407   00157C  6E45               	movwf	_ret^0,c
   408   00157E  EFB4  F00A         	goto	l1785
   409   001582  EF00  F000         	goto	start
   410   001586                     __end_of_main:
   411                           	callstack 0
   412                           
   413 ;; *************** function _keypad_initialize *****************
   414 ;; Defined at:
   415 ;;		line 24 in file "ECU_Layer/Keypad/ecu_keypad.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  keypad          2   14[COMRAM] PTR const struct .
   418 ;;		 -> keypad1(8), 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  col_counter     1   20[COMRAM] unsigned char 
   421 ;;  row_counter     1   19[COMRAM] unsigned char 
   422 ;;  ret             1   18[COMRAM] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      unsigned char 
   425 ;; Registers used:
   426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;Total ram usage:        7 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; Hardware stack levels required when called: 2
   439 ;; This function calls:
   440 ;;		_gpio_pin_direction_initialize
   441 ;;		_gpio_pin_initialize
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448   00143C                     __ptext1:
   449                           	callstack 0
   450   00143C                     _keypad_initialize:
   451                           	callstack 28
   452   00143C                     
   453                           ;ECU_Layer/Keypad/ecu_keypad.c: 26:     if(keypad == ((void*)0)){
   454   00143C  5035               	movf	keypad_initialize@keypad^0,w,c
   455   00143E  1036               	iorwf	(keypad_initialize@keypad+1)^0,w,c
   456   001440  A4D8               	btfss	status,2,c
   457   001442  EF25  F00A         	goto	u821
   458   001446  EF27  F00A         	goto	u820
   459   00144A                     u821:
   460   00144A  EF2B  F00A         	goto	l1549
   461   00144E                     u820:
   462   00144E                     
   463                           ;ECU_Layer/Keypad/ecu_keypad.c: 27:         ret = (std_ReturnType)0x00;
   464   00144E  0E00               	movlw	0
   465   001450  6E39               	movwf	keypad_initialize@ret^0,c
   466                           
   467                           ;ECU_Layer/Keypad/ecu_keypad.c: 28:     }
   468   001452  EF58  F00A         	goto	l1573
   469   001456                     l1549:
   470                           
   471                           ;ECU_Layer/Keypad/ecu_keypad.c: 30:         for(uint8 row_counter = 0 ; row_counter < 4 
      +                          ; row_counter++){
   472   001456  0E00               	movlw	0
   473   001458  6E3A               	movwf	keypad_initialize@row_counter^0,c
   474   00145A                     l1555:
   475   00145A  503A               	movf	keypad_initialize@row_counter^0,w,c
   476   00145C  2435               	addwf	keypad_initialize@keypad^0,w,c
   477   00145E  6E31               	movwf	gpio_pin_initialize@pin_config^0,c
   478   001460  0E00               	movlw	0
   479   001462  2036               	addwfc	(keypad_initialize@keypad+1)^0,w,c
   480   001464  6E32               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   481   001466  EC5A  F00A         	call	_gpio_pin_initialize	;wreg free
   482   00146A                     
   483                           ;ECU_Layer/Keypad/ecu_keypad.c: 32:         }
   484   00146A  2A3A               	incf	keypad_initialize@row_counter^0,f,c
   485   00146C  0E03               	movlw	3
   486   00146E  643A               	cpfsgt	keypad_initialize@row_counter^0,c
   487   001470  EF3C  F00A         	goto	u831
   488   001474  EF3E  F00A         	goto	u830
   489   001478                     u831:
   490   001478  EF2D  F00A         	goto	l1555
   491   00147C                     u830:
   492   00147C                     
   493                           ;ECU_Layer/Keypad/ecu_keypad.c: 33:         for(uint8 col_counter = 0 ; col_counter < 4 
      +                          ; col_counter++){
   494   00147C  0E00               	movlw	0
   495   00147E  6E3B               	movwf	keypad_initialize@col_counter^0,c
   496   001480                     l1567:
   497                           
   498                           ;ECU_Layer/Keypad/ecu_keypad.c: 34:             ret = gpio_pin_direction_initialize(&(ke
      +                          ypad->keypad_columns_pins[col_counter]));
   499   001480  503B               	movf	keypad_initialize@col_counter^0,w,c
   500   001482  2435               	addwf	keypad_initialize@keypad^0,w,c
   501   001484  6E37               	movwf	??_keypad_initialize^0,c
   502   001486  0E00               	movlw	0
   503   001488  2036               	addwfc	(keypad_initialize@keypad+1)^0,w,c
   504   00148A  6E38               	movwf	(??_keypad_initialize+1)^0,c
   505   00148C  0E04               	movlw	4
   506   00148E  2437               	addwf	??_keypad_initialize^0,w,c
   507   001490  6E27               	movwf	gpio_pin_direction_initialize@pin_config^0,c
   508   001492  0E00               	movlw	0
   509   001494  2038               	addwfc	(??_keypad_initialize+1)^0,w,c
   510   001496  6E28               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
   511   001498  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
   512   00149C  6E39               	movwf	keypad_initialize@ret^0,c
   513   00149E                     
   514                           ;ECU_Layer/Keypad/ecu_keypad.c: 35:         }
   515   00149E  2A3B               	incf	keypad_initialize@col_counter^0,f,c
   516   0014A0  0E03               	movlw	3
   517   0014A2  643B               	cpfsgt	keypad_initialize@col_counter^0,c
   518   0014A4  EF56  F00A         	goto	u841
   519   0014A8  EF58  F00A         	goto	u840
   520   0014AC                     u841:
   521   0014AC  EF40  F00A         	goto	l1567
   522   0014B0                     u840:
   523   0014B0                     l1573:
   524                           
   525                           ;ECU_Layer/Keypad/ecu_keypad.c: 37:     return ret;
   526   0014B0  5039               	movf	keypad_initialize@ret^0,w,c
   527   0014B2  0012               	return		;funcret
   528   0014B4                     __end_of_keypad_initialize:
   529                           	callstack 0
   530                           
   531 ;; *************** function _gpio_pin_initialize *****************
   532 ;; Defined at:
   533 ;;		line 122 in file "MCAL_Layer/GPIO/hal_gpio.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  pin_config      2   10[COMRAM] PTR const struct .
   536 ;;		 -> relay_initialize@pin_obj(1), keypad1.keypad_rows_pins(4), keypad1(8), 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  ret             1   13[COMRAM] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      unsigned char 
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        4 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		_gpio_pin_direction_initialize
   557 ;;		_gpio_pin_write_logic
   558 ;; This function is called by:
   559 ;;		_keypad_initialize
   560 ;;		_dc_motor_initialize
   561 ;;		_seven_segment_initialize
   562 ;;		_relay_initialize
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text2
   567   0014B4                     __ptext2:
   568                           	callstack 0
   569   0014B4                     _gpio_pin_initialize:
   570                           	callstack 28
   571   0014B4                     
   572                           ;MCAL_Layer/GPIO/hal_gpio.c: 123:     std_ReturnType ret = (std_ReturnType)0x01;
   573   0014B4  0E01               	movlw	1
   574   0014B6  6E34               	movwf	gpio_pin_initialize@ret^0,c
   575   0014B8                     
   576                           ;MCAL_Layer/GPIO/hal_gpio.c: 124:     if(pin_config == ((void*)0) || pin_config->pin > 8
      +                           -1){
   577   0014B8  5031               	movf	gpio_pin_initialize@pin_config^0,w,c
   578   0014BA  1032               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
   579   0014BC  B4D8               	btfsc	status,2,c
   580   0014BE  EF63  F00A         	goto	u801
   581   0014C2  EF65  F00A         	goto	u800
   582   0014C6                     u801:
   583   0014C6  EF76  F00A         	goto	l1535
   584   0014CA                     u800:
   585   0014CA  C031  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   586   0014CE  C032  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   587   0014D2  30DF               	rrcf	223,w,c
   588   0014D4  32E8               	rrcf	wreg,f,c
   589   0014D6  32E8               	rrcf	wreg,f,c
   590   0014D8  0B07               	andlw	7
   591   0014DA  6E33               	movwf	??_gpio_pin_initialize^0,c
   592   0014DC  0E07               	movlw	7
   593   0014DE  6433               	cpfsgt	??_gpio_pin_initialize^0,c
   594   0014E0  EF74  F00A         	goto	u811
   595   0014E4  EF76  F00A         	goto	u810
   596   0014E8                     u811:
   597   0014E8  EF7A  F00A         	goto	l1537
   598   0014EC                     u810:
   599   0014EC                     l1535:
   600                           
   601                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:         ret = (std_ReturnType)0x00;
   602   0014EC  0E00               	movlw	0
   603   0014EE  6E34               	movwf	gpio_pin_initialize@ret^0,c
   604                           
   605                           ;MCAL_Layer/GPIO/hal_gpio.c: 126:     }
   606   0014F0  EF8E  F00A         	goto	l1539
   607   0014F4                     l1537:
   608                           
   609                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:         gpio_pin_direction_initialize(pin_config);
   610   0014F4  C031  F027         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
   611   0014F8  C032  F028         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
   612   0014FC  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
   613                           
   614                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:         gpio_pin_write_logic(pin_config , pin_config->
      +                          logic);
   615   001500  C031  F027         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
   616   001504  C032  F028         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
   617   001508  C031  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   618   00150C  C032  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   619   001510  0E00               	movlw	0
   620   001512  BEDF               	btfsc	indf2,7,c
   621   001514  0E01               	movlw	1
   622   001516  6E29               	movwf	gpio_pin_write_logic@logic^0,c
   623   001518  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   624   00151C                     l1539:
   625                           
   626                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     return ret;
   627   00151C  5034               	movf	gpio_pin_initialize@ret^0,w,c
   628   00151E  0012               	return		;funcret
   629   001520                     __end_of_gpio_pin_initialize:
   630                           	callstack 0
   631                           
   632 ;; *************** function _gpio_pin_direction_initialize *****************
   633 ;; Defined at:
   634 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  pin_config      2    0[COMRAM] PTR const struct .
   637 ;;		 -> relay_initialize@pin_obj(1), keypad1.keypad_columns_pins(4), keypad1.keypad_rows_pins(4), keypad1(8), 
   638 ;;		 -> led_initialize@led_pin(1), 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  ret             1    8[COMRAM] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      unsigned char 
   643 ;; Registers used:
   644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        9 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_gpio_pin_initialize
   660 ;;		_keypad_initialize
   661 ;;		_button_initialize
   662 ;;		_led_initialize
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text3
   667   001012                     __ptext3:
   668                           	callstack 0
   669   001012                     _gpio_pin_direction_initialize:
   670                           	callstack 28
   671   001012                     
   672                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     std_ReturnType ret = (std_ReturnType)0x01;
   673   001012  0E01               	movlw	1
   674   001014  6E2F               	movwf	gpio_pin_direction_initialize@ret^0,c
   675   001016                     
   676                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
   677   001016  5027               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
   678   001018  1028               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
   679   00101A  B4D8               	btfsc	status,2,c
   680   00101C  EF12  F008         	goto	u661
   681   001020  EF14  F008         	goto	u660
   682   001024                     u661:
   683   001024  EF25  F008         	goto	l1471
   684   001028                     u660:
   685   001028  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   686   00102C  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   687   001030  30DF               	rrcf	223,w,c
   688   001032  32E8               	rrcf	wreg,f,c
   689   001034  32E8               	rrcf	wreg,f,c
   690   001036  0B07               	andlw	7
   691   001038  6E29               	movwf	??_gpio_pin_direction_initialize^0,c
   692   00103A  0E07               	movlw	7
   693   00103C  6429               	cpfsgt	??_gpio_pin_direction_initialize^0,c
   694   00103E  EF23  F008         	goto	u671
   695   001042  EF25  F008         	goto	u670
   696   001046                     u671:
   697   001046  EF88  F008         	goto	l1479
   698   00104A                     u670:
   699   00104A                     l1471:
   700                           
   701                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (std_ReturnType)0x00;
   702   00104A  0E00               	movlw	0
   703   00104C  6E2F               	movwf	gpio_pin_direction_initialize@ret^0,c
   704                           
   705                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     }
   706   00104E  EFA9  F008         	goto	l1481
   707   001052                     l1473:
   708                           
   709                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_register[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
   710   001052  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   711   001056  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   712   00105A  30DF               	rrcf	223,w,c
   713   00105C  32E8               	rrcf	wreg,f,c
   714   00105E  32E8               	rrcf	wreg,f,c
   715   001060  0B07               	andlw	7
   716   001062  6E29               	movwf	??_gpio_pin_direction_initialize^0,c
   717   001064  0E01               	movlw	1
   718   001066  6E2A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   719   001068  2A29               	incf	??_gpio_pin_direction_initialize^0,f,c
   720   00106A  EF39  F008         	goto	u684
   721   00106E                     u685:
   722   00106E  90D8               	bcf	status,0,c
   723   001070  362A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   724   001072                     u684:
   725   001072  2E29               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   726   001074  EF37  F008         	goto	u685
   727   001078  502A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   728   00107A  0AFF               	xorlw	255
   729   00107C  6E2B               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   730   00107E  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   731   001082  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   732   001086  50DF               	movf	223,w,c
   733   001088  0B07               	andlw	7
   734   00108A  6E2C               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
   735   00108C  502C               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
   736   00108E  0D02               	mullw	2
   737   001090  0E15               	movlw	low _tris_register
   738   001092  24F3               	addwf	243,w,c
   739   001094  6ED9               	movwf	fsr2l,c
   740   001096  0E00               	movlw	high _tris_register
   741   001098  20F4               	addwfc	prodh,w,c
   742   00109A  6EDA               	movwf	fsr2h,c
   743   00109C  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_initialize+4
   744   0010A0  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_initialize+5
   745   0010A4  C02D  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
   746   0010A8  C02E  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
   747   0010AC  502B               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   748   0010AE  16DF               	andwf	indf2,f,c
   749                           
   750                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
   751   0010B0  EFA9  F008         	goto	l1481
   752   0010B4                     l1475:
   753                           
   754                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_register[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
   755   0010B4  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   756   0010B8  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   757   0010BC  30DF               	rrcf	223,w,c
   758   0010BE  32E8               	rrcf	wreg,f,c
   759   0010C0  32E8               	rrcf	wreg,f,c
   760   0010C2  0B07               	andlw	7
   761   0010C4  6E29               	movwf	??_gpio_pin_direction_initialize^0,c
   762   0010C6  0E01               	movlw	1
   763   0010C8  6E2A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   764   0010CA  2A29               	incf	??_gpio_pin_direction_initialize^0,f,c
   765   0010CC  EF6A  F008         	goto	u694
   766   0010D0                     u695:
   767   0010D0  90D8               	bcf	status,0,c
   768   0010D2  362A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   769   0010D4                     u694:
   770   0010D4  2E29               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   771   0010D6  EF68  F008         	goto	u695
   772   0010DA  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   773   0010DE  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   774   0010E2  50DF               	movf	223,w,c
   775   0010E4  0B07               	andlw	7
   776   0010E6  6E2B               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   777   0010E8  502B               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   778   0010EA  0D02               	mullw	2
   779   0010EC  0E15               	movlw	low _tris_register
   780   0010EE  24F3               	addwf	243,w,c
   781   0010F0  6ED9               	movwf	fsr2l,c
   782   0010F2  0E00               	movlw	high _tris_register
   783   0010F4  20F4               	addwfc	prodh,w,c
   784   0010F6  6EDA               	movwf	fsr2h,c
   785   0010F8  CFDE F02C          	movff	postinc2,??_gpio_pin_direction_initialize+3
   786   0010FC  CFDD F02D          	movff	postdec2,??_gpio_pin_direction_initialize+4
   787   001100  C02C  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
   788   001104  C02D  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
   789   001108  502A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   790   00110A  12DF               	iorwf	indf2,f,c
   791                           
   792                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
   793   00110C  EFA9  F008         	goto	l1481
   794   001110                     l1479:
   795   001110  C027  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   796   001114  C028  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   797   001118  BCDF               	btfsc	indf2,6,c
   798   00111A  EF91  F008         	goto	u701
   799   00111E  EF94  F008         	goto	u700
   800   001122                     u701:
   801   001122  0E01               	movlw	1
   802   001124  EF95  F008         	goto	u710
   803   001128                     u700:
   804   001128  0E00               	movlw	0
   805   00112A                     u710:
   806   00112A  6E29               	movwf	??_gpio_pin_direction_initialize^0,c
   807   00112C  6A2A               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
   808                           
   809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   810                           ; Switch size 1, requested type "simple"
   811                           ; Number of cases is 1, Range of values is 0 to 0
   812                           ; switch strategies available:
   813                           ; Name         Instructions Cycles
   814                           ; simple_byte            4     3 (average)
   815                           ;	Chosen strategy is simple_byte
   816   00112E  502A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   817   001130  0A00               	xorlw	0	; case 0
   818   001132  B4D8               	btfsc	status,2,c
   819   001134  EF9E  F008         	goto	l1843
   820   001138  EF25  F008         	goto	l1471
   821   00113C                     l1843:
   822                           
   823                           ; Switch size 1, requested type "simple"
   824                           ; Number of cases is 2, Range of values is 0 to 1
   825                           ; switch strategies available:
   826                           ; Name         Instructions Cycles
   827                           ; simple_byte            7     4 (average)
   828                           ;	Chosen strategy is simple_byte
   829   00113C  5029               	movf	??_gpio_pin_direction_initialize^0,w,c
   830   00113E  0A00               	xorlw	0	; case 0
   831   001140  B4D8               	btfsc	status,2,c
   832   001142  EF29  F008         	goto	l1473
   833   001146  0A01               	xorlw	1	; case 1
   834   001148  B4D8               	btfsc	status,2,c
   835   00114A  EF5A  F008         	goto	l1475
   836   00114E  EF25  F008         	goto	l1471
   837   001152                     l1481:
   838                           
   839                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
   840   001152  502F               	movf	gpio_pin_direction_initialize@ret^0,w,c
   841   001154  0012               	return		;funcret
   842   001156                     __end_of_gpio_pin_direction_initialize:
   843                           	callstack 0
   844                           
   845 ;; *************** function _keypad_get_value *****************
   846 ;; Defined at:
   847 ;;		line 48 in file "ECU_Layer/Keypad/ecu_keypad.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  keypad          2   10[COMRAM] PTR const struct .
   850 ;;		 -> keypad1(8), 
   851 ;;  value           2   12[COMRAM] PTR unsigned char 
   852 ;;		 -> keypad_value(1), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  col_counter     1   20[COMRAM] unsigned char 
   855 ;;  row_counter2    1   18[COMRAM] unsigned char 
   856 ;;  row_counter     1   19[COMRAM] unsigned char 
   857 ;;  col_logic       1   17[COMRAM] unsigned char 
   858 ;;  ret             1   16[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      unsigned char 
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;Total ram usage:       11 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 1
   875 ;; This function calls:
   876 ;;		_gpio_pin_read_logic
   877 ;;		_gpio_pin_write_logic
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text4
   884   001282                     __ptext4:
   885                           	callstack 0
   886   001282                     _keypad_get_value:
   887                           	callstack 29
   888   001282                     
   889                           ;ECU_Layer/Keypad/ecu_keypad.c: 50:     uint8 col_logic = 0;
   890   001282  0E00               	movlw	0
   891   001284  6E38               	movwf	keypad_get_value@col_logic^0,c
   892   001286                     
   893                           ;ECU_Layer/Keypad/ecu_keypad.c: 51:     if((keypad == ((void*)0)) || (value == ((void*)0
      +                          ))){
   894   001286  5031               	movf	keypad_get_value@keypad^0,w,c
   895   001288  1032               	iorwf	(keypad_get_value@keypad+1)^0,w,c
   896   00128A  B4D8               	btfsc	status,2,c
   897   00128C  EF4A  F009         	goto	u851
   898   001290  EF4C  F009         	goto	u850
   899   001294                     u851:
   900   001294  EF55  F009         	goto	l1583
   901   001298                     u850:
   902   001298  5033               	movf	keypad_get_value@value^0,w,c
   903   00129A  1034               	iorwf	(keypad_get_value@value+1)^0,w,c
   904   00129C  A4D8               	btfss	status,2,c
   905   00129E  EF53  F009         	goto	u861
   906   0012A2  EF55  F009         	goto	u860
   907   0012A6                     u861:
   908   0012A6  EF59  F009         	goto	l1585
   909   0012AA                     u860:
   910   0012AA                     l1583:
   911                           
   912                           ;ECU_Layer/Keypad/ecu_keypad.c: 52:         ret = (std_ReturnType)0x00;
   913   0012AA  0E00               	movlw	0
   914   0012AC  6E37               	movwf	keypad_get_value@ret^0,c
   915                           
   916                           ;ECU_Layer/Keypad/ecu_keypad.c: 53:     }
   917   0012AE  EFC0  F009         	goto	l1625
   918   0012B2                     l1585:
   919                           
   920                           ;ECU_Layer/Keypad/ecu_keypad.c: 55:         for(uint8 row_counter=0; row_counter < 4 ; r
      +                          ow_counter++){
   921   0012B2  0E00               	movlw	0
   922   0012B4  6E3A               	movwf	keypad_get_value@row_counter^0,c
   923   0012B6                     l1591:
   924                           
   925                           ;ECU_Layer/Keypad/ecu_keypad.c: 56:             for(uint8 row_counter2 = 0; row_counter2
      +                           < 4 ; row_counter2++){
   926   0012B6  0E00               	movlw	0
   927   0012B8  6E39               	movwf	keypad_get_value@row_counter2^0,c
   928   0012BA                     l1597:
   929   0012BA  5039               	movf	keypad_get_value@row_counter2^0,w,c
   930   0012BC  2431               	addwf	keypad_get_value@keypad^0,w,c
   931   0012BE  6E27               	movwf	gpio_pin_write_logic@pin_config^0,c
   932   0012C0  0E00               	movlw	0
   933   0012C2  2032               	addwfc	(keypad_get_value@keypad+1)^0,w,c
   934   0012C4  6E28               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   935   0012C6  0E00               	movlw	0
   936   0012C8  6E29               	movwf	gpio_pin_write_logic@logic^0,c
   937   0012CA  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   938   0012CE                     
   939                           ;ECU_Layer/Keypad/ecu_keypad.c: 58:             }
   940   0012CE  2A39               	incf	keypad_get_value@row_counter2^0,f,c
   941   0012D0  0E03               	movlw	3
   942   0012D2  6439               	cpfsgt	keypad_get_value@row_counter2^0,c
   943   0012D4  EF6E  F009         	goto	u871
   944   0012D8  EF70  F009         	goto	u870
   945   0012DC                     u871:
   946   0012DC  EF5D  F009         	goto	l1597
   947   0012E0                     u870:
   948   0012E0                     
   949                           ;ECU_Layer/Keypad/ecu_keypad.c: 59:             gpio_pin_write_logic(&(keypad->keypad_ro
      +                          ws_pins[row_counter]) , GPIO_HIGH);
   950   0012E0  503A               	movf	keypad_get_value@row_counter^0,w,c
   951   0012E2  2431               	addwf	keypad_get_value@keypad^0,w,c
   952   0012E4  6E27               	movwf	gpio_pin_write_logic@pin_config^0,c
   953   0012E6  0E00               	movlw	0
   954   0012E8  2032               	addwfc	(keypad_get_value@keypad+1)^0,w,c
   955   0012EA  6E28               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   956   0012EC  0E01               	movlw	1
   957   0012EE  6E29               	movwf	gpio_pin_write_logic@logic^0,c
   958   0012F0  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   959   0012F4                     
   960                           ;ECU_Layer/Keypad/ecu_keypad.c: 60:             for(uint8 col_counter = 0 ; col_counter 
      +                          < 4 ; col_counter++){
   961   0012F4  0E00               	movlw	0
   962   0012F6  6E3B               	movwf	keypad_get_value@col_counter^0,c
   963   0012F8                     l1611:
   964                           
   965                           ;ECU_Layer/Keypad/ecu_keypad.c: 61:                  ret = gpio_pin_read_logic(&(keypad-
      +                          >keypad_columns_pins[col_counter]),&col_logic);
   966   0012F8  503B               	movf	keypad_get_value@col_counter^0,w,c
   967   0012FA  2431               	addwf	keypad_get_value@keypad^0,w,c
   968   0012FC  6E35               	movwf	??_keypad_get_value^0,c
   969   0012FE  0E00               	movlw	0
   970   001300  2032               	addwfc	(keypad_get_value@keypad+1)^0,w,c
   971   001302  6E36               	movwf	(??_keypad_get_value+1)^0,c
   972   001304  0E04               	movlw	4
   973   001306  2435               	addwf	??_keypad_get_value^0,w,c
   974   001308  6E27               	movwf	gpio_pin_read_logic@pin_config^0,c
   975   00130A  0E00               	movlw	0
   976   00130C  2036               	addwfc	(??_keypad_get_value+1)^0,w,c
   977   00130E  6E28               	movwf	(gpio_pin_read_logic@pin_config+1)^0,c
   978   001310  0E38               	movlw	low keypad_get_value@col_logic
   979   001312  6E29               	movwf	gpio_pin_read_logic@logic^0,c
   980   001314  0E00               	movlw	high keypad_get_value@col_logic
   981   001316  6E2A               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   982   001318  ECC2  F009         	call	_gpio_pin_read_logic	;wreg free
   983   00131C  6E37               	movwf	keypad_get_value@ret^0,c
   984   00131E                     
   985                           ;ECU_Layer/Keypad/ecu_keypad.c: 62:                  if(col_logic == GPIO_HIGH){
   986   00131E  0438               	decf	keypad_get_value@col_logic^0,w,c
   987   001320  A4D8               	btfss	status,2,c
   988   001322  EF95  F009         	goto	u881
   989   001326  EF97  F009         	goto	u880
   990   00132A                     u881:
   991   00132A  EFAE  F009         	goto	l1617
   992   00132E                     u880:
   993   00132E                     
   994                           ;ECU_Layer/Keypad/ecu_keypad.c: 63:                      *value = btn_values[row_counter
      +                          ][col_counter];
   995   00132E  503A               	movf	keypad_get_value@row_counter^0,w,c
   996   001330  0D04               	mullw	4
   997   001332  0E01               	movlw	low _btn_values
   998   001334  24F3               	addwf	243,w,c
   999   001336  6E35               	movwf	??_keypad_get_value^0,c
  1000   001338  0E10               	movlw	high _btn_values
  1001   00133A  20F4               	addwfc	prodh,w,c
  1002   00133C  6E36               	movwf	(??_keypad_get_value+1)^0,c
  1003   00133E  503B               	movf	keypad_get_value@col_counter^0,w,c
  1004   001340  2635               	addwf	??_keypad_get_value^0,f,c
  1005   001342  0E00               	movlw	0
  1006   001344  2236               	addwfc	(??_keypad_get_value+1)^0,f,c
  1007   001346  C035  FFF6         	movff	??_keypad_get_value,tblptrl
  1008   00134A  C036  FFF7         	movff	??_keypad_get_value+1,tblptrh
  1009   00134E                     	if	0	;tblptru may be non-zero
  1010   00134E                     	endif
  1011   00134E                     	if	0	;tblptru may be non-zero
  1012   00134E                     	endif
  1013   00134E  C033  FFD9         	movff	keypad_get_value@value,fsr2l
  1014   001352  C034  FFDA         	movff	keypad_get_value@value+1,fsr2h
  1015   001356  0008               	tblrd		*
  1016   001358  CFF5 FFDF          	movff	tablat,indf2
  1017   00135C                     l1617:
  1018                           
  1019                           ;ECU_Layer/Keypad/ecu_keypad.c: 65:             }
  1020   00135C  2A3B               	incf	keypad_get_value@col_counter^0,f,c
  1021   00135E  0E03               	movlw	3
  1022   001360  643B               	cpfsgt	keypad_get_value@col_counter^0,c
  1023   001362  EFB5  F009         	goto	u891
  1024   001366  EFB7  F009         	goto	u890
  1025   00136A                     u891:
  1026   00136A  EF7C  F009         	goto	l1611
  1027   00136E                     u890:
  1028   00136E                     
  1029                           ;ECU_Layer/Keypad/ecu_keypad.c: 66:         }
  1030   00136E  2A3A               	incf	keypad_get_value@row_counter^0,f,c
  1031   001370  0E03               	movlw	3
  1032   001372  643A               	cpfsgt	keypad_get_value@row_counter^0,c
  1033   001374  EFBE  F009         	goto	u901
  1034   001378  EFC0  F009         	goto	u900
  1035   00137C                     u901:
  1036   00137C  EF5B  F009         	goto	l1591
  1037   001380                     u900:
  1038   001380                     l1625:
  1039                           
  1040                           ;ECU_Layer/Keypad/ecu_keypad.c: 68:     return ret;
  1041   001380  5037               	movf	keypad_get_value@ret^0,w,c
  1042   001382  0012               	return		;funcret
  1043   001384                     __end_of_keypad_get_value:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _gpio_pin_write_logic *****************
  1047 ;; Defined at:
  1048 ;;		line 74 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1051 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), keypad1.keypad_rows_pins(4), 
  1052 ;;		 -> keypad1(8), led_turn_off@led_pin(1), led_turn_on@led_pin(1), 
  1053 ;;  logic           1    2[COMRAM] enum E2480
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  ret             1    9[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      unsigned char 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:       10 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_gpio_pin_initialize
  1075 ;;		_keypad_get_value
  1076 ;;		_led_turn_on
  1077 ;;		_led_turn_off
  1078 ;;		_dc_motor_move_right
  1079 ;;		_dc_motor_move_left
  1080 ;;		_dc_motor_stop
  1081 ;;		_seven_segment_write_number
  1082 ;;		_relay_turn_on
  1083 ;;		_relay_turn_off
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text5
  1088   001156                     __ptext5:
  1089                           	callstack 0
  1090   001156                     _gpio_pin_write_logic:
  1091                           	callstack 28
  1092   001156                     
  1093                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     std_ReturnType ret = (std_ReturnType)0x01;
  1094   001156  0E01               	movlw	1
  1095   001158  6E30               	movwf	gpio_pin_write_logic@ret^0,c
  1096   00115A                     
  1097                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
  1098   00115A  5027               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1099   00115C  1028               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1100   00115E  B4D8               	btfsc	status,2,c
  1101   001160  EFB4  F008         	goto	u721
  1102   001164  EFB6  F008         	goto	u720
  1103   001168                     u721:
  1104   001168  EFC7  F008         	goto	l1495
  1105   00116C                     u720:
  1106   00116C  C027  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1107   001170  C028  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1108   001174  30DF               	rrcf	223,w,c
  1109   001176  32E8               	rrcf	wreg,f,c
  1110   001178  32E8               	rrcf	wreg,f,c
  1111   00117A  0B07               	andlw	7
  1112   00117C  6E2A               	movwf	??_gpio_pin_write_logic^0,c
  1113   00117E  0E07               	movlw	7
  1114   001180  642A               	cpfsgt	??_gpio_pin_write_logic^0,c
  1115   001182  EFC5  F008         	goto	u731
  1116   001186  EFC7  F008         	goto	u730
  1117   00118A                     u731:
  1118   00118A  EF2A  F009         	goto	l1503
  1119   00118E                     u730:
  1120   00118E                     l1495:
  1121                           
  1122                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:         ret = (std_ReturnType)0x00;
  1123   00118E  0E00               	movlw	0
  1124   001190  6E30               	movwf	gpio_pin_write_logic@ret^0,c
  1125                           
  1126                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     }
  1127   001192  EF3F  F009         	goto	l1505
  1128   001196                     l1497:
  1129                           
  1130                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:                 (*lat_register[pin_config->port] &= ~((
      +                          uint8)1 << pin_config->pin));
  1131   001196  C027  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1132   00119A  C028  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1133   00119E  30DF               	rrcf	223,w,c
  1134   0011A0  32E8               	rrcf	wreg,f,c
  1135   0011A2  32E8               	rrcf	wreg,f,c
  1136   0011A4  0B07               	andlw	7
  1137   0011A6  6E2A               	movwf	??_gpio_pin_write_logic^0,c
  1138   0011A8  0E01               	movlw	1
  1139   0011AA  6E2B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1140   0011AC  2A2A               	incf	??_gpio_pin_write_logic^0,f,c
  1141   0011AE  EFDB  F008         	goto	u744
  1142   0011B2                     u745:
  1143   0011B2  90D8               	bcf	status,0,c
  1144   0011B4  362B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1145   0011B6                     u744:
  1146   0011B6  2E2A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1147   0011B8  EFD9  F008         	goto	u745
  1148   0011BC  502B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1149   0011BE  0AFF               	xorlw	255
  1150   0011C0  6E2C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1151   0011C2  C027  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1152   0011C6  C028  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1153   0011CA  50DF               	movf	223,w,c
  1154   0011CC  0B07               	andlw	7
  1155   0011CE  6E2D               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1156   0011D0  502D               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1157   0011D2  0D02               	mullw	2
  1158   0011D4  0E0B               	movlw	low _lat_register
  1159   0011D6  24F3               	addwf	243,w,c
  1160   0011D8  6ED9               	movwf	fsr2l,c
  1161   0011DA  0E00               	movlw	high _lat_register
  1162   0011DC  20F4               	addwfc	prodh,w,c
  1163   0011DE  6EDA               	movwf	fsr2h,c
  1164   0011E0  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+4
  1165   0011E4  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+5
  1166   0011E8  C02E  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1167   0011EC  C02F  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1168   0011F0  502C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1169   0011F2  16DF               	andwf	indf2,f,c
  1170                           
  1171                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 break;
  1172   0011F4  EF3F  F009         	goto	l1505
  1173   0011F8                     l1499:
  1174                           
  1175                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_register[pin_config->port] |= ((u
      +                          int8)1 << pin_config->pin));
  1176   0011F8  C027  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1177   0011FC  C028  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1178   001200  30DF               	rrcf	223,w,c
  1179   001202  32E8               	rrcf	wreg,f,c
  1180   001204  32E8               	rrcf	wreg,f,c
  1181   001206  0B07               	andlw	7
  1182   001208  6E2A               	movwf	??_gpio_pin_write_logic^0,c
  1183   00120A  0E01               	movlw	1
  1184   00120C  6E2B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1185   00120E  2A2A               	incf	??_gpio_pin_write_logic^0,f,c
  1186   001210  EF0C  F009         	goto	u754
  1187   001214                     u755:
  1188   001214  90D8               	bcf	status,0,c
  1189   001216  362B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1190   001218                     u754:
  1191   001218  2E2A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1192   00121A  EF0A  F009         	goto	u755
  1193   00121E  C027  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1194   001222  C028  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1195   001226  50DF               	movf	223,w,c
  1196   001228  0B07               	andlw	7
  1197   00122A  6E2C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1198   00122C  502C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1199   00122E  0D02               	mullw	2
  1200   001230  0E0B               	movlw	low _lat_register
  1201   001232  24F3               	addwf	243,w,c
  1202   001234  6ED9               	movwf	fsr2l,c
  1203   001236  0E00               	movlw	high _lat_register
  1204   001238  20F4               	addwfc	prodh,w,c
  1205   00123A  6EDA               	movwf	fsr2h,c
  1206   00123C  CFDE F02D          	movff	postinc2,??_gpio_pin_write_logic+3
  1207   001240  CFDD F02E          	movff	postdec2,??_gpio_pin_write_logic+4
  1208   001244  C02D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1209   001248  C02E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1210   00124C  502B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1211   00124E  12DF               	iorwf	indf2,f,c
  1212                           
  1213                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 break;
  1214   001250  EF3F  F009         	goto	l1505
  1215   001254                     l1503:
  1216   001254  5029               	movf	gpio_pin_write_logic@logic^0,w,c
  1217   001256  6E2A               	movwf	??_gpio_pin_write_logic^0,c
  1218   001258  6A2B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1219                           
  1220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 1, Range of values is 0 to 0
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte            4     3 (average)
  1226                           ;	Chosen strategy is simple_byte
  1227   00125A  502B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1228   00125C  0A00               	xorlw	0	; case 0
  1229   00125E  B4D8               	btfsc	status,2,c
  1230   001260  EF34  F009         	goto	l1845
  1231   001264  EFC7  F008         	goto	l1495
  1232   001268                     l1845:
  1233                           
  1234                           ; Switch size 1, requested type "simple"
  1235                           ; Number of cases is 2, Range of values is 0 to 1
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte            7     4 (average)
  1239                           ;	Chosen strategy is simple_byte
  1240   001268  502A               	movf	??_gpio_pin_write_logic^0,w,c
  1241   00126A  0A00               	xorlw	0	; case 0
  1242   00126C  B4D8               	btfsc	status,2,c
  1243   00126E  EFCB  F008         	goto	l1497
  1244   001272  0A01               	xorlw	1	; case 1
  1245   001274  B4D8               	btfsc	status,2,c
  1246   001276  EFFC  F008         	goto	l1499
  1247   00127A  EFC7  F008         	goto	l1495
  1248   00127E                     l1505:
  1249                           
  1250                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     return ret;
  1251   00127E  5030               	movf	gpio_pin_write_logic@ret^0,w,c
  1252   001280  0012               	return		;funcret
  1253   001282                     __end_of_gpio_pin_write_logic:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _gpio_pin_read_logic *****************
  1257 ;; Defined at:
  1258 ;;		line 102 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1261 ;;		 -> keypad1.keypad_columns_pins(4), keypad1(8), 
  1262 ;;  logic           2    2[COMRAM] PTR enum E2480
  1263 ;;		 -> keypad_get_value@col_logic(1), button_read_state@pin_logic_status(1), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  ret             1    9[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:       10 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_keypad_get_value
  1285 ;;		_button_read_state
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text6
  1290   001384                     __ptext6:
  1291                           	callstack 0
  1292   001384                     _gpio_pin_read_logic:
  1293                           	callstack 29
  1294   001384                     
  1295                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     std_ReturnType ret = (std_ReturnType)0x01;
  1296   001384  0E01               	movlw	1
  1297   001386  6E30               	movwf	gpio_pin_read_logic@ret^0,c
  1298   001388                     
  1299                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:     if(pin_config == ((void*)0) || logic == ((void*)0)
      +                           || pin_config->pin > 8 -1){
  1300   001388  5027               	movf	gpio_pin_read_logic@pin_config^0,w,c
  1301   00138A  1028               	iorwf	(gpio_pin_read_logic@pin_config+1)^0,w,c
  1302   00138C  B4D8               	btfsc	status,2,c
  1303   00138E  EFCB  F009         	goto	u761
  1304   001392  EFCD  F009         	goto	u760
  1305   001396                     u761:
  1306   001396  EFE7  F009         	goto	l1521
  1307   00139A                     u760:
  1308   00139A  5029               	movf	gpio_pin_read_logic@logic^0,w,c
  1309   00139C  102A               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  1310   00139E  B4D8               	btfsc	status,2,c
  1311   0013A0  EFD4  F009         	goto	u771
  1312   0013A4  EFD6  F009         	goto	u770
  1313   0013A8                     u771:
  1314   0013A8  EFE7  F009         	goto	l1521
  1315   0013AC                     u770:
  1316   0013AC  C027  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1317   0013B0  C028  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1318   0013B4  30DF               	rrcf	223,w,c
  1319   0013B6  32E8               	rrcf	wreg,f,c
  1320   0013B8  32E8               	rrcf	wreg,f,c
  1321   0013BA  0B07               	andlw	7
  1322   0013BC  6E2B               	movwf	??_gpio_pin_read_logic^0,c
  1323   0013BE  0E07               	movlw	7
  1324   0013C0  642B               	cpfsgt	??_gpio_pin_read_logic^0,c
  1325   0013C2  EFE5  F009         	goto	u781
  1326   0013C6  EFE7  F009         	goto	u780
  1327   0013CA                     u781:
  1328   0013CA  EFEB  F009         	goto	l1523
  1329   0013CE                     u780:
  1330   0013CE                     l1521:
  1331                           
  1332                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:         ret = (std_ReturnType)0x00;
  1333   0013CE  0E00               	movlw	0
  1334   0013D0  6E30               	movwf	gpio_pin_read_logic@ret^0,c
  1335                           
  1336                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:     }
  1337   0013D2  EF1C  F00A         	goto	l1525
  1338   0013D6                     l1523:
  1339                           
  1340                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:         *logic = ((*port_register[pin_config->port] >>
      +                           pin_config->pin) & (uint8)1 );
  1341   0013D6  C027  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1342   0013DA  C028  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1343   0013DE  30DF               	rrcf	223,w,c
  1344   0013E0  32E8               	rrcf	wreg,f,c
  1345   0013E2  32E8               	rrcf	wreg,f,c
  1346   0013E4  0B07               	andlw	7
  1347   0013E6  6E2B               	movwf	??_gpio_pin_read_logic^0,c
  1348   0013E8  C027  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1349   0013EC  C028  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1350   0013F0  50DF               	movf	223,w,c
  1351   0013F2  0B07               	andlw	7
  1352   0013F4  6E2C               	movwf	(??_gpio_pin_read_logic+1)^0,c
  1353   0013F6  502C               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  1354   0013F8  0D02               	mullw	2
  1355   0013FA  0E01               	movlw	low _port_register
  1356   0013FC  24F3               	addwf	243,w,c
  1357   0013FE  6ED9               	movwf	fsr2l,c
  1358   001400  0E00               	movlw	high _port_register
  1359   001402  20F4               	addwfc	prodh,w,c
  1360   001404  6EDA               	movwf	fsr2h,c
  1361   001406  CFDE F02D          	movff	postinc2,??_gpio_pin_read_logic+2
  1362   00140A  CFDD F02E          	movff	postdec2,??_gpio_pin_read_logic+3
  1363   00140E  C02D  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  1364   001412  C02E  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  1365   001416  50DF               	movf	indf2,w,c
  1366   001418  6E2F               	movwf	(??_gpio_pin_read_logic+4)^0,c
  1367   00141A  2A2B               	incf	??_gpio_pin_read_logic^0,f,c
  1368   00141C  EF12  F00A         	goto	u794
  1369   001420                     u795:
  1370   001420  90D8               	bcf	status,0,c
  1371   001422  322F               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  1372   001424                     u794:
  1373   001424  2E2B               	decfsz	??_gpio_pin_read_logic^0,f,c
  1374   001426  EF10  F00A         	goto	u795
  1375   00142A  502F               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  1376   00142C  0B01               	andlw	1
  1377   00142E  C029  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  1378   001432  C02A  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  1379   001436  6EDF               	movwf	indf2,c
  1380   001438                     l1525:
  1381                           
  1382                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  1383   001438  5030               	movf	gpio_pin_read_logic@ret^0,w,c
  1384   00143A  0012               	return		;funcret
  1385   00143C                     __end_of_gpio_pin_read_logic:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _application_initialize *****************
  1389 ;; Defined at:
  1390 ;;		line 73 in file "application.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		None
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text7
  1418   0015AC                     __ptext7:
  1419                           	callstack 0
  1420   0015AC                     _application_initialize:
  1421                           	callstack 30
  1422   0015AC  0012               	return		;funcret
  1423   0015AE                     __end_of_application_initialize:
  1424                           	callstack 0
  1425                           
  1426                           	psect	rparam
  1427   000000                     
  1428                           	psect	config
  1429                           
  1430                           ; Padding undefined space
  1431   300000                     	org	3145728
  1432   300000  FF                 	db	255
  1433                           
  1434                           ;Config register CONFIG1H @ 0x300001
  1435                           ;	Oscillator Selection bits
  1436                           ;	OSC = HS, HS oscillator
  1437                           ;	Fail-Safe Clock Monitor Enable bit
  1438                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1439                           ;	Internal/External Oscillator Switchover bit
  1440                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1441   300001                     	org	3145729
  1442   300001  02                 	db	2
  1443                           
  1444                           ;Config register CONFIG2L @ 0x300002
  1445                           ;	Power-up Timer Enable bit
  1446                           ;	PWRT = OFF, PWRT disabled
  1447                           ;	Brown-out Reset Enable bits
  1448                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1449                           ;	Brown Out Reset Voltage bits
  1450                           ;	BORV = 1, 
  1451   300002                     	org	3145730
  1452   300002  09                 	db	9
  1453                           
  1454                           ;Config register CONFIG2H @ 0x300003
  1455                           ;	Watchdog Timer Enable bit
  1456                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1457                           ;	Watchdog Timer Postscale Select bits
  1458                           ;	WDTPS = 32768, 1:32768
  1459   300003                     	org	3145731
  1460   300003  1E                 	db	30
  1461                           
  1462                           ; Padding undefined space
  1463   300004                     	org	3145732
  1464   300004  FF                 	db	255
  1465                           
  1466                           ;Config register CONFIG3H @ 0x300005
  1467                           ;	CCP2 MUX bit
  1468                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1469                           ;	PORTB A/D Enable bit
  1470                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1471                           ;	Low-Power Timer1 Oscillator Enable bit
  1472                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1473                           ;	MCLR Pin Enable bit
  1474                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1475   300005                     	org	3145733
  1476   300005  81                 	db	129
  1477                           
  1478                           ;Config register CONFIG4L @ 0x300006
  1479                           ;	Stack Full/Underflow Reset Enable bit
  1480                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1481                           ;	Single-Supply ICSP Enable bit
  1482                           ;	LVP = OFF, Single-Supply ICSP disabled
  1483                           ;	Extended Instruction Set Enable bit
  1484                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1485                           ;	Background Debugger Enable bit
  1486                           ;	DEBUG = 0x1, unprogrammed default
  1487   300006                     	org	3145734
  1488   300006  81                 	db	129
  1489                           
  1490                           ; Padding undefined space
  1491   300007                     	org	3145735
  1492   300007  FF                 	db	255
  1493                           
  1494                           ;Config register CONFIG5L @ 0x300008
  1495                           ;	Code Protection bit
  1496                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1497                           ;	Code Protection bit
  1498                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1499                           ;	Code Protection bit
  1500                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1501                           ;	Code Protection bit
  1502                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1503   300008                     	org	3145736
  1504   300008  0F                 	db	15
  1505                           
  1506                           ;Config register CONFIG5H @ 0x300009
  1507                           ;	Boot Block Code Protection bit
  1508                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1509                           ;	Data EEPROM Code Protection bit
  1510                           ;	CPD = OFF, Data EEPROM not code-protected
  1511   300009                     	org	3145737
  1512   300009  C0                 	db	192
  1513                           
  1514                           ;Config register CONFIG6L @ 0x30000A
  1515                           ;	Write Protection bit
  1516                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1517                           ;	Write Protection bit
  1518                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1519                           ;	Write Protection bit
  1520                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1521                           ;	Write Protection bit
  1522                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1523   30000A                     	org	3145738
  1524   30000A  0F                 	db	15
  1525                           
  1526                           ;Config register CONFIG6H @ 0x30000B
  1527                           ;	Configuration Register Write Protection bit
  1528                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1529                           ;	Boot Block Write Protection bit
  1530                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1531                           ;	Data EEPROM Write Protection bit
  1532                           ;	WRTD = OFF, Data EEPROM not write-protected
  1533   30000B                     	org	3145739
  1534   30000B  E0                 	db	224
  1535                           
  1536                           ;Config register CONFIG7L @ 0x30000C
  1537                           ;	Table Read Protection bit
  1538                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1539                           ;	Table Read Protection bit
  1540                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1541                           ;	Table Read Protection bit
  1542                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1543                           ;	Table Read Protection bit
  1544                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1545   30000C                     	org	3145740
  1546   30000C  0F                 	db	15
  1547                           
  1548                           ;Config register CONFIG7H @ 0x30000D
  1549                           ;	Boot Block Table Read Protection bit
  1550                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1551   30000D                     	org	3145741
  1552   30000D  40                 	db	64
  1553                           tosu	equ	0xFFF
  1554                           tosh	equ	0xFFE
  1555                           tosl	equ	0xFFD
  1556                           stkptr	equ	0xFFC
  1557                           pclatu	equ	0xFFB
  1558                           pclath	equ	0xFFA
  1559                           pcl	equ	0xFF9
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           indf0	equ	0xFEF
  1567                           postinc0	equ	0xFEE
  1568                           postdec0	equ	0xFED
  1569                           preinc0	equ	0xFEC
  1570                           plusw0	equ	0xFEB
  1571                           fsr0h	equ	0xFEA
  1572                           fsr0l	equ	0xFE9
  1573                           wreg	equ	0xFE8
  1574                           indf1	equ	0xFE7
  1575                           postinc1	equ	0xFE6
  1576                           postdec1	equ	0xFE5
  1577                           preinc1	equ	0xFE4
  1578                           plusw1	equ	0xFE3
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           bsr	equ	0xFE0
  1582                           indf2	equ	0xFDF
  1583                           postinc2	equ	0xFDE
  1584                           postdec2	equ	0xFDD
  1585                           preinc2	equ	0xFDC
  1586                           plusw2	equ	0xFDB
  1587                           fsr2h	equ	0xFDA
  1588                           fsr2l	equ	0xFD9
  1589                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        38
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_value(COMRAM[1]), 

    keypad_get_value@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    keypad_initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 8
		 -> relay_initialize@pin_obj(COMRAM[1]), keypad1.keypad_rows_pins(COMRAM[4]), keypad1(COMRAM[8]), 

    gpio_pin_read_logic@logic	PTR enum E2480 size(2) Largest target is 1
		 -> keypad_get_value@col_logic(COMRAM[1]), button_read_state@pin_logic_status(COMRAM[1]), 

    gpio_pin_read_logic@pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad1.keypad_columns_pins(COMRAM[4]), keypad1(COMRAM[8]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 8
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), keypad1.keypad_rows_pins(COMRAM[4]), 
		 -> keypad1(COMRAM[8]), led_turn_off@led_pin(COMRAM[1]), led_turn_on@led_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 8
		 -> relay_initialize@pin_obj(COMRAM[1]), keypad1.keypad_columns_pins(COMRAM[4]), keypad1.keypad_rows_pins(COMRAM[4]), keypad1(COMRAM[8]), 
		 -> led_initialize@led_pin(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _main->_keypad_initialize
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8603
             _application_initialize
                   _keypad_get_value
                  _keypad_initialize
 ---------------------------------------------------------------------------------
 (1) _keypad_initialize                                    7     5      2    4775
                                             14 COMRAM     7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    3988
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     483
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     7      4    3828
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3    2763
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     460
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _keypad_initialize
     _gpio_pin_direction_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      45       1       54.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      39        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jul 25 02:16:04 2023

                                    l232 15AC                                      l144 1154  
                                    l170 143A                                      l163 1280  
                                    l251 14B2                                      l265 1382  
                                    l177 151E                                      u700 1128  
                                    u701 1122                                      u710 112A  
                                    u720 116C                                      u800 14CA  
                                    u721 1168                                      u801 14C6  
                                    u730 118E                                      u810 14EC  
                                    u731 118A                                      u811 14E8  
                                    u900 1380                                      u660 1028  
                                    u820 144E                                      u901 137C  
                                    u661 1024                                      u821 144A  
                                    u670 104A                                      u830 147C  
                                    u671 1046                                      u831 1478  
                                    u760 139A                                      u744 11B6  
                                    u840 14B0                                      u761 1396  
                                    u745 11B2                                      u841 14AC  
                                    u770 13AC                                      u754 1218  
                                    u850 1298                                      u771 13A8  
                                    u755 1214                                      u851 1294  
                                    u780 13CE                                      u860 12AA  
                                    u684 1072                                      u781 13CA  
                                    u861 12A6                                      u685 106E  
                                    u870 12E0                                      u694 10D4  
                                    u871 12DC                                      u695 10D0  
                                    u880 132E                                      u881 132A  
                                    u794 1424                                      u890 136E  
                                    u795 1420                                      u891 136A  
          gpio_pin_initialize@pin_config 0031                     keypad_initialize@ret 0039  
                                    _ret 0045                      led_initialize@F2560 0043  
                                    prod 0FF3                                      wreg 0FE8  
                  relay_initialize@F2556 003F                                     l1503 1254  
                                   l1521 13CE                                     l1513 1384  
                                   l1505 127E                                     l1601 12D0  
                                   l1523 13D6                                     l1515 1388  
                                   l1611 12F8                                     l1603 12E0  
                                   l1531 14B8                                     l1525 1438  
                                   l1517 139A                                     l1621 136E  
                                   l1613 131E                                     l1605 12F4  
                                   l1533 14CA                                     l1519 13AC  
                                   l1623 1370                                     l1615 132E  
                                   l1471 104A                                     l1535 14EC  
                                   l1543 143C                                     l1617 135C  
                                   l1625 1380                                     l1473 1052  
                                   l1481 1152                                     l1465 1012  
                                   l1537 14F4                                     l1529 14B4  
                                   l1561 147C                                     l1545 143C  
                                   l1491 115A                                     l1619 135E  
                                   l1475 10B4                                     l1467 1016  
                                   l1539 151C                                     l1571 14A0  
                                   l1555 145A                                     l1547 144E  
                                   l1493 116C                                     l1581 1298  
                                   l1469 1028                                     l1557 146A  
                                   l1573 14B0                                     l1549 1456  
                                   l1495 118E                                     l1591 12B6  
                                   l1583 12AA                                     l1479 1110  
                                   l1567 1480                                     l1559 146C  
                                   l1497 1196                                     l1489 1156  
                                   l1585 12B2                                     l1577 1282  
                                   l1569 149E                                     l1499 11F8  
                                   l1579 1286                                     l1843 113C  
                                   l1845 1268                                     l1597 12BA  
                                   l1781 1556                                     l1599 12CE  
                                   l1783 1564                                     l1785 1568  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     _main 1556  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                     _gpio_pin_write_logic 1156  
                 keypad_get_value@keypad 0031                                    ?_main 0027  
               ??_application_initialize 0027                      relay_turn_off@F2566 003D  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
               __end_of_keypad_get_value 1384                                    tablat 0FF5  
                                  status 0FD8           ?_gpio_pin_direction_initialize 0027  
                        __initialization 1520                      keypad_get_value@ret 0037  
                           __end_of_main 1586            gpio_pin_read_logic@pin_config 0027  
                  ?_gpio_pin_write_logic 0027                 gpio_pin_read_logic@logic 0029  
                                 ??_main 003C                            __activetblptr 0002  
                       led_turn_on@F2565 0042                keypad_get_value@col_logic 0038  
                          _tris_register 0015                  keypad_initialize@keypad 0035  
            keypad_get_value@row_counter 003A                                   clear_0 1546  
                                 isa$std 0001                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 154C  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 002A  
                         __pcstackCOMRAM 0027             keypad_initialize@row_counter 003A  
                 _application_initialize 15AC                               __pnvCOMRAM 0045  
                      led_turn_off@F2570 0041                          led_toggle@F2575 0040  
                      ?_keypad_get_value 0031                       ??_keypad_get_value 0035  
                             _btn_values 1001                                  __Hparam 0000  
                                __Lparam 0000                      _gpio_pin_initialize 14B4  
                    _gpio_pin_read_logic 1384                             __psmallconst 1000  
                                __pcinit 1520                                  __ramtop 1000  
                                __ptext0 1556                                  __ptext1 143C  
                                __ptext2 14B4                                  __ptext3 1012  
                                __ptext4 1282                                  __ptext5 1156  
                                __ptext6 1384                                  __ptext7 15AC  
        ??_gpio_pin_direction_initialize 0029                                  _keypad1 001F  
                   ?_gpio_pin_initialize 0031                     ?_gpio_pin_read_logic 0027  
                   end_of_initialization 154C                            __Lmediumconst 0000  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                  ??_gpio_pin_initialize 0033                    ??_gpio_pin_read_logic 002B  
                     relay_turn_on@F2561 003E                        relay_toggle@F2571 003C  
                  keypad_get_value@value 0033                            __pidataCOMRAM 1586  
                    start_initialization 1520    __end_of_gpio_pin_direction_initialize 1156  
          _gpio_pin_direction_initialize 1012                             _lat_register 000B  
                ?_application_initialize 0027                              __pbssCOMRAM 003C  
         __end_of_application_initialize 15AE           gpio_pin_write_logic@pin_config 0027  
              gpio_pin_write_logic@logic 0029                             _keypad_value 0044  
                            __smallconst 1000         gpio_pin_direction_initialize@ret 002F  
gpio_pin_direction_initialize@pin_config 0027                   gpio_pin_initialize@ret 0034  
                gpio_pin_write_logic@ret 0030                                copy_data0 1534  
                      _keypad_initialize 143C                       ?_keypad_initialize 0035  
                 gpio_pin_read_logic@ret 0030                                 __Hrparam 0000  
                               __Lrparam 0000                      ??_keypad_initialize 0037  
            __end_of_gpio_pin_initialize 1520                       __end_of_btn_values 1011  
            __end_of_gpio_pin_read_logic 143C                __end_of_keypad_initialize 14B4  
                       _keypad_get_value 1282                                 isa$xinst 0000  
            keypad_get_value@col_counter 003B             __end_of_gpio_pin_write_logic 1282  
                          _port_register 0001             keypad_get_value@row_counter2 0039  
           keypad_initialize@col_counter 003B  
