

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 05:27:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 23/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4620 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   0021DE                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _lat_register
    86   0021DE  89                 	db	137
    87   0021DF  0F                 	db	15
    88   0021E0  8A                 	db	138
    89   0021E1  0F                 	db	15
    90   0021E2  8B                 	db	139
    91   0021E3  0F                 	db	15
    92   0021E4  8C                 	db	140
    93   0021E5  0F                 	db	15
    94   0021E6  8D                 	db	141
    95   0021E7  0F                 	db	15
    96                           
    97                           ;initializer for _tris_register
    98   0021E8  92                 	db	146
    99   0021E9  0F                 	db	15
   100   0021EA  93                 	db	147
   101   0021EB  0F                 	db	15
   102   0021EC  94                 	db	148
   103   0021ED  0F                 	db	15
   104   0021EE  95                 	db	149
   105   0021EF  0F                 	db	15
   106   0021F0  96                 	db	150
   107   0021F1  0F                 	db	15
   108                           
   109                           ;initializer for _number
   110   0021F2  17                 	db	23
   111                           
   112                           	psect	idataBANK0
   113   0021C4                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _port_register
   117   0021C4  80                 	db	128
   118   0021C5  0F                 	db	15
   119   0021C6  81                 	db	129
   120   0021C7  0F                 	db	15
   121   0021C8  82                 	db	130
   122   0021C9  0F                 	db	15
   123   0021CA  83                 	db	131
   124   0021CB  0F                 	db	15
   125   0021CC  84                 	db	132
   126   0021CD  0F                 	db	15
   127                           
   128                           ;initializer for _lcd1_4
   129   0021CE  02                 	db	2
   130   0021CF  0A                 	db	10
   131   0021D0  12                 	db	18
   132   0021D1  1A                 	db	26
   133   0021D2  22                 	db	34
   134   0021D3  2A                 	db	42
   135                           
   136                           ;initializer for _lcd2_8
   137   0021D4  32                 	db	50
   138   0021D5  3A                 	db	58
   139   0021D6  03                 	db	3
   140   0021D7  0B                 	db	11
   141   0021D8  13                 	db	19
   142   0021D9  1B                 	db	27
   143   0021DA  23                 	db	35
   144   0021DB  2B                 	db	43
   145   0021DC  33                 	db	51
   146   0021DD  3B                 	db	59
   147                           
   148                           	psect	smallconst
   149   001000                     __psmallconst:
   150                           	callstack 0
   151   001000  00                 	db	0
   152   001001                     _btn_values:
   153                           	callstack 0
   154   001001  37                 	db	55
   155   001002  38                 	db	56
   156   001003  39                 	db	57
   157   001004  2F                 	db	47
   158   001005  34                 	db	52
   159   001006  35                 	db	53
   160   001007  36                 	db	54
   161   001008  2A                 	db	42
   162   001009  31                 	db	49
   163   00100A  32                 	db	50
   164   00100B  33                 	db	51
   165   00100C  2D                 	db	45
   166   00100D  23                 	db	35
   167   00100E  30                 	db	48
   168   00100F  3D                 	db	61
   169   001010  2B                 	db	43
   170   001011                     __end_of_btn_values:
   171                           	callstack 0
   172   001011                     _customChar3:
   173                           	callstack 0
   174   001011  0E                 	db	14
   175   001012  0A                 	db	10
   176   001013  11                 	db	17
   177   001014  11                 	db	17
   178   001015  1F                 	db	31
   179   001016  1F                 	db	31
   180   001017  1F                 	db	31
   181   001018  00                 	db	0
   182   001019                     __end_of_customChar3:
   183                           	callstack 0
   184   001019                     _customChar2:
   185                           	callstack 0
   186   001019  0E                 	db	14
   187   00101A  0A                 	db	10
   188   00101B  11                 	db	17
   189   00101C  11                 	db	17
   190   00101D  11                 	db	17
   191   00101E  1F                 	db	31
   192   00101F  1F                 	db	31
   193   001020  00                 	db	0
   194   001021                     __end_of_customChar2:
   195                           	callstack 0
   196   001021                     _customChar1:
   197                           	callstack 0
   198   001021  0E                 	db	14
   199   001022  0A                 	db	10
   200   001023  11                 	db	17
   201   001024  11                 	db	17
   202   001025  11                 	db	17
   203   001026  11                 	db	17
   204   001027  1F                 	db	31
   205   001028  00                 	db	0
   206   001029                     __end_of_customChar1:
   207                           	callstack 0
   208   001029                     STR_1:
   209   001029  52                 	db	82	;'R'
   210   00102A  61                 	db	97	;'a'
   211   00102B  62                 	db	98	;'b'
   212   00102C  65                 	db	101	;'e'
   213   00102D  68                 	db	104	;'h'
   214   00102E  4D                 	db	77	;'M'
   215   00102F  6F                 	db	111	;'o'
   216   001030  68                 	db	104	;'h'
   217   001031  61                 	db	97	;'a'
   218   001032  6D                 	db	109	;'m'
   219   001033  65                 	db	101	;'e'
   220   001034  64                 	db	100	;'d'
   221   001035  00                 	db	0
   222   001036                     STR_2:
   223   001036  25                 	db	37
   224   001037  69                 	db	105	;'i'
   225   001038  00                 	db	0
   226   001039  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           	psect	nvBANK0
   229   0000BA                     __pnvBANK0:
   230                           	callstack 0
   231   0000BA                     _ret:
   232                           	callstack 0
   233   0000BA                     	ds	1
   234   000000                     _PORTE	set	3972
   235   000000                     _PORTD	set	3971
   236   000000                     _PORTC	set	3970
   237   000000                     _PORTB	set	3969
   238   000000                     _PORTA	set	3968
   239   000000                     _LATA	set	3977
   240   000000                     _TRISA	set	3986
   241   000000                     _TRISE	set	3990
   242   000000                     _TRISD	set	3989
   243   000000                     _TRISC	set	3988
   244   000000                     _TRISB	set	3987
   245   000000                     _LATE	set	3981
   246   000000                     _LATD	set	3980
   247   000000                     _LATC	set	3979
   248   000000                     _LATB	set	3978
   249                           
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   001EF0                     __pcinit:
   254                           	callstack 0
   255   001EF0                     start_initialization:
   256                           	callstack 0
   257   001EF0                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK0 (26 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262   001EF0  0EC4               	movlw	low __pidataBANK0
   263   001EF2  6EF6               	movwf	tblptrl,c
   264   001EF4  0E21               	movlw	high __pidataBANK0
   265   001EF6  6EF7               	movwf	tblptrh,c
   266   001EF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267   001EFA  6EF8               	movwf	tblptru,c
   268   001EFC  EE00  F0A0         	lfsr	0,__pdataBANK0
   269   001F00  EE10 F01A          	lfsr	1,26
   270   001F04                     copy_data0:
   271   001F04  0009               	tblrd		*+
   272   001F06  CFF5 FFEE          	movff	tablat,postinc0
   273   001F0A  50E5               	movf	postdec1,w,c
   274   001F0C  50E1               	movf	fsr1l,w,c
   275   001F0E  E1FA               	bnz	copy_data0
   276                           
   277                           ; Initialize objects allocated to COMRAM (21 bytes)
   278                           ; load TBLPTR registers with __pidataCOMRAM
   279   001F10  0EDE               	movlw	low __pidataCOMRAM
   280   001F12  6EF6               	movwf	tblptrl,c
   281   001F14  0E21               	movlw	high __pidataCOMRAM
   282   001F16  6EF7               	movwf	tblptrh,c
   283   001F18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   284   001F1A  6EF8               	movwf	tblptru,c
   285   001F1C  EE00  F059         	lfsr	0,__pdataCOMRAM
   286   001F20  EE10 F015          	lfsr	1,21
   287   001F24                     copy_data1:
   288   001F24  0009               	tblrd		*+
   289   001F26  CFF5 FFEE          	movff	tablat,postinc0
   290   001F2A  50E5               	movf	postdec1,w,c
   291   001F2C  50E1               	movf	fsr1l,w,c
   292   001F2E  E1FA               	bnz	copy_data1
   293                           
   294                           ; Clear objects allocated to BANK0 (32 bytes)
   295   001F30  EE00  F080         	lfsr	0,__pbssBANK0
   296   001F34  0E20               	movlw	32
   297   001F36                     clear_0:
   298   001F36  6AEE               	clrf	postinc0,c
   299   001F38  06E8               	decf	wreg,f,c
   300   001F3A  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (18 bytes)
   303   001F3C  EE00  F06E         	lfsr	0,__pbssCOMRAM
   304   001F40  0E12               	movlw	18
   305   001F42                     clear_1:
   306   001F42  6AEE               	clrf	postinc0,c
   307   001F44  06E8               	decf	wreg,f,c
   308   001F46  E1FD               	bnz	clear_1
   309   001F48                     end_of_initialization:
   310                           	callstack 0
   311   001F48                     __end_of__initialization:
   312                           	callstack 0
   313   001F48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314   001F4A  6EF8               	movwf	tblptru,c
   315   001F4C  0100               	movlb	0
   316   001F4E  EF2E  F00D         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMRAM
   319   00006E                     __pbssCOMRAM:
   320                           	callstack 0
   321   00006E                     _nout:
   322                           	callstack 0
   323   00006E                     	ds	2
   324   000070                     _width:
   325                           	callstack 0
   326   000070                     	ds	2
   327   000072                     _prec:
   328                           	callstack 0
   329   000072                     	ds	2
   330   000074                     _flags:
   331                           	callstack 0
   332   000074                     	ds	1
   333   000075                     relay_toggle@F3059:
   334                           	callstack 0
   335   000075                     	ds	1
   336   000076                     relay_turn_off@F3054:
   337                           	callstack 0
   338   000076                     	ds	1
   339   000077                     relay_turn_on@F3049:
   340                           	callstack 0
   341   000077                     	ds	1
   342   000078                     relay_initialize@F3044:
   343                           	callstack 0
   344   000078                     	ds	1
   345   000079                     led_toggle@F3063:
   346                           	callstack 0
   347   000079                     	ds	1
   348   00007A                     led_turn_off@F3058:
   349                           	callstack 0
   350   00007A                     	ds	1
   351   00007B                     led_turn_on@F3053:
   352                           	callstack 0
   353   00007B                     	ds	1
   354   00007C                     led_initialize@F3048:
   355                           	callstack 0
   356   00007C                     	ds	1
   357   00007D                     _number_txt:
   358                           	callstack 0
   359   00007D                     	ds	3
   360                           
   361                           	psect	dataCOMRAM
   362   000059                     __pdataCOMRAM:
   363                           	callstack 0
   364   000059                     _lat_register:
   365                           	callstack 0
   366   000059                     	ds	10
   367   000063                     _tris_register:
   368                           	callstack 0
   369   000063                     	ds	10
   370   00006D                     _number:
   371                           	callstack 0
   372   00006D                     	ds	1
   373                           
   374                           	psect	bssBANK0
   375   000080                     __pbssBANK0:
   376                           	callstack 0
   377   000080                     _dbuf:
   378                           	callstack 0
   379   000080                     	ds	32
   380                           
   381                           	psect	dataBANK0
   382   0000A0                     __pdataBANK0:
   383                           	callstack 0
   384   0000A0                     _port_register:
   385                           	callstack 0
   386   0000A0                     	ds	10
   387   0000AA                     _lcd1_4:
   388                           	callstack 0
   389   0000AA                     	ds	6
   390   0000B0                     _lcd2_8:
   391                           	callstack 0
   392   0000B0                     	ds	10
   393                           
   394                           	psect	cstackCOMRAM
   395   000001                     __pcstackCOMRAM:
   396                           	callstack 0
   397   000001                     ?_memset:
   398                           	callstack 0
   399   000001                     ?_strlen:
   400                           	callstack 0
   401   000001                     ?___awdiv:
   402                           	callstack 0
   403   000001                     ?___awmod:
   404                           	callstack 0
   405   000001                     gpio_pin_direction_initialize@pin_config:
   406                           	callstack 0
   407   000001                     gpio_pin_write_logic@pin_config:
   408                           	callstack 0
   409   000001                     ___awdiv@dividend:
   410                           	callstack 0
   411   000001                     ___awmod@dividend:
   412                           	callstack 0
   413   000001                     memset@dest:
   414                           	callstack 0
   415   000001                     fputc@c:
   416                           	callstack 0
   417   000001                     strlen@s:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421   000001                     	ds	2
   422   000003                     ??_gpio_pin_direction_initialize:
   423   000003                     gpio_pin_write_logic@logic:
   424                           	callstack 0
   425   000003                     ___awdiv@divisor:
   426                           	callstack 0
   427   000003                     ___awmod@divisor:
   428                           	callstack 0
   429   000003                     memset@c:
   430                           	callstack 0
   431   000003                     fputc@fp:
   432                           	callstack 0
   433   000003                     strlen@a:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437   000003                     	ds	1
   438   000004                     ??_gpio_pin_write_logic:
   439                           
   440                           ; 1 bytes @ 0x3
   441   000004                     	ds	1
   442   000005                     ??_fputc:
   443   000005                     ___awdiv@counter:
   444                           	callstack 0
   445   000005                     ___awmod@counter:
   446                           	callstack 0
   447   000005                     memset@n:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x4
   451   000005                     	ds	1
   452   000006                     ___awdiv@sign:
   453                           	callstack 0
   454   000006                     ___awmod@sign:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x5
   458   000006                     	ds	1
   459   000007                     ??_memset:
   460   000007                     ?_abs:
   461                           	callstack 0
   462   000007                     ___awdiv@quotient:
   463                           	callstack 0
   464   000007                     abs@a:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468   000007                     	ds	2
   469   000009                     ??_abs:
   470   000009                     gpio_pin_direction_initialize@ret:
   471                           	callstack 0
   472   000009                     memset@k:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x8
   476   000009                     	ds	1
   477   00000A                     gpio_pin_write_logic@ret:
   478                           	callstack 0
   479   00000A                     fputs@s:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x9
   483   00000A                     	ds	1
   484   00000B                     gpio_pin_initialize@pin_config:
   485                           	callstack 0
   486   00000B                     lcd_8bit_send_enable@lcd:
   487                           	callstack 0
   488   00000B                     memset@s:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492   00000B                     	ds	1
   493   00000C                     fputs@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xB
   497   00000C                     	ds	1
   498   00000D                     ??_gpio_pin_initialize:
   499   00000D                     lcd_8bit_send_enable@ret:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xC
   503   00000D                     	ds	1
   504   00000E                     gpio_pin_initialize@ret:
   505                           	callstack 0
   506   00000E                     fputs@c:
   507                           	callstack 0
   508   00000E                     lcd_8bit_send_command@lcd:
   509                           	callstack 0
   510   00000E                     lcd_8bit_send_char_data@lcd:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xD
   514   00000E                     	ds	1
   515   00000F                     fputs@i:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xE
   519   00000F                     	ds	1
   520   000010                     lcd_8bit_send_command@command:
   521                           	callstack 0
   522   000010                     lcd_8bit_send_char_data@data:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0xF
   526   000010                     	ds	1
   527   000011                     ??_lcd_8bit_send_char_data:
   528   000011                     ??_lcd_8bit_send_command:
   529   000011                     ?_pad:
   530                           	callstack 0
   531   000011                     pad@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x10
   535   000011                     	ds	2
   536   000013                     pad@buf:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x12
   540   000013                     	ds	2
   541   000015                     lcd_8bit_send_command@ret:
   542                           	callstack 0
   543   000015                     lcd_8bit_send_char_data@ret:
   544                           	callstack 0
   545   000015                     pad@p:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x14
   549   000015                     	ds	1
   550   000016                     lcd_8bit_send_command@pin:
   551                           	callstack 0
   552   000016                     lcd_8bit_send_char_data@pin:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x15
   556   000016                     	ds	1
   557   000017                     ??_pad:
   558   000017                     lcd_8bit_initialize@lcd:
   559                           	callstack 0
   560   000017                     lcd_8bit_send_string@lcd:
   561                           	callstack 0
   562   000017                     lcd_8bit_set_cursor@lcd:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566   000017                     	ds	1
   567   000018                     pad@i:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x17
   571   000018                     	ds	1
   572   000019                     ??_lcd_8bit_initialize:
   573   000019                     lcd_8bit_set_cursor@row:
   574                           	callstack 0
   575   000019                     lcd_8bit_send_string@str:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x18
   579   000019                     	ds	1
   580   00001A                     lcd_8bit_set_cursor@column:
   581                           	callstack 0
   582   00001A                     pad@w:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x19
   586   00001A                     	ds	1
   587   00001B                     ??_lcd_8bit_set_cursor:
   588   00001B                     lcd_8bit_initialize@pin:
   589                           	callstack 0
   590   00001B                     lcd_8bit_send_string@ret:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x1A
   594   00001B                     	ds	1
   595   00001C                     ?_dtoa:
   596                           	callstack 0
   597   00001C                     lcd_8bit_initialize@ret:
   598                           	callstack 0
   599   00001C                     dtoa@fp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x1B
   603   00001C                     	ds	1
   604   00001D                     lcd_8bit_set_cursor@ret:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x1C
   608   00001D                     	ds	1
   609   00001E                     lcd_8bit_send_data_pos@lcd:
   610                           	callstack 0
   611   00001E                     dtoa@d:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x1D
   615   00001E                     	ds	2
   616   000020                     lcd_8bit_send_data_pos@row:
   617                           	callstack 0
   618   000020                     _dtoa$1359:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x1F
   622   000020                     	ds	1
   623   000021                     lcd_8bit_send_data_pos@column:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x20
   627   000021                     	ds	1
   628   000022                     lcd_8bit_send_data_pos@data:
   629                           	callstack 0
   630   000022                     dtoa@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x21
   634   000022                     	ds	1
   635   000023                     lcd_8bit_send_data_pos@ret:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x22
   639   000023                     	ds	1
   640   000024                     lcd_8bit_send_cutsom_char@lcd:
   641                           	callstack 0
   642   000024                     dtoa@w:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x23
   646   000024                     	ds	2
   647   000026                     lcd_8bit_send_cutsom_char@_chr:
   648                           	callstack 0
   649   000026                     dtoa@i:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x25
   653   000026                     	ds	2
   654   000028                     lcd_8bit_send_cutsom_char@row:
   655                           	callstack 0
   656   000028                     dtoa@s:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x27
   660   000028                     	ds	1
   661   000029                     ?_vfpfcnvrt:
   662                           	callstack 0
   663   000029                     lcd_8bit_send_cutsom_char@column:
   664                           	callstack 0
   665   000029                     vfpfcnvrt@fp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x28
   669   000029                     	ds	1
   670   00002A                     lcd_8bit_send_cutsom_char@mem_pos:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x29
   674   00002A                     	ds	1
   675   00002B                     ??_lcd_8bit_send_cutsom_char:
   676   00002B                     vfpfcnvrt@fmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2A
   680   00002B                     	ds	2
   681   00002D                     lcd_8bit_send_cutsom_char@ret:
   682                           	callstack 0
   683   00002D                     vfpfcnvrt@ap:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x2C
   687   00002D                     	ds	1
   688   00002E                     lcd_8bit_send_cutsom_char@i:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x2D
   692   00002E                     	ds	1
   693   00002F                     ??_vfpfcnvrt:
   694                           
   695                           ; 1 bytes @ 0x2E
   696   00002F                     	ds	2
   697   000031                     vfpfcnvrt@convarg:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x30
   701   000031                     	ds	4
   702   000035                     vfpfcnvrt@cp:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x34
   706   000035                     	ds	2
   707   000037                     ?_vfprintf:
   708                           	callstack 0
   709   000037                     vfprintf@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x36
   713   000037                     	ds	2
   714   000039                     vfprintf@fmt:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x38
   718   000039                     	ds	2
   719   00003B                     vfprintf@ap:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x3A
   723   00003B                     	ds	2
   724   00003D                     vfprintf@cfmt:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x3C
   728   00003D                     	ds	2
   729   00003F                     ?_sprintf:
   730                           	callstack 0
   731   00003F                     sprintf@s:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x3E
   735   00003F                     	ds	2
   736   000041                     sprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x40
   740   000041                     	ds	4
   741   000045                     sprintf@ret:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x44
   745   000045                     	ds	2
   746   000047                     sprintf@ap:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x46
   750   000047                     	ds	2
   751   000049                     sprintf@f:
   752                           	callstack 0
   753                           
   754                           ; 12 bytes @ 0x48
   755   000049                     	ds	12
   756   000055                     convert_uint8_to_string@str:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x54
   760   000055                     	ds	2
   761   000057                     convert_uint8_to_string@value:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x56
   765   000057                     	ds	1
   766   000058                     convert_uint8_to_string@ret:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x57
   770   000058                     	ds	1
   771   000059                     
   772                           ; 1 bytes @ 0x58
   773 ;;
   774 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   775 ;;
   776 ;; *************** function _main *****************
   777 ;; Defined at:
   778 ;;		line 129 in file "application.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2  306[None  ] int 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        0 bytes
   797 ;; Hardware stack levels required when called: 9
   798 ;; This function calls:
   799 ;;		_application_initialize
   800 ;;		_convert_uint8_to_string
   801 ;;		_lcd_8bit_send_cutsom_char
   802 ;;		_lcd_8bit_send_string
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809   001A5C                     __ptext0:
   810                           	callstack 0
   811   001A5C                     _main:
   812                           	callstack 22
   813   001A5C                     
   814                           ;application.c: 131:     application_initialize();
   815   001A5C  ECFA  F010         	call	_application_initialize	;wreg free
   816   001A60                     
   817                           ;application.c: 132:     ret = lcd_8bit_send_string(&lcd2_8 , "RabehMohamed");
   818   001A60  0EB0               	movlw	low _lcd2_8
   819   001A62  6E17               	movwf	lcd_8bit_send_string@lcd^0,c
   820   001A64  0E00               	movlw	high _lcd2_8
   821   001A66  6E18               	movwf	(lcd_8bit_send_string@lcd+1)^0,c
   822   001A68  0E29               	movlw	low STR_1
   823   001A6A  6E19               	movwf	lcd_8bit_send_string@str^0,c
   824   001A6C  0E10               	movlw	high STR_1
   825   001A6E  6E1A               	movwf	(lcd_8bit_send_string@str+1)^0,c
   826   001A70  ECB8  F00E         	call	_lcd_8bit_send_string	;wreg free
   827   001A74  0100               	movlb	0	; () banked
   828   001A76  6FBA               	movwf	_ret& (0+255),b
   829   001A78                     
   830                           ; BSR set to: 0
   831                           ;application.c: 134:     ret = convert_uint8_to_string(number , number_txt);
   832   001A78  0E7D               	movlw	low _number_txt
   833   001A7A  6E55               	movwf	convert_uint8_to_string@str^0,c
   834   001A7C  0E00               	movlw	high _number_txt
   835   001A7E  6E56               	movwf	(convert_uint8_to_string@str+1)^0,c
   836   001A80  0E17               	movlw	23
   837   001A82  EC06  F010         	call	_convert_uint8_to_string
   838   001A86  0100               	movlb	0	; () banked
   839   001A88  6FBA               	movwf	_ret& (0+255),b
   840   001A8A                     
   841                           ; BSR set to: 0
   842                           ;application.c: 135:     ret = lcd_8bit_send_string(&lcd2_8 , number_txt);
   843   001A8A  0EB0               	movlw	low _lcd2_8
   844   001A8C  6E17               	movwf	lcd_8bit_send_string@lcd^0,c
   845   001A8E  0E00               	movlw	high _lcd2_8
   846   001A90  6E18               	movwf	(lcd_8bit_send_string@lcd+1)^0,c
   847   001A92  0E7D               	movlw	low _number_txt
   848   001A94  6E19               	movwf	lcd_8bit_send_string@str^0,c
   849   001A96  0E00               	movlw	high _number_txt
   850   001A98  6E1A               	movwf	(lcd_8bit_send_string@str+1)^0,c
   851   001A9A  ECB8  F00E         	call	_lcd_8bit_send_string	;wreg free
   852   001A9E  0100               	movlb	0	; () banked
   853   001AA0  6FBA               	movwf	_ret& (0+255),b
   854   001AA2                     l3357:
   855                           
   856                           ; BSR set to: 0
   857                           ;application.c: 140:         ret = lcd_8bit_send_cutsom_char(&lcd2_8 ,customChar1 , 1 , 
      +                          12 , 0 );
   858   001AA2  0EB0               	movlw	low _lcd2_8
   859   001AA4  6E24               	movwf	lcd_8bit_send_cutsom_char@lcd^0,c
   860   001AA6  0E00               	movlw	high _lcd2_8
   861   001AA8  6E25               	movwf	(lcd_8bit_send_cutsom_char@lcd+1)^0,c
   862   001AAA  0E21               	movlw	low _customChar1
   863   001AAC  6E26               	movwf	lcd_8bit_send_cutsom_char@_chr^0,c
   864   001AAE  0E10               	movlw	high _customChar1
   865   001AB0  6E27               	movwf	(lcd_8bit_send_cutsom_char@_chr+1)^0,c
   866   001AB2  0E01               	movlw	1
   867   001AB4  6E28               	movwf	lcd_8bit_send_cutsom_char@row^0,c
   868   001AB6  0E0C               	movlw	12
   869   001AB8  6E29               	movwf	lcd_8bit_send_cutsom_char@column^0,c
   870   001ABA  0E00               	movlw	0
   871   001ABC  6E2A               	movwf	lcd_8bit_send_cutsom_char@mem_pos^0,c
   872   001ABE  ECFD  F00E         	call	_lcd_8bit_send_cutsom_char	;wreg free
   873   001AC2  0100               	movlb	0	; () banked
   874   001AC4  6FBA               	movwf	_ret& (0+255),b
   875   001AC6                     
   876                           ; BSR set to: 0
   877                           ;application.c: 141:         ret = lcd_8bit_send_cutsom_char(&lcd2_8 ,customChar2 , 1 , 
      +                          12 , 0 );
   878   001AC6  0EB0               	movlw	low _lcd2_8
   879   001AC8  6E24               	movwf	lcd_8bit_send_cutsom_char@lcd^0,c
   880   001ACA  0E00               	movlw	high _lcd2_8
   881   001ACC  6E25               	movwf	(lcd_8bit_send_cutsom_char@lcd+1)^0,c
   882   001ACE  0E19               	movlw	low _customChar2
   883   001AD0  6E26               	movwf	lcd_8bit_send_cutsom_char@_chr^0,c
   884   001AD2  0E10               	movlw	high _customChar2
   885   001AD4  6E27               	movwf	(lcd_8bit_send_cutsom_char@_chr+1)^0,c
   886   001AD6  0E01               	movlw	1
   887   001AD8  6E28               	movwf	lcd_8bit_send_cutsom_char@row^0,c
   888   001ADA  0E0C               	movlw	12
   889   001ADC  6E29               	movwf	lcd_8bit_send_cutsom_char@column^0,c
   890   001ADE  0E00               	movlw	0
   891   001AE0  6E2A               	movwf	lcd_8bit_send_cutsom_char@mem_pos^0,c
   892   001AE2  ECFD  F00E         	call	_lcd_8bit_send_cutsom_char	;wreg free
   893   001AE6  0100               	movlb	0	; () banked
   894   001AE8  6FBA               	movwf	_ret& (0+255),b
   895   001AEA                     
   896                           ; BSR set to: 0
   897                           ;application.c: 142:         ret = lcd_8bit_send_cutsom_char(&lcd2_8 ,customChar3 , 1 , 
      +                          12 , 0 );
   898   001AEA  0EB0               	movlw	low _lcd2_8
   899   001AEC  6E24               	movwf	lcd_8bit_send_cutsom_char@lcd^0,c
   900   001AEE  0E00               	movlw	high _lcd2_8
   901   001AF0  6E25               	movwf	(lcd_8bit_send_cutsom_char@lcd+1)^0,c
   902   001AF2  0E11               	movlw	low _customChar3
   903   001AF4  6E26               	movwf	lcd_8bit_send_cutsom_char@_chr^0,c
   904   001AF6  0E10               	movlw	high _customChar3
   905   001AF8  6E27               	movwf	(lcd_8bit_send_cutsom_char@_chr+1)^0,c
   906   001AFA  0E01               	movlw	1
   907   001AFC  6E28               	movwf	lcd_8bit_send_cutsom_char@row^0,c
   908   001AFE  0E0C               	movlw	12
   909   001B00  6E29               	movwf	lcd_8bit_send_cutsom_char@column^0,c
   910   001B02  0E00               	movlw	0
   911   001B04  6E2A               	movwf	lcd_8bit_send_cutsom_char@mem_pos^0,c
   912   001B06  ECFD  F00E         	call	_lcd_8bit_send_cutsom_char	;wreg free
   913   001B0A  0100               	movlb	0	; () banked
   914   001B0C  6FBA               	movwf	_ret& (0+255),b
   915   001B0E  EF51  F00D         	goto	l3357
   916   001B12  EF00  F000         	goto	start
   917   001B16                     __end_of_main:
   918                           	callstack 0
   919                           
   920 ;; *************** function _lcd_8bit_send_string *****************
   921 ;; Defined at:
   922 ;;		line 235 in file "ECU_Layer/LCD/ecu_lcd.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  lcd             2   22[COMRAM] PTR const struct .
   925 ;;		 -> lcd2_8(10), 
   926 ;;  str             2   24[COMRAM] PTR unsigned char 
   927 ;;		 -> number_txt(3), STR_1(13), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  ret             1   26[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      unsigned char 
   932 ;; Registers used:
   933 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;Total ram usage:        5 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 3
   946 ;; This function calls:
   947 ;;		_lcd_8bit_send_char_data
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text1
   954   001D70                     __ptext1:
   955                           	callstack 0
   956   001D70                     _lcd_8bit_send_string:
   957                           	callstack 27
   958   001D70                     
   959                           ;ECU_Layer/LCD/ecu_lcd.c: 236:     std_ReturnType ret = (std_ReturnType)0x01;
   960   001D70  0E01               	movlw	1
   961   001D72  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
   962   001D74                     
   963                           ;ECU_Layer/LCD/ecu_lcd.c: 237:     if(lcd == ((void*)0)){
   964   001D74  5017               	movf	lcd_8bit_send_string@lcd^0,w,c
   965   001D76  1018               	iorwf	(lcd_8bit_send_string@lcd+1)^0,w,c
   966   001D78  A4D8               	btfss	status,2,c
   967   001D7A  EFC1  F00E         	goto	u2051
   968   001D7E  EFC3  F00E         	goto	u2050
   969   001D82                     u2051:
   970   001D82  EFE2  F00E         	goto	l2985
   971   001D86                     u2050:
   972   001D86                     
   973                           ;ECU_Layer/LCD/ecu_lcd.c: 238:         ret = (std_ReturnType)0x00;
   974   001D86  0E00               	movlw	0
   975   001D88  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
   976                           
   977                           ;ECU_Layer/LCD/ecu_lcd.c: 239:     }
   978   001D8A  EFFB  F00E         	goto	l2987
   979   001D8E                     l2981:
   980                           
   981                           ;ECU_Layer/LCD/ecu_lcd.c: 242:             ret = lcd_8bit_send_char_data(lcd , *str++);
   982   001D8E  C017  F00E         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
   983   001D92  C018  F00F         	movff	lcd_8bit_send_string@lcd+1,lcd_8bit_send_char_data@lcd+1
   984   001D96  C019  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   985   001D9A  C01A  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
   986   001D9E  0E00               	movlw	low (__smallconst shr (0+16))
   987   001DA0  6EF8               	movwf	tblptru,c
   988   001DA2  0E0F               	movlw	(high __ramtop+-1)
   989   001DA4  64F7               	cpfsgt	tblptrh,c
   990   001DA6  D003               	bra	u2067
   991   001DA8  0008               	tblrd		*
   992   001DAA  50F5               	movf	tablat,w,c
   993   001DAC  D005               	bra	u2060
   994   001DAE                     u2067:
   995   001DAE  CFF6 FFE9          	movff	tblptrl,fsr0l
   996   001DB2  CFF7 FFEA          	movff	tblptrh,fsr0h
   997   001DB6  50EF               	movf	indf0,w,c
   998   001DB8                     u2060:
   999   001DB8  6E10               	movwf	lcd_8bit_send_char_data@data^0,c
  1000   001DBA  EC2C  F00E         	call	_lcd_8bit_send_char_data	;wreg free
  1001   001DBE  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  1002   001DC0  4A19               	infsnz	lcd_8bit_send_string@str^0,f,c
  1003   001DC2  2A1A               	incf	(lcd_8bit_send_string@str+1)^0,f,c
  1004   001DC4                     l2985:
  1005                           
  1006                           ;ECU_Layer/LCD/ecu_lcd.c: 241:         while(*str){
  1007   001DC4  C019  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1008   001DC8  C01A  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  1009   001DCC  0E00               	movlw	low (__smallconst shr (0+16))
  1010   001DCE  6EF8               	movwf	tblptru,c
  1011   001DD0  0E0F               	movlw	(high __ramtop+-1)
  1012   001DD2  64F7               	cpfsgt	tblptrh,c
  1013   001DD4  D003               	bra	u2077
  1014   001DD6  0008               	tblrd		*
  1015   001DD8  50F5               	movf	tablat,w,c
  1016   001DDA  D005               	bra	u2070
  1017   001DDC                     u2077:
  1018   001DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1019   001DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1020   001DE4  50EF               	movf	indf0,w,c
  1021   001DE6                     u2070:
  1022   001DE6  0900               	iorlw	0
  1023   001DE8  A4D8               	btfss	status,2,c
  1024   001DEA  EFF9  F00E         	goto	u2081
  1025   001DEE  EFFB  F00E         	goto	u2080
  1026   001DF2                     u2081:
  1027   001DF2  EFC7  F00E         	goto	l2981
  1028   001DF6                     u2080:
  1029   001DF6                     l2987:
  1030                           
  1031                           ;ECU_Layer/LCD/ecu_lcd.c: 246:     return ret;
  1032   001DF6  501B               	movf	lcd_8bit_send_string@ret^0,w,c
  1033   001DF8  0012               	return		;funcret
  1034   001DFA                     __end_of_lcd_8bit_send_string:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _lcd_8bit_send_cutsom_char *****************
  1038 ;; Defined at:
  1039 ;;		line 273 in file "ECU_Layer/LCD/ecu_lcd.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  lcd             2   35[COMRAM] PTR const struct .
  1042 ;;		 -> lcd2_8(10), 
  1043 ;;  _chr            2   37[COMRAM] PTR const unsigned char 
  1044 ;;		 -> customChar3(8), customChar2(8), customChar1(8), 
  1045 ;;  row             1   39[COMRAM] unsigned char 
  1046 ;;  column          1   40[COMRAM] unsigned char 
  1047 ;;  mem_pos         1   41[COMRAM] unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  i               1   45[COMRAM] unsigned char 
  1050 ;;  ret             1   44[COMRAM] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      unsigned char 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1060 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;Total ram usage:       11 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 5
  1067 ;; This function calls:
  1068 ;;		_lcd_8bit_send_char_data
  1069 ;;		_lcd_8bit_send_command
  1070 ;;		_lcd_8bit_send_data_pos
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text2
  1077   001DFA                     __ptext2:
  1078                           	callstack 0
  1079   001DFA                     _lcd_8bit_send_cutsom_char:
  1080                           	callstack 25
  1081   001DFA                     
  1082                           ;ECU_Layer/LCD/ecu_lcd.c: 275:     if(lcd == ((void*)0)){
  1083   001DFA  5024               	movf	lcd_8bit_send_cutsom_char@lcd^0,w,c
  1084   001DFC  1025               	iorwf	(lcd_8bit_send_cutsom_char@lcd+1)^0,w,c
  1085   001DFE  A4D8               	btfss	status,2,c
  1086   001E00  EF04  F00F         	goto	u2101
  1087   001E04  EF06  F00F         	goto	u2100
  1088   001E08                     u2101:
  1089   001E08  EF0A  F00F         	goto	l3011
  1090   001E0C                     u2100:
  1091   001E0C                     
  1092                           ;ECU_Layer/LCD/ecu_lcd.c: 276:         ret = (std_ReturnType)0x00;
  1093   001E0C  0E00               	movlw	0
  1094   001E0E  6E2D               	movwf	lcd_8bit_send_cutsom_char@ret^0,c
  1095                           
  1096                           ;ECU_Layer/LCD/ecu_lcd.c: 277:     }
  1097   001E10  EF40  F00F         	goto	l3027
  1098   001E14                     l3011:
  1099   001E14  C024  F00E         	movff	lcd_8bit_send_cutsom_char@lcd,lcd_8bit_send_command@lcd
  1100   001E18  C025  F00F         	movff	lcd_8bit_send_cutsom_char@lcd+1,lcd_8bit_send_command@lcd+1
  1101   001E1C  502A               	movf	lcd_8bit_send_cutsom_char@mem_pos^0,w,c
  1102   001E1E  0D08               	mullw	8
  1103   001E20  50F3               	movf	243,w,c
  1104   001E22  0F40               	addlw	64
  1105   001E24  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1106   001E26  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  1107   001E2A                     
  1108                           ;ECU_Layer/LCD/ecu_lcd.c: 281:         for(uint8 i = 0 ; i<8 ; i++){
  1109   001E2A  0E00               	movlw	0
  1110   001E2C  6E2E               	movwf	lcd_8bit_send_cutsom_char@i^0,c
  1111   001E2E                     l3019:
  1112   001E2E  C024  F00E         	movff	lcd_8bit_send_cutsom_char@lcd,lcd_8bit_send_char_data@lcd
  1113   001E32  C025  F00F         	movff	lcd_8bit_send_cutsom_char@lcd+1,lcd_8bit_send_char_data@lcd+1
  1114   001E36  502E               	movf	lcd_8bit_send_cutsom_char@i^0,w,c
  1115   001E38  2426               	addwf	lcd_8bit_send_cutsom_char@_chr^0,w,c
  1116   001E3A  6E2B               	movwf	??_lcd_8bit_send_cutsom_char^0,c
  1117   001E3C  0E00               	movlw	0
  1118   001E3E  2027               	addwfc	(lcd_8bit_send_cutsom_char@_chr+1)^0,w,c
  1119   001E40  6E2C               	movwf	(??_lcd_8bit_send_cutsom_char+1)^0,c
  1120   001E42  C02B  FFF6         	movff	??_lcd_8bit_send_cutsom_char,tblptrl
  1121   001E46  C02C  FFF7         	movff	??_lcd_8bit_send_cutsom_char+1,tblptrh
  1122   001E4A                     	if	0	;tblptru may be non-zero
  1123   001E4A                     	endif
  1124   001E4A                     	if	0	;tblptru may be non-zero
  1125   001E4A                     	endif
  1126   001E4A  0008               	tblrd		*
  1127   001E4C  CFF5 F010          	movff	tablat,lcd_8bit_send_char_data@data
  1128   001E50  EC2C  F00E         	call	_lcd_8bit_send_char_data	;wreg free
  1129   001E54                     
  1130                           ;ECU_Layer/LCD/ecu_lcd.c: 283:         }
  1131   001E54  2A2E               	incf	lcd_8bit_send_cutsom_char@i^0,f,c
  1132   001E56  0E07               	movlw	7
  1133   001E58  642E               	cpfsgt	lcd_8bit_send_cutsom_char@i^0,c
  1134   001E5A  EF31  F00F         	goto	u2111
  1135   001E5E  EF33  F00F         	goto	u2110
  1136   001E62                     u2111:
  1137   001E62  EF17  F00F         	goto	l3019
  1138   001E66                     u2110:
  1139   001E66                     
  1140                           ;ECU_Layer/LCD/ecu_lcd.c: 284:         ret = lcd_8bit_send_data_pos(lcd , row , column ,
      +                           mem_pos);
  1141   001E66  C024  F01E         	movff	lcd_8bit_send_cutsom_char@lcd,lcd_8bit_send_data_pos@lcd
  1142   001E6A  C025  F01F         	movff	lcd_8bit_send_cutsom_char@lcd+1,lcd_8bit_send_data_pos@lcd+1
  1143   001E6E  C028  F020         	movff	lcd_8bit_send_cutsom_char@row,lcd_8bit_send_data_pos@row
  1144   001E72  C029  F021         	movff	lcd_8bit_send_cutsom_char@column,lcd_8bit_send_data_pos@column
  1145   001E76  C02A  F022         	movff	lcd_8bit_send_cutsom_char@mem_pos,lcd_8bit_send_data_pos@data
  1146   001E7A  EC33  F010         	call	_lcd_8bit_send_data_pos	;wreg free
  1147   001E7E  6E2D               	movwf	lcd_8bit_send_cutsom_char@ret^0,c
  1148   001E80                     l3027:
  1149                           
  1150                           ;ECU_Layer/LCD/ecu_lcd.c: 287:     return ret;
  1151   001E80  502D               	movf	lcd_8bit_send_cutsom_char@ret^0,w,c
  1152   001E82  0012               	return		;funcret
  1153   001E84                     __end_of_lcd_8bit_send_cutsom_char:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _lcd_8bit_send_data_pos *****************
  1157 ;; Defined at:
  1158 ;;		line 215 in file "ECU_Layer/LCD/ecu_lcd.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  lcd             2   29[COMRAM] PTR const struct .
  1161 ;;		 -> lcd2_8(10), 
  1162 ;;  row             1   31[COMRAM] unsigned char 
  1163 ;;  column          1   32[COMRAM] unsigned char 
  1164 ;;  data            1   33[COMRAM] unsigned char 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  ret             1   34[COMRAM] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      unsigned char 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:        6 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 4
  1183 ;; This function calls:
  1184 ;;		_lcd_8bit_send_char_data
  1185 ;;		_lcd_8bit_send_enable
  1186 ;;		_lcd_8bit_set_cursor
  1187 ;; This function is called by:
  1188 ;;		_lcd_8bit_send_cutsom_char
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text3
  1193   002066                     __ptext3:
  1194                           	callstack 0
  1195   002066                     _lcd_8bit_send_data_pos:
  1196                           	callstack 25
  1197   002066                     
  1198                           ;ECU_Layer/LCD/ecu_lcd.c: 217:     if(lcd == ((void*)0)){
  1199   002066  501E               	movf	lcd_8bit_send_data_pos@lcd^0,w,c
  1200   002068  101F               	iorwf	(lcd_8bit_send_data_pos@lcd+1)^0,w,c
  1201   00206A  A4D8               	btfss	status,2,c
  1202   00206C  EF3A  F010         	goto	u1991
  1203   002070  EF3C  F010         	goto	u1990
  1204   002074                     u1991:
  1205   002074  EF40  F010         	goto	l2909
  1206   002078                     u1990:
  1207   002078                     
  1208                           ;ECU_Layer/LCD/ecu_lcd.c: 218:          ret = (std_ReturnType)0x00;
  1209   002078  0E00               	movlw	0
  1210   00207A  6E23               	movwf	lcd_8bit_send_data_pos@ret^0,c
  1211                           
  1212                           ;ECU_Layer/LCD/ecu_lcd.c: 219:     }
  1213   00207C  EF5B  F010         	goto	l2911
  1214   002080                     l2909:
  1215                           
  1216                           ;ECU_Layer/LCD/ecu_lcd.c: 221:         ret = lcd_8bit_set_cursor(lcd , row , column);
  1217   002080  C01E  F017         	movff	lcd_8bit_send_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1218   002084  C01F  F018         	movff	lcd_8bit_send_data_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  1219   002088  C020  F019         	movff	lcd_8bit_send_data_pos@row,lcd_8bit_set_cursor@row
  1220   00208C  C021  F01A         	movff	lcd_8bit_send_data_pos@column,lcd_8bit_set_cursor@column
  1221   002090  ECCF  F00C         	call	_lcd_8bit_set_cursor	;wreg free
  1222   002094  6E23               	movwf	lcd_8bit_send_data_pos@ret^0,c
  1223                           
  1224                           ;ECU_Layer/LCD/ecu_lcd.c: 222:         ret = lcd_8bit_send_char_data(lcd , data);
  1225   002096  C01E  F00E         	movff	lcd_8bit_send_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1226   00209A  C01F  F00F         	movff	lcd_8bit_send_data_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  1227   00209E  C022  F010         	movff	lcd_8bit_send_data_pos@data,lcd_8bit_send_char_data@data
  1228   0020A2  EC2C  F00E         	call	_lcd_8bit_send_char_data	;wreg free
  1229   0020A6  6E23               	movwf	lcd_8bit_send_data_pos@ret^0,c
  1230                           
  1231                           ;ECU_Layer/LCD/ecu_lcd.c: 223:         ret = lcd_8bit_send_enable(lcd);
  1232   0020A8  C01E  F00B         	movff	lcd_8bit_send_data_pos@lcd,lcd_8bit_send_enable@lcd
  1233   0020AC  C01F  F00C         	movff	lcd_8bit_send_data_pos@lcd+1,lcd_8bit_send_enable@lcd+1
  1234   0020B0  EC5D  F010         	call	_lcd_8bit_send_enable	;wreg free
  1235   0020B4  6E23               	movwf	lcd_8bit_send_data_pos@ret^0,c
  1236   0020B6                     l2911:
  1237                           
  1238                           ;ECU_Layer/LCD/ecu_lcd.c: 225:     return ret;
  1239   0020B6  5023               	movf	lcd_8bit_send_data_pos@ret^0,w,c
  1240   0020B8  0012               	return		;funcret
  1241   0020BA                     __end_of_lcd_8bit_send_data_pos:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _lcd_8bit_set_cursor *****************
  1245 ;; Defined at:
  1246 ;;		line 368 in file "ECU_Layer/LCD/ecu_lcd.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  lcd             2   22[COMRAM] PTR const struct .
  1249 ;;		 -> lcd2_8(10), 
  1250 ;;  row             1   24[COMRAM] unsigned char 
  1251 ;;  column          1   25[COMRAM] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  ret             1   28[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      unsigned char 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:        7 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 3
  1270 ;; This function calls:
  1271 ;;		_lcd_8bit_send_command
  1272 ;; This function is called by:
  1273 ;;		_lcd_8bit_send_data_pos
  1274 ;;		_lcd_8bit_send_string_pos
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text4
  1279   00199E                     __ptext4:
  1280                           	callstack 0
  1281   00199E                     _lcd_8bit_set_cursor:
  1282                           	callstack 25
  1283   00199E                     
  1284                           ;ECU_Layer/LCD/ecu_lcd.c: 369:     std_ReturnType ret = (std_ReturnType)0x01;
  1285   00199E  0E01               	movlw	1
  1286   0019A0  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1287   0019A2                     
  1288                           ;ECU_Layer/LCD/ecu_lcd.c: 370:     column--;
  1289   0019A2  061A               	decf	lcd_8bit_set_cursor@column^0,f,c
  1290   0019A4                     
  1291                           ;ECU_Layer/LCD/ecu_lcd.c: 371:     if(lcd == ((void*)0)){
  1292   0019A4  5017               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1293   0019A6  1018               	iorwf	(lcd_8bit_set_cursor@lcd+1)^0,w,c
  1294   0019A8  A4D8               	btfss	status,2,c
  1295   0019AA  EFD9  F00C         	goto	u1931
  1296   0019AE  EFDB  F00C         	goto	u1930
  1297   0019B2                     u1931:
  1298   0019B2  EF0F  F00D         	goto	l2815
  1299   0019B6                     u1930:
  1300   0019B6                     
  1301                           ;ECU_Layer/LCD/ecu_lcd.c: 372:         ret = (std_ReturnType)0x00;
  1302   0019B6  0E00               	movlw	0
  1303   0019B8  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1304   0019BA  EF0F  F00D         	goto	l2815
  1305   0019BE                     l2807:
  1306   0019BE  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1307   0019C2  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1308   0019C6  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1309   0019C8  0F80               	addlw	128
  1310   0019CA  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1311   0019CC  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  1312   0019D0  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1313                           
  1314                           ;ECU_Layer/LCD/ecu_lcd.c: 376:         break;
  1315   0019D2  EF2C  F00D         	goto	l2817
  1316   0019D6                     l2809:
  1317   0019D6  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1318   0019DA  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1319   0019DE  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1320   0019E0  0FC0               	addlw	192
  1321   0019E2  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1322   0019E4  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  1323   0019E8  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1324                           
  1325                           ;ECU_Layer/LCD/ecu_lcd.c: 378:         break;
  1326   0019EA  EF2C  F00D         	goto	l2817
  1327   0019EE                     l2811:
  1328   0019EE  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1329   0019F2  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1330   0019F6  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1331   0019F8  0F94               	addlw	148
  1332   0019FA  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1333   0019FC  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  1334   001A00  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1335                           
  1336                           ;ECU_Layer/LCD/ecu_lcd.c: 380:         break;
  1337   001A02  EF2C  F00D         	goto	l2817
  1338   001A06                     l2813:
  1339   001A06  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1340   001A0A  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1341   001A0E  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1342   001A10  0FD4               	addlw	212
  1343   001A12  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1344   001A14  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  1345   001A18  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1346                           
  1347                           ;ECU_Layer/LCD/ecu_lcd.c: 382:         break;
  1348   001A1A  EF2C  F00D         	goto	l2817
  1349   001A1E                     l2815:
  1350   001A1E  5019               	movf	lcd_8bit_set_cursor@row^0,w,c
  1351   001A20  6E1B               	movwf	??_lcd_8bit_set_cursor^0,c
  1352   001A22  6A1C               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1353                           
  1354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 1, Range of values is 0 to 0
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte            4     3 (average)
  1360                           ;	Chosen strategy is simple_byte
  1361   001A24  501C               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1362   001A26  0A00               	xorlw	0	; case 0
  1363   001A28  B4D8               	btfsc	status,2,c
  1364   001A2A  EF19  F00D         	goto	l3567
  1365   001A2E  EF2C  F00D         	goto	l2817
  1366   001A32                     l3567:
  1367                           
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 4, Range of values is 1 to 4
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte           13     7 (average)
  1373                           ;	Chosen strategy is simple_byte
  1374   001A32  501B               	movf	??_lcd_8bit_set_cursor^0,w,c
  1375   001A34  0A01               	xorlw	1	; case 1
  1376   001A36  B4D8               	btfsc	status,2,c
  1377   001A38  EFDF  F00C         	goto	l2807
  1378   001A3C  0A03               	xorlw	3	; case 2
  1379   001A3E  B4D8               	btfsc	status,2,c
  1380   001A40  EFEB  F00C         	goto	l2809
  1381   001A44  0A01               	xorlw	1	; case 3
  1382   001A46  B4D8               	btfsc	status,2,c
  1383   001A48  EFF7  F00C         	goto	l2811
  1384   001A4C  0A07               	xorlw	7	; case 4
  1385   001A4E  B4D8               	btfsc	status,2,c
  1386   001A50  EF03  F00D         	goto	l2813
  1387   001A54  EF2C  F00D         	goto	l2817
  1388   001A58                     l2817:
  1389                           
  1390                           ;ECU_Layer/LCD/ecu_lcd.c: 386:     return ret;
  1391   001A58  501D               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1392   001A5A  0012               	return		;funcret
  1393   001A5C                     __end_of_lcd_8bit_set_cursor:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _lcd_8bit_send_char_data *****************
  1397 ;; Defined at:
  1398 ;;		line 190 in file "ECU_Layer/LCD/ecu_lcd.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  lcd             2   13[COMRAM] PTR const struct .
  1401 ;;		 -> lcd2_8(10), 
  1402 ;;  data            1   15[COMRAM] unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  pin             1   21[COMRAM] unsigned char 
  1405 ;;  ret             1   20[COMRAM] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      unsigned char 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1415 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;Total ram usage:        9 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 2
  1422 ;; This function calls:
  1423 ;;		_gpio_pin_write_logic
  1424 ;;		_lcd_8bit_send_enable
  1425 ;; This function is called by:
  1426 ;;		_lcd_8bit_send_data_pos
  1427 ;;		_lcd_8bit_send_string
  1428 ;;		_lcd_8bit_send_cutsom_char
  1429 ;;		_lcd_4bit_send_string
  1430 ;;		_lcd_4bit_send_string_pos
  1431 ;;		_lcd_8bit_send_string_pos
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text5
  1436   001C58                     __ptext5:
  1437                           	callstack 0
  1438   001C58                     _lcd_8bit_send_char_data:
  1439                           	callstack 27
  1440   001C58                     
  1441                           ;ECU_Layer/LCD/ecu_lcd.c: 192:     if(lcd == ((void*)0)){
  1442   001C58  500E               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1443   001C5A  100F               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1444   001C5C  A4D8               	btfss	status,2,c
  1445   001C5E  EF33  F00E         	goto	u1901
  1446   001C62  EF35  F00E         	goto	u1900
  1447   001C66                     u1901:
  1448   001C66  EF39  F00E         	goto	l2779
  1449   001C6A                     u1900:
  1450   001C6A                     
  1451                           ;ECU_Layer/LCD/ecu_lcd.c: 193:         ret = (std_ReturnType)0x00;
  1452   001C6A  0E00               	movlw	0
  1453   001C6C  6E15               	movwf	lcd_8bit_send_char_data@ret^0,c
  1454                           
  1455                           ;ECU_Layer/LCD/ecu_lcd.c: 194:     }
  1456   001C6E  EF70  F00E         	goto	l2795
  1457   001C72                     l2779:
  1458   001C72  C00E  F001         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1459   001C76  C00F  F002         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1460   001C7A  0E01               	movlw	1
  1461   001C7C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1462   001C7E  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  1463   001C82                     
  1464                           ;ECU_Layer/LCD/ecu_lcd.c: 197:         for(uint8 pin = 0 ; pin < 8 ; pin++){
  1465   001C82  0E00               	movlw	0
  1466   001C84  6E16               	movwf	lcd_8bit_send_char_data@pin^0,c
  1467   001C86                     l2787:
  1468   001C86  5016               	movf	lcd_8bit_send_char_data@pin^0,w,c
  1469   001C88  240E               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  1470   001C8A  6E11               	movwf	??_lcd_8bit_send_char_data^0,c
  1471   001C8C  0E00               	movlw	0
  1472   001C8E  200F               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1473   001C90  6E12               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  1474   001C92  0E02               	movlw	2
  1475   001C94  2411               	addwf	??_lcd_8bit_send_char_data^0,w,c
  1476   001C96  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  1477   001C98  0E00               	movlw	0
  1478   001C9A  2012               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  1479   001C9C  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1480   001C9E  C016  F013         	movff	lcd_8bit_send_char_data@pin,??_lcd_8bit_send_char_data+2
  1481   001CA2  C010  F014         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  1482   001CA6  2A13               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  1483   001CA8  EF58  F00E         	goto	u1914
  1484   001CAC                     u1915:
  1485   001CAC  90D8               	bcf	status,0,c
  1486   001CAE  3214               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  1487   001CB0                     u1914:
  1488   001CB0  2E13               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  1489   001CB2  EF56  F00E         	goto	u1915
  1490   001CB6  5014               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  1491   001CB8  0B01               	andlw	1
  1492   001CBA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1493   001CBC  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  1494   001CC0                     
  1495                           ;ECU_Layer/LCD/ecu_lcd.c: 199:         }
  1496   001CC0  2A16               	incf	lcd_8bit_send_char_data@pin^0,f,c
  1497   001CC2  0E07               	movlw	7
  1498   001CC4  6416               	cpfsgt	lcd_8bit_send_char_data@pin^0,c
  1499   001CC6  EF67  F00E         	goto	u1921
  1500   001CCA  EF69  F00E         	goto	u1920
  1501   001CCE                     u1921:
  1502   001CCE  EF43  F00E         	goto	l2787
  1503   001CD2                     u1920:
  1504   001CD2                     
  1505                           ;ECU_Layer/LCD/ecu_lcd.c: 200:         ret = lcd_8bit_send_enable(lcd);
  1506   001CD2  C00E  F00B         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable@lcd
  1507   001CD6  C00F  F00C         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable@lcd+1
  1508   001CDA  EC5D  F010         	call	_lcd_8bit_send_enable	;wreg free
  1509   001CDE  6E15               	movwf	lcd_8bit_send_char_data@ret^0,c
  1510   001CE0                     l2795:
  1511                           
  1512                           ;ECU_Layer/LCD/ecu_lcd.c: 204:     return ret;
  1513   001CE0  5015               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1514   001CE2  0012               	return		;funcret
  1515   001CE4                     __end_of_lcd_8bit_send_char_data:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _convert_uint8_to_string *****************
  1519 ;; Defined at:
  1520 ;;		line 304 in file "ECU_Layer/LCD/ecu_lcd.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  value           1    wreg     unsigned char 
  1523 ;;  str             2   84[COMRAM] PTR unsigned char 
  1524 ;;		 -> number_txt(3), 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  value           1   86[COMRAM] unsigned char 
  1527 ;;  ret             1   87[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      unsigned char 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;Total ram usage:        4 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 8
  1544 ;; This function calls:
  1545 ;;		_memset
  1546 ;;		_sprintf
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text6
  1553   00200C                     __ptext6:
  1554                           	callstack 0
  1555   00200C                     _convert_uint8_to_string:
  1556                           	callstack 22
  1557                           
  1558                           ;incstack = 0
  1559                           ;convert_uint8_to_string@value stored from wreg
  1560   00200C  6E57               	movwf	convert_uint8_to_string@value^0,c
  1561   00200E                     
  1562                           ;ECU_Layer/LCD/ecu_lcd.c: 306:     if(str == ((void*)0)){
  1563   00200E  5055               	movf	convert_uint8_to_string@str^0,w,c
  1564   002010  1056               	iorwf	(convert_uint8_to_string@str+1)^0,w,c
  1565   002012  A4D8               	btfss	status,2,c
  1566   002014  EF0E  F010         	goto	u2091
  1567   002018  EF10  F010         	goto	u2090
  1568   00201C                     u2091:
  1569   00201C  EF14  F010         	goto	l2997
  1570   002020                     u2090:
  1571   002020                     
  1572                           ;ECU_Layer/LCD/ecu_lcd.c: 307:         ret = (std_ReturnType)0x00;
  1573   002020  0E00               	movlw	0
  1574   002022  6E58               	movwf	convert_uint8_to_string@ret^0,c
  1575                           
  1576                           ;ECU_Layer/LCD/ecu_lcd.c: 308:     }
  1577   002024  EF31  F010         	goto	l3001
  1578   002028                     l2997:
  1579   002028  C055  F001         	movff	convert_uint8_to_string@str,memset@dest
  1580   00202C  C056  F002         	movff	convert_uint8_to_string@str+1,memset@dest+1
  1581   002030  0E2F               	movlw	47
  1582   002032  6E04               	movwf	(memset@c+1)^0,c
  1583   002034  0E30               	movlw	48
  1584   002036  6E03               	movwf	memset@c^0,c
  1585   002038  0E00               	movlw	0
  1586   00203A  6E06               	movwf	(memset@n+1)^0,c
  1587   00203C  0E04               	movlw	4
  1588   00203E  6E05               	movwf	memset@n^0,c
  1589   002040  ECEB  F008         	call	_memset	;wreg free
  1590   002044                     
  1591                           ;ECU_Layer/LCD/ecu_lcd.c: 311:         ret = sprintf(str , "%i" , value);
  1592   002044  C055  F03F         	movff	convert_uint8_to_string@str,sprintf@s
  1593   002048  C056  F040         	movff	convert_uint8_to_string@str+1,sprintf@s+1
  1594   00204C  0E36               	movlw	low STR_2
  1595   00204E  6E41               	movwf	sprintf@fmt^0,c
  1596   002050  0E10               	movlw	high STR_2
  1597   002052  6E42               	movwf	(sprintf@fmt+1)^0,c
  1598   002054  C057  F043         	movff	convert_uint8_to_string@value,?_sprintf+4
  1599   002058  6A44               	clrf	(?_sprintf+5)^0,c
  1600   00205A  ECD8  F00F         	call	_sprintf	;wreg free
  1601   00205E  503F               	movf	?_sprintf^0,w,c
  1602   002060  6E58               	movwf	convert_uint8_to_string@ret^0,c
  1603   002062                     l3001:
  1604                           
  1605                           ;ECU_Layer/LCD/ecu_lcd.c: 313:     return ret;
  1606   002062  5058               	movf	convert_uint8_to_string@ret^0,w,c
  1607   002064  0012               	return		;funcret
  1608   002066                     __end_of_convert_uint8_to_string:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _sprintf *****************
  1612 ;; Defined at:
  1613 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  s               2   62[COMRAM] PTR unsigned char 
  1616 ;;		 -> number_txt(3), 
  1617 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  1618 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  f              12   72[COMRAM] struct _IO_FILE
  1621 ;;  ap              2   70[COMRAM] PTR void [1]
  1622 ;;		 -> ?_sprintf(2), 
  1623 ;;  ret             2   68[COMRAM] int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2   62[COMRAM] int 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:       22 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 7
  1640 ;; This function calls:
  1641 ;;		_vfprintf
  1642 ;; This function is called by:
  1643 ;;		_convert_uint8_to_string
  1644 ;;		_convert_uint16_to_string
  1645 ;;		_convert_uint32_to_string
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text7
  1650   001FB0                     __ptext7:
  1651                           	callstack 0
  1652   001FB0                     _sprintf:
  1653                           	callstack 22
  1654   001FB0  0E43               	movlw	low (?_sprintf+4)
  1655   001FB2  6E47               	movwf	sprintf@ap^0,c
  1656   001FB4  0E00               	movlw	high (?_sprintf+4)
  1657   001FB6  6E48               	movwf	(sprintf@ap+1)^0,c
  1658   001FB8  C03F  F049         	movff	sprintf@s,sprintf@f
  1659   001FBC  C040  F04A         	movff	sprintf@s+1,sprintf@f+1
  1660   001FC0  0E00               	movlw	0
  1661   001FC2  6E4D               	movwf	(sprintf@f+4)^0,c
  1662   001FC4  0E00               	movlw	0
  1663   001FC6  6E4C               	movwf	(sprintf@f+3)^0,c
  1664   001FC8  0E00               	movlw	0
  1665   001FCA  6E54               	movwf	(sprintf@f+11)^0,c
  1666   001FCC  0E00               	movlw	0
  1667   001FCE  6E53               	movwf	(sprintf@f+10)^0,c
  1668   001FD0  0E49               	movlw	low sprintf@f
  1669   001FD2  6E37               	movwf	vfprintf@fp^0,c
  1670   001FD4  0E00               	movlw	high sprintf@f
  1671   001FD6  6E38               	movwf	(vfprintf@fp+1)^0,c
  1672   001FD8  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  1673   001FDC  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1674   001FE0  0E47               	movlw	low sprintf@ap
  1675   001FE2  6E3B               	movwf	vfprintf@ap^0,c
  1676   001FE4  0E00               	movlw	high sprintf@ap
  1677   001FE6  6E3C               	movwf	(vfprintf@ap+1)^0,c
  1678   001FE8  ECA9  F00F         	call	_vfprintf	;wreg free
  1679   001FEC  C037  F045         	movff	?_vfprintf,sprintf@ret
  1680   001FF0  C038  F046         	movff	?_vfprintf+1,sprintf@ret+1
  1681   001FF4  504C               	movf	(sprintf@f+3)^0,w,c
  1682   001FF6  243F               	addwf	sprintf@s^0,w,c
  1683   001FF8  6ED9               	movwf	fsr2l,c
  1684   001FFA  504D               	movf	(sprintf@f+4)^0,w,c
  1685   001FFC  2040               	addwfc	(sprintf@s+1)^0,w,c
  1686   001FFE  6EDA               	movwf	fsr2h,c
  1687   002000  6ADF               	clrf	indf2,c
  1688   002002  C045  F03F         	movff	sprintf@ret,?_sprintf
  1689   002006  C046  F040         	movff	sprintf@ret+1,?_sprintf+1
  1690   00200A  0012               	return		;funcret
  1691   00200C                     __end_of_sprintf:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _vfprintf *****************
  1695 ;; Defined at:
  1696 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  1699 ;;		 -> sprintf@f(12), 
  1700 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
  1701 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1702 ;;  ap              2   58[COMRAM] PTR PTR void 
  1703 ;;		 -> sprintf@ap(2), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
  1706 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2   54[COMRAM] int 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        8 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 6
  1723 ;; This function calls:
  1724 ;;		_vfpfcnvrt
  1725 ;; This function is called by:
  1726 ;;		_sprintf
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text8
  1731   001F52                     __ptext8:
  1732                           	callstack 0
  1733   001F52                     _vfprintf:
  1734                           	callstack 22
  1735   001F52                     
  1736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1737   001F52  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  1738   001F56  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1739   001F5A                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1553:     nout = 
      +                          0;
  1741   001F5A  0E00               	movlw	0
  1742   001F5C  6E6F               	movwf	(_nout+1)^0,c
  1743   001F5E  0E00               	movlw	0
  1744   001F60  6E6E               	movwf	_nout^0,c
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1747   001F62  EFC5  F00F         	goto	l2831
  1748   001F66                     l2829:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1557:         nou
      +                          t +=
  1751   001F66  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  1752   001F6A  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1753   001F6E  0E3D               	movlw	low vfprintf@cfmt
  1754   001F70  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  1755   001F72  0E00               	movlw	high vfprintf@cfmt
  1756   001F74  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1757   001F76  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1758   001F7A  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1759   001F7E  ECAC  F009         	call	_vfpfcnvrt	;wreg free
  1760   001F82  5029               	movf	?_vfpfcnvrt^0,w,c
  1761   001F84  266E               	addwf	_nout^0,f,c
  1762   001F86  502A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1763   001F88  226F               	addwfc	(_nout+1)^0,f,c
  1764   001F8A                     l2831:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1767   001F8A  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1768   001F8E  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1769   001F92                     	if	0	;tblptru may be non-zero
  1770   001F92                     	endif
  1771   001F92                     	if	0	;tblptru may be non-zero
  1772   001F92                     	endif
  1773   001F92  0008               	tblrd		*
  1774   001F94  50F5               	movf	tablat,w,c
  1775   001F96  0900               	iorlw	0
  1776   001F98  A4D8               	btfss	status,2,c
  1777   001F9A  EFD1  F00F         	goto	u1941
  1778   001F9E  EFD3  F00F         	goto	u1940
  1779   001FA2                     u1941:
  1780   001FA2  EFB3  F00F         	goto	l2829
  1781   001FA6                     u1940:
  1782   001FA6                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1562:     return 
      +                          nout;
  1784   001FA6  C06E  F037         	movff	_nout,?_vfprintf
  1785   001FAA  C06F  F038         	movff	_nout+1,?_vfprintf+1
  1786   001FAE  0012               	return		;funcret
  1787   001FB0                     __end_of_vfprintf:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _vfpfcnvrt *****************
  1791 ;; Defined at:
  1792 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1795 ;;		 -> sprintf@f(12), 
  1796 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
  1797 ;;		 -> vfprintf@cfmt(2), 
  1798 ;;  ap              2   44[COMRAM] PTR PTR void 
  1799 ;;		 -> sprintf@ap(2), 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  convarg         4   48[COMRAM] struct .
  1802 ;;  cp              2   52[COMRAM] PTR unsigned char 
  1803 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1804 ;;  i               2    0        int 
  1805 ;;  done            2    0        int 
  1806 ;;  c               1    0        unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2   40[COMRAM] int 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1816 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;Total ram usage:       14 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 5
  1823 ;; This function calls:
  1824 ;;		_dtoa
  1825 ;;		_fputc
  1826 ;; This function is called by:
  1827 ;;		_vfprintf
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text9
  1832   001358                     __ptext9:
  1833                           	callstack 0
  1834   001358                     _vfpfcnvrt:
  1835                           	callstack 22
  1836   001358                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1838   001358  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839   00135C  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840   001360  CFDE FFF6          	movff	postinc2,tblptrl
  1841   001364  CFDD FFF7          	movff	postdec2,tblptrh
  1842   001368                     	if	0	;tblptru may be non-zero
  1843   001368                     	endif
  1844   001368                     	if	0	;tblptru may be non-zero
  1845   001368                     	endif
  1846   001368  0008               	tblrd		*
  1847   00136A  50F5               	movf	tablat,w,c
  1848   00136C  0A25               	xorlw	37
  1849   00136E  A4D8               	btfss	status,2,c
  1850   001370  EFBC  F009         	goto	u1851
  1851   001374  EFBE  F009         	goto	u1850
  1852   001378                     u1851:
  1853   001378  EF30  F00A         	goto	l2751
  1854   00137C                     u1850:
  1855   00137C                     
  1856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1857   00137C  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858   001380  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859   001384  2ADE               	incf	postinc2,f,c
  1860   001386  0E00               	movlw	0
  1861   001388  22DD               	addwfc	postdec2,f,c
  1862   00138A                     
  1863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1864   00138A  0E00               	movlw	0
  1865   00138C  6E71               	movwf	(_width+1)^0,c
  1866   00138E  0E00               	movlw	0
  1867   001390  6E70               	movwf	_width^0,c
  1868   001392  C070  F074         	movff	_width,_flags
  1869   001396                     
  1870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1871   001396  6872               	setf	_prec^0,c
  1872   001398  6873               	setf	(_prec+1)^0,c
  1873   00139A                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1875   00139A  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876   00139E  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877   0013A2  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  1878   0013A6  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
  1879   0013AA                     
  1880                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1881   0013AA  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1882   0013AE  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1883   0013B2                     	if	0	;tblptru may be non-zero
  1884   0013B2                     	endif
  1885   0013B2                     	if	0	;tblptru may be non-zero
  1886   0013B2                     	endif
  1887   0013B2  0008               	tblrd		*
  1888   0013B4  50F5               	movf	tablat,w,c
  1889   0013B6  0A64               	xorlw	100
  1890   0013B8  B4D8               	btfsc	status,2,c
  1891   0013BA  EFE1  F009         	goto	u1861
  1892   0013BE  EFE3  F009         	goto	u1860
  1893   0013C2                     u1861:
  1894   0013C2  EFF1  F009         	goto	l2739
  1895   0013C6                     u1860:
  1896   0013C6  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1897   0013CA  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1898   0013CE                     	if	0	;tblptru may be non-zero
  1899   0013CE                     	endif
  1900   0013CE                     	if	0	;tblptru may be non-zero
  1901   0013CE                     	endif
  1902   0013CE  0008               	tblrd		*
  1903   0013D0  50F5               	movf	tablat,w,c
  1904   0013D2  0A69               	xorlw	105
  1905   0013D4  A4D8               	btfss	status,2,c
  1906   0013D6  EFEF  F009         	goto	u1871
  1907   0013DA  EFF1  F009         	goto	u1870
  1908   0013DE                     u1871:
  1909   0013DE  EF23  F00A         	goto	l2745
  1910   0013E2                     u1870:
  1911   0013E2                     l2739:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1914   0013E2  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1915   0013E6  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1916   0013EA  CFDF F02F          	movff	indf2,??_vfpfcnvrt
  1917   0013EE  0E02               	movlw	2
  1918   0013F0  26DE               	addwf	postinc2,f,c
  1919   0013F2  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
  1920   0013F6  0E00               	movlw	0
  1921   0013F8  22DD               	addwfc	postdec2,f,c
  1922   0013FA  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1923   0013FE  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1924   001402  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
  1925   001406  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1928   00140A  0E01               	movlw	1
  1929   00140C  2435               	addwf	vfpfcnvrt@cp^0,w,c
  1930   00140E  6E2F               	movwf	??_vfpfcnvrt^0,c
  1931   001410  0E00               	movlw	0
  1932   001412  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1933   001414  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
  1934   001416  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1935   00141A  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1936   00141E  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1937   001422  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1938   001426                     
  1939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          int) dtoa(fp, convarg.sint);
  1940   001426  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1941   00142A  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1942   00142E  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1943   001432  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1944   001436  EC1D  F008         	call	_dtoa	;wreg free
  1945   00143A  C01C  F029         	movff	?_dtoa,?_vfpfcnvrt
  1946   00143E  C01D  F02A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1947   001442  EF4D  F00A         	goto	l1225
  1948   001446                     l2745:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1951   001446  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952   00144A  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953   00144E  2ADE               	incf	postinc2,f,c
  1954   001450  0E00               	movlw	0
  1955   001452  22DD               	addwfc	postdec2,f,c
  1956   001454                     
  1957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1536:         ret
      +                          urn (int) 0;
  1958   001454  0E00               	movlw	0
  1959   001456  6E2A               	movwf	(?_vfpfcnvrt+1)^0,c
  1960   001458  0E00               	movlw	0
  1961   00145A  6E29               	movwf	?_vfpfcnvrt^0,c
  1962   00145C  EF4D  F00A         	goto	l1225
  1963   001460                     l2751:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1966   001460  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967   001464  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968   001468  CFDE FFF6          	movff	postinc2,tblptrl
  1969   00146C  CFDD FFF7          	movff	postdec2,tblptrh
  1970   001470                     	if	0	;tblptru may be non-zero
  1971   001470                     	endif
  1972   001470                     	if	0	;tblptru may be non-zero
  1973   001470                     	endif
  1974   001470  0008               	tblrd		*
  1975   001472  50F5               	movf	tablat,w,c
  1976   001474  6E01               	movwf	fputc@c^0,c
  1977   001476  6A02               	clrf	(fputc@c+1)^0,c
  1978   001478  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1979   00147C  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1980   001480  EC08  F00C         	call	_fputc	;wreg free
  1981   001484                     
  1982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1541:     ++*fmt;
  1983   001484  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1984   001488  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1985   00148C  2ADE               	incf	postinc2,f,c
  1986   00148E  0E00               	movlw	0
  1987   001490  22DD               	addwfc	postdec2,f,c
  1988   001492                     
  1989                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1542:     return 
      +                          (int) 1;
  1990   001492  0E00               	movlw	0
  1991   001494  6E2A               	movwf	(?_vfpfcnvrt+1)^0,c
  1992   001496  0E01               	movlw	1
  1993   001498  6E29               	movwf	?_vfpfcnvrt^0,c
  1994   00149A                     l1225:
  1995   00149A  0012               	return		;funcret
  1996   00149C                     __end_of_vfpfcnvrt:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _dtoa *****************
  2000 ;; Defined at:
  2001 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2004 ;;		 -> sprintf@f(12), 
  2005 ;;  d               2   29[COMRAM] int 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  i               2   37[COMRAM] int 
  2008 ;;  w               2   35[COMRAM] int 
  2009 ;;  p               2   33[COMRAM] int 
  2010 ;;  s               1   39[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2   27[COMRAM] int 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:       13 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 4
  2027 ;; This function calls:
  2028 ;;		___awdiv
  2029 ;;		___awmod
  2030 ;;		_abs
  2031 ;;		_pad
  2032 ;; This function is called by:
  2033 ;;		_vfpfcnvrt
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text10
  2038   00103A                     __ptext10:
  2039                           	callstack 0
  2040   00103A                     _dtoa:
  2041                           	callstack 22
  2042   00103A                     
  2043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473:
      +                               int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          476:     s = d < 0 ? 1 : 0;
  2044   00103A  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  2045   00103C  EF22  F008         	goto	u1661
  2046   001040  EF25  F008         	goto	u1660
  2047   001044                     u1661:
  2048   001044  0E01               	movlw	1
  2049   001046  EF26  F008         	goto	u1670
  2050   00104A                     u1660:
  2051   00104A  0E00               	movlw	0
  2052   00104C                     u1670:
  2053   00104C  6E28               	movwf	dtoa@s^0,c
  2054   00104E                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2056   00104E  5028               	movf	dtoa@s^0,w,c
  2057   001050  B4D8               	btfsc	status,2,c
  2058   001052  EF2D  F008         	goto	u1681
  2059   001056  EF2F  F008         	goto	u1680
  2060   00105A                     u1681:
  2061   00105A  EF33  F008         	goto	l2631
  2062   00105E                     u1680:
  2063   00105E                     
  2064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2065   00105E  6C1E               	negf	dtoa@d^0,c
  2066   001060  1E1F               	comf	(dtoa@d+1)^0,f,c
  2067   001062  B0D8               	btfsc	status,0,c
  2068   001064  2A1F               	incf	(dtoa@d+1)^0,f,c
  2069   001066                     l2631:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2072   001066  BE73               	btfsc	(_prec+1)^0,7,c
  2073   001068  EF3A  F008         	goto	u1690
  2074   00106C  EF38  F008         	goto	u1691
  2075   001070                     u1691:
  2076   001070  EF40  F008         	goto	l1204
  2077   001074                     u1690:
  2078   001074  0E00               	movlw	0
  2079   001076  6E23               	movwf	(dtoa@p+1)^0,c
  2080   001078  0E01               	movlw	1
  2081   00107A  6E22               	movwf	dtoa@p^0,c
  2082   00107C  EF44  F008         	goto	l1206
  2083   001080                     l1204:
  2084   001080  C072  F022         	movff	_prec,dtoa@p
  2085   001084  C073  F023         	movff	_prec+1,dtoa@p+1
  2086   001088                     l1206:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2089   001088  C070  F024         	movff	_width,dtoa@w
  2090   00108C  C071  F025         	movff	_width+1,dtoa@w+1
  2091   001090                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2093   001090  5028               	movf	dtoa@s^0,w,c
  2094   001092  B4D8               	btfsc	status,2,c
  2095   001094  EF4E  F008         	goto	u1701
  2096   001098  EF50  F008         	goto	u1700
  2097   00109C                     u1701:
  2098   00109C  EF67  F008         	goto	l1207
  2099   0010A0                     u1700:
  2100   0010A0                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2102   0010A0  0624               	decf	dtoa@w^0,f,c
  2103   0010A2  A0D8               	btfss	status,0,c
  2104   0010A4  0625               	decf	(dtoa@w+1)^0,f,c
  2105   0010A6                     
  2106                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2107   0010A6  5028               	movf	dtoa@s^0,w,c
  2108   0010A8  A4D8               	btfss	status,2,c
  2109   0010AA  EF59  F008         	goto	u1711
  2110   0010AE  EF5B  F008         	goto	u1710
  2111   0010B2                     u1711:
  2112   0010B2  EF61  F008         	goto	l2643
  2113   0010B6                     u1710:
  2114   0010B6  0E00               	movlw	0
  2115   0010B8  6E21               	movwf	(_dtoa$1359+1)^0,c
  2116   0010BA  0E2B               	movlw	43
  2117   0010BC  6E20               	movwf	_dtoa$1359^0,c
  2118   0010BE  EF65  F008         	goto	l2645
  2119   0010C2                     l2643:
  2120   0010C2  0E00               	movlw	0
  2121   0010C4  6E21               	movwf	(_dtoa$1359+1)^0,c
  2122   0010C6  0E2D               	movlw	45
  2123   0010C8  6E20               	movwf	_dtoa$1359^0,c
  2124   0010CA                     l2645:
  2125   0010CA  C020  F028         	movff	_dtoa$1359,dtoa@s
  2126   0010CE                     l1207:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2129   0010CE  0E00               	movlw	0
  2130   0010D0  6E27               	movwf	(dtoa@i+1)^0,c
  2131   0010D2  0E1F               	movlw	31
  2132   0010D4  6E26               	movwf	dtoa@i^0,c
  2133   0010D6                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2135   0010D6  0E00               	movlw	0
  2136   0010D8  0100               	movlb	0	; () banked
  2137   0010DA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2140   0010DC  EFA0  F008         	goto	l2659
  2141   0010E0                     l2649:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2144   0010E0  0626               	decf	dtoa@i^0,f,c
  2145   0010E2  A0D8               	btfss	status,0,c
  2146   0010E4  0627               	decf	(dtoa@i+1)^0,f,c
  2147   0010E6                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2149   0010E6  0E80               	movlw	low _dbuf
  2150   0010E8  2426               	addwf	dtoa@i^0,w,c
  2151   0010EA  6ED9               	movwf	fsr2l,c
  2152   0010EC  0E00               	movlw	high _dbuf
  2153   0010EE  2027               	addwfc	(dtoa@i+1)^0,w,c
  2154   0010F0  6EDA               	movwf	fsr2h,c
  2155   0010F2  C01E  F001         	movff	dtoa@d,___awmod@dividend
  2156   0010F6  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2157   0010FA  0E00               	movlw	0
  2158   0010FC  6E04               	movwf	(___awmod@divisor+1)^0,c
  2159   0010FE  0E0A               	movlw	10
  2160   001100  6E03               	movwf	___awmod@divisor^0,c
  2161   001102  EC8B  F00D         	call	___awmod	;wreg free
  2162   001106  C001  F007         	movff	?___awmod,abs@a
  2163   00110A  C002  F008         	movff	?___awmod+1,abs@a+1
  2164   00110E  ECA7  F010         	call	_abs	;wreg free
  2165   001112  5007               	movf	?_abs^0,w,c
  2166   001114  0F30               	addlw	48
  2167   001116  6EDF               	movwf	indf2,c
  2168   001118                     
  2169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2170   001118  0622               	decf	dtoa@p^0,f,c
  2171   00111A  A0D8               	btfss	status,0,c
  2172   00111C  0623               	decf	(dtoa@p+1)^0,f,c
  2173   00111E                     
  2174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2175   00111E  0624               	decf	dtoa@w^0,f,c
  2176   001120  A0D8               	btfss	status,0,c
  2177   001122  0625               	decf	(dtoa@w+1)^0,f,c
  2178   001124                     
  2179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2180   001124  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  2181   001128  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2182   00112C  0E00               	movlw	0
  2183   00112E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2184   001130  0E0A               	movlw	10
  2185   001132  6E03               	movwf	___awdiv@divisor^0,c
  2186   001134  EC6D  F00C         	call	___awdiv	;wreg free
  2187   001138  C001  F01E         	movff	?___awdiv,dtoa@d
  2188   00113C  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  2189   001140                     l2659:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2192   001140  BE27               	btfsc	(dtoa@i+1)^0,7,c
  2193   001142  EFAB  F008         	goto	u1721
  2194   001146  5027               	movf	(dtoa@i+1)^0,w,c
  2195   001148  E108               	bnz	u1720
  2196   00114A  0426               	decf	dtoa@i^0,w,c
  2197   00114C  A0D8               	btfss	status,0,c
  2198   00114E  EFAB  F008         	goto	u1721
  2199   001152  EFAD  F008         	goto	u1720
  2200   001156                     u1721:
  2201   001156  EFC3  F008         	goto	l2665
  2202   00115A                     u1720:
  2203   00115A  501E               	movf	dtoa@d^0,w,c
  2204   00115C  101F               	iorwf	(dtoa@d+1)^0,w,c
  2205   00115E  A4D8               	btfss	status,2,c
  2206   001160  EFB4  F008         	goto	u1731
  2207   001164  EFB6  F008         	goto	u1730
  2208   001168                     u1731:
  2209   001168  EF70  F008         	goto	l2649
  2210   00116C                     u1730:
  2211   00116C  BE23               	btfsc	(dtoa@p+1)^0,7,c
  2212   00116E  EFC3  F008         	goto	u1740
  2213   001172  5023               	movf	(dtoa@p+1)^0,w,c
  2214   001174  E106               	bnz	u1741
  2215   001176  0422               	decf	dtoa@p^0,w,c
  2216   001178  B0D8               	btfsc	status,0,c
  2217   00117A  EFC1  F008         	goto	u1741
  2218   00117E  EFC3  F008         	goto	u1740
  2219   001182                     u1741:
  2220   001182  EF70  F008         	goto	l2649
  2221   001186                     u1740:
  2222   001186                     l2665:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2225   001186  5028               	movf	dtoa@s^0,w,c
  2226   001188  B4D8               	btfsc	status,2,c
  2227   00118A  EFC9  F008         	goto	u1751
  2228   00118E  EFCB  F008         	goto	u1750
  2229   001192                     u1751:
  2230   001192  EFD6  F008         	goto	l2671
  2231   001196                     u1750:
  2232   001196                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2234   001196  0626               	decf	dtoa@i^0,f,c
  2235   001198  A0D8               	btfss	status,0,c
  2236   00119A  0627               	decf	(dtoa@i+1)^0,f,c
  2237   00119C                     
  2238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2239   00119C  0E80               	movlw	low _dbuf
  2240   00119E  2426               	addwf	dtoa@i^0,w,c
  2241   0011A0  6ED9               	movwf	fsr2l,c
  2242   0011A2  0E00               	movlw	high _dbuf
  2243   0011A4  2027               	addwfc	(dtoa@i+1)^0,w,c
  2244   0011A6  6EDA               	movwf	fsr2h,c
  2245   0011A8  C028  FFDF         	movff	dtoa@s,indf2
  2246   0011AC                     l2671:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          int) pad(fp, &dbuf[i], w);
  2249   0011AC  C01C  F011         	movff	dtoa@fp,pad@fp
  2250   0011B0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2251   0011B4  0E80               	movlw	low _dbuf
  2252   0011B6  2426               	addwf	dtoa@i^0,w,c
  2253   0011B8  6E13               	movwf	pad@buf^0,c
  2254   0011BA  0E00               	movlw	high _dbuf
  2255   0011BC  2027               	addwfc	(dtoa@i+1)^0,w,c
  2256   0011BE  6E14               	movwf	(pad@buf+1)^0,c
  2257   0011C0  C024  F015         	movff	dtoa@w,pad@p
  2258   0011C4  C025  F016         	movff	dtoa@w+1,pad@p+1
  2259   0011C8  ECE3  F00D         	call	_pad	;wreg free
  2260   0011CC  C011  F01C         	movff	?_pad,?_dtoa
  2261   0011D0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2262   0011D4  0012               	return		;funcret
  2263   0011D6                     __end_of_dtoa:
  2264                           	callstack 0
  2265                           
  2266 ;; *************** function _pad *****************
  2267 ;; Defined at:
  2268 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2271 ;;		 -> sprintf@f(12), 
  2272 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2273 ;;		 -> dbuf(32), 
  2274 ;;  p               2   20[COMRAM] int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  w               2   25[COMRAM] int 
  2277 ;;  i               2   23[COMRAM] int 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2   16[COMRAM] int 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2287 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;Total ram usage:       11 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 3
  2294 ;; This function calls:
  2295 ;;		_fputc
  2296 ;;		_fputs
  2297 ;;		_strlen
  2298 ;; This function is called by:
  2299 ;;		_dtoa
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text11
  2304   001BC6                     __ptext11:
  2305                           	callstack 0
  2306   001BC6                     _pad:
  2307                           	callstack 22
  2308   001BC6                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c
      +                          : 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 164:     w = (p < 0) ? 0 : p;
  2310   001BC6  BE16               	btfsc	(pad@p+1)^0,7,c
  2311   001BC8  EFE8  F00D         	goto	u1621
  2312   001BCC  EFEA  F00D         	goto	u1620
  2313   001BD0                     u1621:
  2314   001BD0  EFF0  F00D         	goto	l2591
  2315   001BD4                     u1620:
  2316   001BD4  C015  F01A         	movff	pad@p,pad@w
  2317   001BD8  C016  F01B         	movff	pad@p+1,pad@w+1
  2318   001BDC  EFF4  F00D         	goto	l1195
  2319   001BE0                     l2591:
  2320   001BE0  0E00               	movlw	0
  2321   001BE2  6E1B               	movwf	(pad@w+1)^0,c
  2322   001BE4  0E00               	movlw	0
  2323   001BE6  6E1A               	movwf	pad@w^0,c
  2324   001BE8                     l1195:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2327   001BE8  0E00               	movlw	0
  2328   001BEA  6E19               	movwf	(pad@i+1)^0,c
  2329   001BEC  0E00               	movlw	0
  2330   001BEE  6E18               	movwf	pad@i^0,c
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2333   001BF0  EF06  F00E         	goto	l2597
  2334   001BF4                     l2593:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2337   001BF4  0E00               	movlw	0
  2338   001BF6  6E02               	movwf	(fputc@c+1)^0,c
  2339   001BF8  0E20               	movlw	32
  2340   001BFA  6E01               	movwf	fputc@c^0,c
  2341   001BFC  C011  F003         	movff	pad@fp,fputc@fp
  2342   001C00  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2343   001C04  EC08  F00C         	call	_fputc	;wreg free
  2344   001C08                     
  2345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2346   001C08  4A18               	infsnz	pad@i^0,f,c
  2347   001C0A  2A19               	incf	(pad@i+1)^0,f,c
  2348   001C0C                     l2597:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2351   001C0C  501A               	movf	pad@w^0,w,c
  2352   001C0E  5C18               	subwf	pad@i^0,w,c
  2353   001C10  5019               	movf	(pad@i+1)^0,w,c
  2354   001C12  0A80               	xorlw	128
  2355   001C14  6E17               	movwf	??_pad^0,c
  2356   001C16  501B               	movf	(pad@w+1)^0,w,c
  2357   001C18  0A80               	xorlw	128
  2358   001C1A  5817               	subwfb	??_pad^0,w,c
  2359   001C1C  A0D8               	btfss	status,0,c
  2360   001C1E  EF13  F00E         	goto	u1631
  2361   001C22  EF15  F00E         	goto	u1630
  2362   001C26                     u1631:
  2363   001C26  EFFA  F00D         	goto	l2593
  2364   001C2A                     u1630:
  2365   001C2A                     
  2366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2367   001C2A  C013  F00A         	movff	pad@buf,fputs@s
  2368   001C2E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2369   001C32  C011  F00C         	movff	pad@fp,fputs@fp
  2370   001C36  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2371   001C3A  EC85  F010         	call	_fputs	;wreg free
  2372   001C3E                     
  2373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 181:     return (
      +                          int)(strlen(buf) + (size_t)w);
  2374   001C3E  C013  F001         	movff	pad@buf,strlen@s
  2375   001C42  C014  F002         	movff	pad@buf+1,strlen@s+1
  2376   001C46  ECC7  F010         	call	_strlen	;wreg free
  2377   001C4A  501A               	movf	pad@w^0,w,c
  2378   001C4C  2401               	addwf	?_strlen^0,w,c
  2379   001C4E  6E11               	movwf	?_pad^0,c
  2380   001C50  501B               	movf	(pad@w+1)^0,w,c
  2381   001C52  2002               	addwfc	(?_strlen+1)^0,w,c
  2382   001C54  6E12               	movwf	(?_pad+1)^0,c
  2383   001C56  0012               	return		;funcret
  2384   001C58                     __end_of_pad:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _strlen *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2392 ;;		 -> dbuf(32), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2395 ;;		 -> dbuf(32), 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    0[COMRAM] unsigned int 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        4 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_pad
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text12
  2419   00218E                     __ptext12:
  2420                           	callstack 0
  2421   00218E                     _strlen:
  2422                           	callstack 24
  2423   00218E  C001  F003         	movff	strlen@s,strlen@a
  2424   002192  C002  F004         	movff	strlen@s+1,strlen@a+1
  2425   002196  EFCF  F010         	goto	l2477
  2426   00219A                     l2475:
  2427   00219A  4A01               	infsnz	strlen@s^0,f,c
  2428   00219C  2A02               	incf	(strlen@s+1)^0,f,c
  2429   00219E                     l2477:
  2430   00219E  C001  FFD9         	movff	strlen@s,fsr2l
  2431   0021A2  C002  FFDA         	movff	strlen@s+1,fsr2h
  2432   0021A6  50DF               	movf	indf2,w,c
  2433   0021A8  A4D8               	btfss	status,2,c
  2434   0021AA  EFD9  F010         	goto	u1451
  2435   0021AE  EFDB  F010         	goto	u1450
  2436   0021B2                     u1451:
  2437   0021B2  EFCD  F010         	goto	l2475
  2438   0021B6                     u1450:
  2439   0021B6  5003               	movf	strlen@a^0,w,c
  2440   0021B8  5C01               	subwf	strlen@s^0,w,c
  2441   0021BA  6E01               	movwf	?_strlen^0,c
  2442   0021BC  5004               	movf	(strlen@a+1)^0,w,c
  2443   0021BE  5802               	subwfb	(strlen@s+1)^0,w,c
  2444   0021C0  6E02               	movwf	(?_strlen+1)^0,c
  2445   0021C2  0012               	return		;funcret
  2446   0021C4                     __end_of_strlen:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _fputs *****************
  2450 ;; Defined at:
  2451 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2454 ;;		 -> dbuf(32), 
  2455 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2456 ;;		 -> sprintf@f(12), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  i               2   14[COMRAM] int 
  2459 ;;  c               1   13[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    9[COMRAM] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:        7 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 2
  2476 ;; This function calls:
  2477 ;;		_fputc
  2478 ;; This function is called by:
  2479 ;;		_pad
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text13
  2484   00210A                     __ptext13:
  2485                           	callstack 0
  2486   00210A                     _fputs:
  2487                           	callstack 22
  2488   00210A  0E00               	movlw	0
  2489   00210C  6E10               	movwf	(fputs@i+1)^0,c
  2490   00210E  0E00               	movlw	0
  2491   002110  6E0F               	movwf	fputs@i^0,c
  2492   002112  EF96  F010         	goto	l2471
  2493   002116                     l2467:
  2494   002116  C00E  F001         	movff	fputs@c,fputc@c
  2495   00211A  6A02               	clrf	(fputc@c+1)^0,c
  2496   00211C  C00C  F003         	movff	fputs@fp,fputc@fp
  2497   002120  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2498   002124  EC08  F00C         	call	_fputc	;wreg free
  2499   002128  4A0F               	infsnz	fputs@i^0,f,c
  2500   00212A  2A10               	incf	(fputs@i+1)^0,f,c
  2501   00212C                     l2471:
  2502   00212C  500F               	movf	fputs@i^0,w,c
  2503   00212E  240A               	addwf	fputs@s^0,w,c
  2504   002130  6ED9               	movwf	fsr2l,c
  2505   002132  5010               	movf	(fputs@i+1)^0,w,c
  2506   002134  200B               	addwfc	(fputs@s+1)^0,w,c
  2507   002136  6EDA               	movwf	fsr2h,c
  2508   002138  50DF               	movf	indf2,w,c
  2509   00213A  6E0E               	movwf	fputs@c^0,c
  2510   00213C  500E               	movf	fputs@c^0,w,c
  2511   00213E  A4D8               	btfss	status,2,c
  2512   002140  EFA4  F010         	goto	u1441
  2513   002144  EFA6  F010         	goto	u1440
  2514   002148                     u1441:
  2515   002148  EF8B  F010         	goto	l2467
  2516   00214C                     u1440:
  2517   00214C  0012               	return		;funcret
  2518   00214E                     __end_of_fputs:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _fputc *****************
  2522 ;; Defined at:
  2523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  c               2    0[COMRAM] int 
  2526 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2527 ;;		 -> sprintf@f(12), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  2    0[COMRAM] int 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;Total ram usage:        9 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 1
  2546 ;; This function calls:
  2547 ;;		_putch
  2548 ;; This function is called by:
  2549 ;;		_pad
  2550 ;;		_vfpfcnvrt
  2551 ;;		_fputs
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text14
  2556   001810                     __ptext14:
  2557                           	callstack 0
  2558   001810                     _fputc:
  2559                           	callstack 25
  2560   001810  5003               	movf	fputc@fp^0,w,c
  2561   001812  1004               	iorwf	(fputc@fp+1)^0,w,c
  2562   001814  B4D8               	btfsc	status,2,c
  2563   001816  EF0F  F00C         	goto	u1401
  2564   00181A  EF11  F00C         	goto	u1400
  2565   00181E                     u1401:
  2566   00181E  EF1A  F00C         	goto	l2455
  2567   001822                     u1400:
  2568   001822  5003               	movf	fputc@fp^0,w,c
  2569   001824  1004               	iorwf	(fputc@fp+1)^0,w,c
  2570   001826  A4D8               	btfss	status,2,c
  2571   001828  EF18  F00C         	goto	u1411
  2572   00182C  EF1A  F00C         	goto	u1410
  2573   001830                     u1411:
  2574   001830  EF1F  F00C         	goto	l2457
  2575   001834                     u1410:
  2576   001834                     l2455:
  2577   001834  5001               	movf	fputc@c^0,w,c
  2578   001836  EC03  F011         	call	_putch
  2579   00183A  EF6C  F00C         	goto	l1250
  2580   00183E                     l2457:
  2581   00183E  EE20 F00A          	lfsr	2,10
  2582   001842  5003               	movf	fputc@fp^0,w,c
  2583   001844  26D9               	addwf	fsr2l,f,c
  2584   001846  5004               	movf	(fputc@fp+1)^0,w,c
  2585   001848  22DA               	addwfc	fsr2h,f,c
  2586   00184A  50DE               	movf	postinc2,w,c
  2587   00184C  10DE               	iorwf	postinc2,w,c
  2588   00184E  B4D8               	btfsc	status,2,c
  2589   001850  EF2C  F00C         	goto	u1421
  2590   001854  EF2E  F00C         	goto	u1420
  2591   001858                     u1421:
  2592   001858  EF49  F00C         	goto	l2461
  2593   00185C                     u1420:
  2594   00185C  EE20 F00A          	lfsr	2,10
  2595   001860  5003               	movf	fputc@fp^0,w,c
  2596   001862  26D9               	addwf	fsr2l,f,c
  2597   001864  5004               	movf	(fputc@fp+1)^0,w,c
  2598   001866  22DA               	addwfc	fsr2h,f,c
  2599   001868  EE10 F003          	lfsr	1,3
  2600   00186C  5003               	movf	fputc@fp^0,w,c
  2601   00186E  26E1               	addwf	fsr1l,f,c
  2602   001870  5004               	movf	(fputc@fp+1)^0,w,c
  2603   001872  22E2               	addwfc	fsr1h,f,c
  2604   001874  50DE               	movf	postinc2,w,c
  2605   001876  5CE6               	subwf	postinc1,w,c
  2606   001878  50E6               	movf	postinc1,w,c
  2607   00187A  0A80               	xorlw	128
  2608   00187C  6E09               	movwf	(??_fputc+4)^0,c
  2609   00187E  50DE               	movf	postinc2,w,c
  2610   001880  0A80               	xorlw	128
  2611   001882  5809               	subwfb	(??_fputc+4)^0,w,c
  2612   001884  B0D8               	btfsc	status,0,c
  2613   001886  EF47  F00C         	goto	u1431
  2614   00188A  EF49  F00C         	goto	u1430
  2615   00188E                     u1431:
  2616   00188E  EF6C  F00C         	goto	l1250
  2617   001892                     u1430:
  2618   001892                     l2461:
  2619   001892  EE20 F003          	lfsr	2,3
  2620   001896  5003               	movf	fputc@fp^0,w,c
  2621   001898  26D9               	addwf	fsr2l,f,c
  2622   00189A  5004               	movf	(fputc@fp+1)^0,w,c
  2623   00189C  22DA               	addwfc	fsr2h,f,c
  2624   00189E  CFDE F005          	movff	postinc2,??_fputc
  2625   0018A2  CFDD F006          	movff	postdec2,??_fputc+1
  2626   0018A6  C003  FFD9         	movff	fputc@fp,fsr2l
  2627   0018AA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2628   0018AE  CFDE F007          	movff	postinc2,??_fputc+2
  2629   0018B2  CFDD F008          	movff	postdec2,??_fputc+3
  2630   0018B6  5005               	movf	??_fputc^0,w,c
  2631   0018B8  2407               	addwf	(??_fputc+2)^0,w,c
  2632   0018BA  6ED9               	movwf	fsr2l,c
  2633   0018BC  5006               	movf	(??_fputc+1)^0,w,c
  2634   0018BE  2008               	addwfc	(??_fputc+3)^0,w,c
  2635   0018C0  6EDA               	movwf	fsr2h,c
  2636   0018C2  C001  FFDF         	movff	fputc@c,indf2
  2637   0018C6  EE20 F003          	lfsr	2,3
  2638   0018CA  5003               	movf	fputc@fp^0,w,c
  2639   0018CC  26D9               	addwf	fsr2l,f,c
  2640   0018CE  5004               	movf	(fputc@fp+1)^0,w,c
  2641   0018D0  22DA               	addwfc	fsr2h,f,c
  2642   0018D2  2ADE               	incf	postinc2,f,c
  2643   0018D4  0E00               	movlw	0
  2644   0018D6  22DD               	addwfc	postdec2,f,c
  2645   0018D8                     l1250:
  2646   0018D8  0012               	return		;funcret
  2647   0018DA                     __end_of_fputc:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function _putch *****************
  2651 ;; Defined at:
  2652 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  c               1    wreg     unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  c               1    0[COMRAM] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_fputc
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text15
  2680   002206                     __ptext15:
  2681                           	callstack 0
  2682   002206                     _putch:
  2683                           	callstack 25
  2684   002206  0012               	return		;funcret
  2685   002208                     __end_of_putch:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _abs *****************
  2689 ;; Defined at:
  2690 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  a               2    6[COMRAM] int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    6[COMRAM] int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        4 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_dtoa
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text16
  2718   00214E                     __ptext16:
  2719                           	callstack 0
  2720   00214E                     _abs:
  2721                           	callstack 25
  2722   00214E  BE08               	btfsc	(abs@a+1)^0,7,c
  2723   002150  EFB4  F010         	goto	u1640
  2724   002154  5008               	movf	(abs@a+1)^0,w,c
  2725   002156  E106               	bnz	u1641
  2726   002158  0407               	decf	abs@a^0,w,c
  2727   00215A  B0D8               	btfsc	status,0,c
  2728   00215C  EFB2  F010         	goto	u1641
  2729   002160  EFB4  F010         	goto	u1640
  2730   002164                     u1641:
  2731   002164  EFC2  F010         	goto	l1235
  2732   002168                     u1640:
  2733   002168  C007  F009         	movff	abs@a,??_abs
  2734   00216C  C008  F00A         	movff	abs@a+1,??_abs+1
  2735   002170  1E09               	comf	??_abs^0,f,c
  2736   002172  1E0A               	comf	(??_abs+1)^0,f,c
  2737   002174  4A09               	infsnz	??_abs^0,f,c
  2738   002176  2A0A               	incf	(??_abs+1)^0,f,c
  2739   002178  C009  F007         	movff	??_abs,?_abs
  2740   00217C  C00A  F008         	movff	??_abs+1,?_abs+1
  2741   002180  EFC6  F010         	goto	l1238
  2742   002184                     l1235:
  2743   002184  C007  F007         	movff	abs@a,?_abs
  2744   002188  C008  F008         	movff	abs@a+1,?_abs+1
  2745   00218C                     l1238:
  2746   00218C  0012               	return		;funcret
  2747   00218E                     __end_of_abs:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function ___awmod *****************
  2751 ;; Defined at:
  2752 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  dividend        2    0[COMRAM] int 
  2755 ;;  divisor         2    2[COMRAM] int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  sign            1    5[COMRAM] unsigned char 
  2758 ;;  counter         1    4[COMRAM] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2    0[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_dtoa
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text17
  2782   001B16                     __ptext17:
  2783                           	callstack 0
  2784   001B16                     ___awmod:
  2785                           	callstack 25
  2786   001B16  0E00               	movlw	0
  2787   001B18  6E06               	movwf	___awmod@sign^0,c
  2788   001B1A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2789   001B1C  EF94  F00D         	goto	u1560
  2790   001B20  EF92  F00D         	goto	u1561
  2791   001B24                     u1561:
  2792   001B24  EF9A  F00D         	goto	l2559
  2793   001B28                     u1560:
  2794   001B28  6C01               	negf	___awmod@dividend^0,c
  2795   001B2A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2796   001B2C  B0D8               	btfsc	status,0,c
  2797   001B2E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2798   001B30  0E01               	movlw	1
  2799   001B32  6E06               	movwf	___awmod@sign^0,c
  2800   001B34                     l2559:
  2801   001B34  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2802   001B36  EFA1  F00D         	goto	u1570
  2803   001B3A  EF9F  F00D         	goto	u1571
  2804   001B3E                     u1571:
  2805   001B3E  EFA5  F00D         	goto	l2563
  2806   001B42                     u1570:
  2807   001B42  6C03               	negf	___awmod@divisor^0,c
  2808   001B44  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2809   001B46  B0D8               	btfsc	status,0,c
  2810   001B48  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2811   001B4A                     l2563:
  2812   001B4A  5003               	movf	___awmod@divisor^0,w,c
  2813   001B4C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2814   001B4E  B4D8               	btfsc	status,2,c
  2815   001B50  EFAC  F00D         	goto	u1581
  2816   001B54  EFAE  F00D         	goto	u1580
  2817   001B58                     u1581:
  2818   001B58  EFD2  F00D         	goto	l2579
  2819   001B5C                     u1580:
  2820   001B5C  0E01               	movlw	1
  2821   001B5E  6E05               	movwf	___awmod@counter^0,c
  2822   001B60  EFB6  F00D         	goto	l2569
  2823   001B64                     l2567:
  2824   001B64  90D8               	bcf	status,0,c
  2825   001B66  3603               	rlcf	___awmod@divisor^0,f,c
  2826   001B68  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2827   001B6A  2A05               	incf	___awmod@counter^0,f,c
  2828   001B6C                     l2569:
  2829   001B6C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2830   001B6E  EFBB  F00D         	goto	u1591
  2831   001B72  EFBD  F00D         	goto	u1590
  2832   001B76                     u1591:
  2833   001B76  EFB2  F00D         	goto	l2567
  2834   001B7A                     u1590:
  2835   001B7A                     l2571:
  2836   001B7A  5003               	movf	___awmod@divisor^0,w,c
  2837   001B7C  5C01               	subwf	___awmod@dividend^0,w,c
  2838   001B7E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2839   001B80  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2840   001B82  A0D8               	btfss	status,0,c
  2841   001B84  EFC6  F00D         	goto	u1601
  2842   001B88  EFC8  F00D         	goto	u1600
  2843   001B8C                     u1601:
  2844   001B8C  EFCC  F00D         	goto	l2575
  2845   001B90                     u1600:
  2846   001B90  5003               	movf	___awmod@divisor^0,w,c
  2847   001B92  5E01               	subwf	___awmod@dividend^0,f,c
  2848   001B94  5004               	movf	(___awmod@divisor+1)^0,w,c
  2849   001B96  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2850   001B98                     l2575:
  2851   001B98  90D8               	bcf	status,0,c
  2852   001B9A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2853   001B9C  3203               	rrcf	___awmod@divisor^0,f,c
  2854   001B9E  2E05               	decfsz	___awmod@counter^0,f,c
  2855   001BA0  EFBD  F00D         	goto	l2571
  2856   001BA4                     l2579:
  2857   001BA4  5006               	movf	___awmod@sign^0,w,c
  2858   001BA6  B4D8               	btfsc	status,2,c
  2859   001BA8  EFD8  F00D         	goto	u1611
  2860   001BAC  EFDA  F00D         	goto	u1610
  2861   001BB0                     u1611:
  2862   001BB0  EFDE  F00D         	goto	l2583
  2863   001BB4                     u1610:
  2864   001BB4  6C01               	negf	___awmod@dividend^0,c
  2865   001BB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2866   001BB8  B0D8               	btfsc	status,0,c
  2867   001BBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2868   001BBC                     l2583:
  2869   001BBC  C001  F001         	movff	___awmod@dividend,?___awmod
  2870   001BC0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2871   001BC4  0012               	return		;funcret
  2872   001BC6                     __end_of___awmod:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function ___awdiv *****************
  2876 ;; Defined at:
  2877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  dividend        2    0[COMRAM] int 
  2880 ;;  divisor         2    2[COMRAM] int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  quotient        2    6[COMRAM] int 
  2883 ;;  sign            1    5[COMRAM] unsigned char 
  2884 ;;  counter         1    4[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2    0[COMRAM] int 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        8 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_dtoa
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text18
  2908   0018DA                     __ptext18:
  2909                           	callstack 0
  2910   0018DA                     ___awdiv:
  2911                           	callstack 25
  2912   0018DA  0E00               	movlw	0
  2913   0018DC  6E06               	movwf	___awdiv@sign^0,c
  2914   0018DE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2915   0018E0  EF76  F00C         	goto	u1500
  2916   0018E4  EF74  F00C         	goto	u1501
  2917   0018E8                     u1501:
  2918   0018E8  EF7C  F00C         	goto	l2515
  2919   0018EC                     u1500:
  2920   0018EC  6C03               	negf	___awdiv@divisor^0,c
  2921   0018EE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2922   0018F0  B0D8               	btfsc	status,0,c
  2923   0018F2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2924   0018F4  0E01               	movlw	1
  2925   0018F6  6E06               	movwf	___awdiv@sign^0,c
  2926   0018F8                     l2515:
  2927   0018F8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2928   0018FA  EF83  F00C         	goto	u1510
  2929   0018FE  EF81  F00C         	goto	u1511
  2930   001902                     u1511:
  2931   001902  EF89  F00C         	goto	l2521
  2932   001906                     u1510:
  2933   001906  6C01               	negf	___awdiv@dividend^0,c
  2934   001908  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2935   00190A  B0D8               	btfsc	status,0,c
  2936   00190C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2937   00190E  0E01               	movlw	1
  2938   001910  1A06               	xorwf	___awdiv@sign^0,f,c
  2939   001912                     l2521:
  2940   001912  0E00               	movlw	0
  2941   001914  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2942   001916  0E00               	movlw	0
  2943   001918  6E07               	movwf	___awdiv@quotient^0,c
  2944   00191A  5003               	movf	___awdiv@divisor^0,w,c
  2945   00191C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2946   00191E  B4D8               	btfsc	status,2,c
  2947   001920  EF94  F00C         	goto	u1521
  2948   001924  EF96  F00C         	goto	u1520
  2949   001928                     u1521:
  2950   001928  EFBE  F00C         	goto	l2543
  2951   00192C                     u1520:
  2952   00192C  0E01               	movlw	1
  2953   00192E  6E05               	movwf	___awdiv@counter^0,c
  2954   001930  EF9E  F00C         	goto	l2529
  2955   001934                     l2527:
  2956   001934  90D8               	bcf	status,0,c
  2957   001936  3603               	rlcf	___awdiv@divisor^0,f,c
  2958   001938  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2959   00193A  2A05               	incf	___awdiv@counter^0,f,c
  2960   00193C                     l2529:
  2961   00193C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2962   00193E  EFA3  F00C         	goto	u1531
  2963   001942  EFA5  F00C         	goto	u1530
  2964   001946                     u1531:
  2965   001946  EF9A  F00C         	goto	l2527
  2966   00194A                     u1530:
  2967   00194A                     l2531:
  2968   00194A  90D8               	bcf	status,0,c
  2969   00194C  3607               	rlcf	___awdiv@quotient^0,f,c
  2970   00194E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2971   001950  5003               	movf	___awdiv@divisor^0,w,c
  2972   001952  5C01               	subwf	___awdiv@dividend^0,w,c
  2973   001954  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2974   001956  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2975   001958  A0D8               	btfss	status,0,c
  2976   00195A  EFB1  F00C         	goto	u1541
  2977   00195E  EFB3  F00C         	goto	u1540
  2978   001962                     u1541:
  2979   001962  EFB8  F00C         	goto	l2539
  2980   001966                     u1540:
  2981   001966  5003               	movf	___awdiv@divisor^0,w,c
  2982   001968  5E01               	subwf	___awdiv@dividend^0,f,c
  2983   00196A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2984   00196C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2985   00196E  8007               	bsf	___awdiv@quotient^0,0,c
  2986   001970                     l2539:
  2987   001970  90D8               	bcf	status,0,c
  2988   001972  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2989   001974  3203               	rrcf	___awdiv@divisor^0,f,c
  2990   001976  2E05               	decfsz	___awdiv@counter^0,f,c
  2991   001978  EFA5  F00C         	goto	l2531
  2992   00197C                     l2543:
  2993   00197C  5006               	movf	___awdiv@sign^0,w,c
  2994   00197E  B4D8               	btfsc	status,2,c
  2995   001980  EFC4  F00C         	goto	u1551
  2996   001984  EFC6  F00C         	goto	u1550
  2997   001988                     u1551:
  2998   001988  EFCA  F00C         	goto	l2547
  2999   00198C                     u1550:
  3000   00198C  6C07               	negf	___awdiv@quotient^0,c
  3001   00198E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3002   001990  B0D8               	btfsc	status,0,c
  3003   001992  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3004   001994                     l2547:
  3005   001994  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3006   001998  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3007   00199C  0012               	return		;funcret
  3008   00199E                     __end_of___awdiv:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _memset *****************
  3012 ;; Defined at:
  3013 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  dest            2    0[COMRAM] PTR void 
  3016 ;;		 -> number_txt(3), 
  3017 ;;  c               2    2[COMRAM] int 
  3018 ;;  n               2    4[COMRAM] unsigned int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  s               2   10[COMRAM] PTR unsigned char 
  3021 ;;		 -> number_txt(3), 
  3022 ;;  k               2    8[COMRAM] unsigned int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    0[COMRAM] PTR void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;Total ram usage:       12 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_convert_uint8_to_string
  3042 ;;		_convert_uint16_to_string
  3043 ;;		_convert_uint32_to_string
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text19
  3048   0011D6                     __ptext19:
  3049                           	callstack 0
  3050   0011D6                     _memset:
  3051                           	callstack 29
  3052   0011D6  C001  F00B         	movff	memset@dest,memset@s
  3053   0011DA  C002  F00C         	movff	memset@dest+1,memset@s+1
  3054   0011DE  5005               	movf	memset@n^0,w,c
  3055   0011E0  1006               	iorwf	(memset@n+1)^0,w,c
  3056   0011E2  A4D8               	btfss	status,2,c
  3057   0011E4  EFF6  F008         	goto	u2001
  3058   0011E8  EFF8  F008         	goto	u2000
  3059   0011EC                     u2001:
  3060   0011EC  EFFE  F008         	goto	l2921
  3061   0011F0                     u2000:
  3062   0011F0                     l2917:
  3063   0011F0  C001  F001         	movff	memset@dest,?_memset
  3064   0011F4  C002  F002         	movff	memset@dest+1,?_memset+1
  3065   0011F8  EFAB  F009         	goto	l1156
  3066   0011FC                     l2921:
  3067   0011FC  C00B  FFD9         	movff	memset@s,fsr2l
  3068   001200  C00C  FFDA         	movff	memset@s+1,fsr2h
  3069   001204  C003  FFDF         	movff	memset@c,indf2
  3070   001208  5005               	movf	memset@n^0,w,c
  3071   00120A  240B               	addwf	memset@s^0,w,c
  3072   00120C  6E07               	movwf	??_memset^0,c
  3073   00120E  5006               	movf	(memset@n+1)^0,w,c
  3074   001210  200C               	addwfc	(memset@s+1)^0,w,c
  3075   001212  6E08               	movwf	(??_memset+1)^0,c
  3076   001214  0EFF               	movlw	255
  3077   001216  2407               	addwf	??_memset^0,w,c
  3078   001218  6ED9               	movwf	fsr2l,c
  3079   00121A  0EFF               	movlw	255
  3080   00121C  2008               	addwfc	(??_memset+1)^0,w,c
  3081   00121E  6EDA               	movwf	fsr2h,c
  3082   001220  C003  FFDF         	movff	memset@c,indf2
  3083   001224  5006               	movf	(memset@n+1)^0,w,c
  3084   001226  E107               	bnz	u2011
  3085   001228  0E03               	movlw	3
  3086   00122A  5C05               	subwf	memset@n^0,w,c
  3087   00122C  B0D8               	btfsc	status,0,c
  3088   00122E  EF1B  F009         	goto	u2011
  3089   001232  EF1D  F009         	goto	u2010
  3090   001236                     u2011:
  3091   001236  EF1F  F009         	goto	l2929
  3092   00123A                     u2010:
  3093   00123A  EFF8  F008         	goto	l2917
  3094   00123E                     l2929:
  3095   00123E  EE20 F001          	lfsr	2,1
  3096   001242  500B               	movf	memset@s^0,w,c
  3097   001244  26D9               	addwf	fsr2l,f,c
  3098   001246  500C               	movf	(memset@s+1)^0,w,c
  3099   001248  22DA               	addwfc	fsr2h,f,c
  3100   00124A  C003  FFDF         	movff	memset@c,indf2
  3101   00124E  EE20 F002          	lfsr	2,2
  3102   001252  500B               	movf	memset@s^0,w,c
  3103   001254  26D9               	addwf	fsr2l,f,c
  3104   001256  500C               	movf	(memset@s+1)^0,w,c
  3105   001258  22DA               	addwfc	fsr2h,f,c
  3106   00125A  C003  FFDF         	movff	memset@c,indf2
  3107   00125E  5005               	movf	memset@n^0,w,c
  3108   001260  240B               	addwf	memset@s^0,w,c
  3109   001262  6E07               	movwf	??_memset^0,c
  3110   001264  5006               	movf	(memset@n+1)^0,w,c
  3111   001266  200C               	addwfc	(memset@s+1)^0,w,c
  3112   001268  6E08               	movwf	(??_memset+1)^0,c
  3113   00126A  0EFE               	movlw	254
  3114   00126C  2407               	addwf	??_memset^0,w,c
  3115   00126E  6ED9               	movwf	fsr2l,c
  3116   001270  0EFF               	movlw	255
  3117   001272  2008               	addwfc	(??_memset+1)^0,w,c
  3118   001274  6EDA               	movwf	fsr2h,c
  3119   001276  C003  FFDF         	movff	memset@c,indf2
  3120   00127A  5005               	movf	memset@n^0,w,c
  3121   00127C  240B               	addwf	memset@s^0,w,c
  3122   00127E  6E07               	movwf	??_memset^0,c
  3123   001280  5006               	movf	(memset@n+1)^0,w,c
  3124   001282  200C               	addwfc	(memset@s+1)^0,w,c
  3125   001284  6E08               	movwf	(??_memset+1)^0,c
  3126   001286  0EFD               	movlw	253
  3127   001288  2407               	addwf	??_memset^0,w,c
  3128   00128A  6ED9               	movwf	fsr2l,c
  3129   00128C  0EFF               	movlw	255
  3130   00128E  2008               	addwfc	(??_memset+1)^0,w,c
  3131   001290  6EDA               	movwf	fsr2h,c
  3132   001292  C003  FFDF         	movff	memset@c,indf2
  3133   001296  5006               	movf	(memset@n+1)^0,w,c
  3134   001298  E107               	bnz	u2021
  3135   00129A  0E07               	movlw	7
  3136   00129C  5C05               	subwf	memset@n^0,w,c
  3137   00129E  B0D8               	btfsc	status,0,c
  3138   0012A0  EF54  F009         	goto	u2021
  3139   0012A4  EF56  F009         	goto	u2020
  3140   0012A8                     u2021:
  3141   0012A8  EF58  F009         	goto	l2937
  3142   0012AC                     u2020:
  3143   0012AC  EFF8  F008         	goto	l2917
  3144   0012B0                     l2937:
  3145   0012B0  EE20 F003          	lfsr	2,3
  3146   0012B4  500B               	movf	memset@s^0,w,c
  3147   0012B6  26D9               	addwf	fsr2l,f,c
  3148   0012B8  500C               	movf	(memset@s+1)^0,w,c
  3149   0012BA  22DA               	addwfc	fsr2h,f,c
  3150   0012BC  C003  FFDF         	movff	memset@c,indf2
  3151   0012C0  5005               	movf	memset@n^0,w,c
  3152   0012C2  240B               	addwf	memset@s^0,w,c
  3153   0012C4  6E07               	movwf	??_memset^0,c
  3154   0012C6  5006               	movf	(memset@n+1)^0,w,c
  3155   0012C8  200C               	addwfc	(memset@s+1)^0,w,c
  3156   0012CA  6E08               	movwf	(??_memset+1)^0,c
  3157   0012CC  0EFC               	movlw	252
  3158   0012CE  2407               	addwf	??_memset^0,w,c
  3159   0012D0  6ED9               	movwf	fsr2l,c
  3160   0012D2  0EFF               	movlw	255
  3161   0012D4  2008               	addwfc	(??_memset+1)^0,w,c
  3162   0012D6  6EDA               	movwf	fsr2h,c
  3163   0012D8  C003  FFDF         	movff	memset@c,indf2
  3164   0012DC  5006               	movf	(memset@n+1)^0,w,c
  3165   0012DE  E107               	bnz	u2031
  3166   0012E0  0E09               	movlw	9
  3167   0012E2  5C05               	subwf	memset@n^0,w,c
  3168   0012E4  B0D8               	btfsc	status,0,c
  3169   0012E6  EF77  F009         	goto	u2031
  3170   0012EA  EF79  F009         	goto	u2030
  3171   0012EE                     u2031:
  3172   0012EE  EF7B  F009         	goto	l2945
  3173   0012F2                     u2030:
  3174   0012F2  EFF8  F008         	goto	l2917
  3175   0012F6                     l2945:
  3176   0012F6  C00B  F007         	movff	memset@s,??_memset
  3177   0012FA  C00C  F008         	movff	memset@s+1,??_memset+1
  3178   0012FE  1E07               	comf	??_memset^0,f,c
  3179   001300  1E08               	comf	(??_memset+1)^0,f,c
  3180   001302  4A07               	infsnz	??_memset^0,f,c
  3181   001304  2A08               	incf	(??_memset+1)^0,f,c
  3182   001306  0E03               	movlw	3
  3183   001308  1407               	andwf	??_memset^0,w,c
  3184   00130A  6E09               	movwf	memset@k^0,c
  3185   00130C  6A0A               	clrf	(memset@k+1)^0,c
  3186   00130E  5009               	movf	memset@k^0,w,c
  3187   001310  260B               	addwf	memset@s^0,f,c
  3188   001312  500A               	movf	(memset@k+1)^0,w,c
  3189   001314  220C               	addwfc	(memset@s+1)^0,f,c
  3190   001316  5009               	movf	memset@k^0,w,c
  3191   001318  5E05               	subwf	memset@n^0,f,c
  3192   00131A  500A               	movf	(memset@k+1)^0,w,c
  3193   00131C  5A06               	subwfb	(memset@n+1)^0,f,c
  3194   00131E  0EFC               	movlw	252
  3195   001320  1605               	andwf	memset@n^0,f,c
  3196   001322  0EFF               	movlw	255
  3197   001324  1606               	andwf	(memset@n+1)^0,f,c
  3198   001326  EFA0  F009         	goto	l2953
  3199   00132A                     l2947:
  3200   00132A  C00B  FFD9         	movff	memset@s,fsr2l
  3201   00132E  C00C  FFDA         	movff	memset@s+1,fsr2h
  3202   001332  C003  FFDF         	movff	memset@c,indf2
  3203   001336  0605               	decf	memset@n^0,f,c
  3204   001338  A0D8               	btfss	status,0,c
  3205   00133A  0606               	decf	(memset@n+1)^0,f,c
  3206   00133C  4A0B               	infsnz	memset@s^0,f,c
  3207   00133E  2A0C               	incf	(memset@s+1)^0,f,c
  3208   001340                     l2953:
  3209   001340  5005               	movf	memset@n^0,w,c
  3210   001342  1006               	iorwf	(memset@n+1)^0,w,c
  3211   001344  A4D8               	btfss	status,2,c
  3212   001346  EFA7  F009         	goto	u2041
  3213   00134A  EFA9  F009         	goto	u2040
  3214   00134E                     u2041:
  3215   00134E  EF95  F009         	goto	l2947
  3216   001352                     u2040:
  3217   001352  EFF8  F008         	goto	l2917
  3218   001356                     l1156:
  3219   001356  0012               	return		;funcret
  3220   001358                     __end_of_memset:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _application_initialize *****************
  3224 ;; Defined at:
  3225 ;;		line 146 in file "application.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 4
  3246 ;; This function calls:
  3247 ;;		_lcd_8bit_initialize
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text20
  3254   0021F4                     __ptext20:
  3255                           	callstack 0
  3256   0021F4                     _application_initialize:
  3257                           	callstack 26
  3258   0021F4                     
  3259                           ;application.c: 148:     ret = lcd_8bit_initialize(&lcd2_8);
  3260   0021F4  0EB0               	movlw	low _lcd2_8
  3261   0021F6  6E17               	movwf	lcd_8bit_initialize@lcd^0,c
  3262   0021F8  0E00               	movlw	high _lcd2_8
  3263   0021FA  6E18               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  3264   0021FC  EC86  F00B         	call	_lcd_8bit_initialize	;wreg free
  3265   002200  0100               	movlb	0	; () banked
  3266   002202  6FBA               	movwf	_ret& (0+255),b
  3267   002204                     
  3268                           ; BSR set to: 0
  3269   002204  0012               	return		;funcret
  3270   002206                     __end_of_application_initialize:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _lcd_8bit_initialize *****************
  3274 ;; Defined at:
  3275 ;;		line 139 in file "ECU_Layer/LCD/ecu_lcd.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  lcd             2   22[COMRAM] PTR const struct .
  3278 ;;		 -> lcd2_8(10), 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  pin             1   26[COMRAM] unsigned char 
  3281 ;;  ret             1   27[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      unsigned char 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;Total ram usage:        6 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 3
  3298 ;; This function calls:
  3299 ;;		_gpio_pin_initialize
  3300 ;;		_lcd_8bit_send_command
  3301 ;; This function is called by:
  3302 ;;		_application_initialize
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text21
  3307   00170C                     __ptext21:
  3308                           	callstack 0
  3309   00170C                     _lcd_8bit_initialize:
  3310                           	callstack 26
  3311   00170C                     
  3312                           ;ECU_Layer/LCD/ecu_lcd.c: 141:     if(lcd == ((void*)0)){
  3313   00170C  5017               	movf	lcd_8bit_initialize@lcd^0,w,c
  3314   00170E  1018               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  3315   001710  A4D8               	btfss	status,2,c
  3316   001712  EF8D  F00B         	goto	u1951
  3317   001716  EF8F  F00B         	goto	u1950
  3318   00171A                     u1951:
  3319   00171A  EF93  F00B         	goto	l2839
  3320   00171E                     u1950:
  3321   00171E                     
  3322                           ;ECU_Layer/LCD/ecu_lcd.c: 142:         ret = (std_ReturnType)0x00;
  3323   00171E  0E00               	movlw	0
  3324   001720  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3325                           
  3326                           ;ECU_Layer/LCD/ecu_lcd.c: 143:     }
  3327   001722  EF06  F00C         	goto	l2871
  3328   001726                     l2839:
  3329                           
  3330                           ;ECU_Layer/LCD/ecu_lcd.c: 145:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  3331   001726  C017  F00B         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@pin_config
  3332   00172A  C018  F00C         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  3333   00172E  EC42  F00F         	call	_gpio_pin_initialize	;wreg free
  3334   001732  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3335                           
  3336                           ;ECU_Layer/LCD/ecu_lcd.c: 146:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  3337   001734  0E01               	movlw	1
  3338   001736  2417               	addwf	lcd_8bit_initialize@lcd^0,w,c
  3339   001738  6E0B               	movwf	gpio_pin_initialize@pin_config^0,c
  3340   00173A  0E00               	movlw	0
  3341   00173C  2018               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  3342   00173E  6E0C               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3343   001740  EC42  F00F         	call	_gpio_pin_initialize	;wreg free
  3344   001744  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3345   001746                     
  3346                           ;ECU_Layer/LCD/ecu_lcd.c: 147:         for(uint8 pin = 0 ; pin < 8 ; pin++){
  3347   001746  0E00               	movlw	0
  3348   001748  6E1B               	movwf	lcd_8bit_initialize@pin^0,c
  3349   00174A                     l2847:
  3350   00174A  501B               	movf	lcd_8bit_initialize@pin^0,w,c
  3351   00174C  2417               	addwf	lcd_8bit_initialize@lcd^0,w,c
  3352   00174E  6E19               	movwf	??_lcd_8bit_initialize^0,c
  3353   001750  0E00               	movlw	0
  3354   001752  2018               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  3355   001754  6E1A               	movwf	(??_lcd_8bit_initialize+1)^0,c
  3356   001756  0E02               	movlw	2
  3357   001758  2419               	addwf	??_lcd_8bit_initialize^0,w,c
  3358   00175A  6E0B               	movwf	gpio_pin_initialize@pin_config^0,c
  3359   00175C  0E00               	movlw	0
  3360   00175E  201A               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  3361   001760  6E0C               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3362   001762  EC42  F00F         	call	_gpio_pin_initialize	;wreg free
  3363   001766                     
  3364                           ;ECU_Layer/LCD/ecu_lcd.c: 149:         }
  3365   001766  2A1B               	incf	lcd_8bit_initialize@pin^0,f,c
  3366   001768  0E07               	movlw	7
  3367   00176A  641B               	cpfsgt	lcd_8bit_initialize@pin^0,c
  3368   00176C  EFBA  F00B         	goto	u1961
  3369   001770  EFBC  F00B         	goto	u1960
  3370   001774                     u1961:
  3371   001774  EFA5  F00B         	goto	l2847
  3372   001778                     u1960:
  3373   001778                     
  3374                           ;ECU_Layer/LCD/ecu_lcd.c: 150:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3375   001778  0E34               	movlw	52
  3376   00177A  6E19               	movwf	??_lcd_8bit_initialize^0,c
  3377   00177C  0EF2               	movlw	242
  3378   00177E                     u2627:
  3379   00177E  2EE8               	decfsz	wreg,f,c
  3380   001780  D7FE               	bra	u2627
  3381   001782  2E19               	decfsz	??_lcd_8bit_initialize^0,f,c
  3382   001784  D7FC               	bra	u2627
  3383   001786  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3384   00178A  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3385   00178E  0E38               	movlw	56
  3386   001790  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3387   001792  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3388   001796                     
  3389                           ;ECU_Layer/LCD/ecu_lcd.c: 152:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3390   001796  0E0D               	movlw	13
  3391   001798  6E19               	movwf	??_lcd_8bit_initialize^0,c
  3392   00179A  0EFC               	movlw	252
  3393   00179C                     u2637:
  3394   00179C  2EE8               	decfsz	wreg,f,c
  3395   00179E  D7FE               	bra	u2637
  3396   0017A0  2E19               	decfsz	??_lcd_8bit_initialize^0,f,c
  3397   0017A2  D7FC               	bra	u2637
  3398   0017A4  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3399   0017A8  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3400   0017AC  0E38               	movlw	56
  3401   0017AE  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3402   0017B0  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3403   0017B4                     
  3404                           ;ECU_Layer/LCD/ecu_lcd.c: 154:         _delay((unsigned long)((150)*(8000000UL/4000000.0
      +                          )));
  3405   0017B4  0E64               	movlw	100
  3406   0017B6                     u2647:
  3407   0017B6  2EE8               	decfsz	wreg,f,c
  3408   0017B8  D7FE               	bra	u2647
  3409   0017BA  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3410   0017BE  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3411   0017C2  0E38               	movlw	56
  3412   0017C4  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3413   0017C6  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3414   0017CA  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3415   0017CE  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3416   0017D2  0E01               	movlw	1
  3417   0017D4  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3418   0017D6  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3419   0017DA  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3420   0017DE  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3421   0017E2  0E02               	movlw	2
  3422   0017E4  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3423   0017E6  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3424   0017EA  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3425   0017EE  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3426   0017F2  0E06               	movlw	6
  3427   0017F4  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3428   0017F6  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3429   0017FA                     
  3430                           ;ECU_Layer/LCD/ecu_lcd.c: 159:         ret = lcd_8bit_send_command(lcd,0x0C);
  3431   0017FA  C017  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  3432   0017FE  C018  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  3433   001802  0E0C               	movlw	12
  3434   001804  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3435   001806  EC72  F00E         	call	_lcd_8bit_send_command	;wreg free
  3436   00180A  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3437   00180C                     l2871:
  3438                           
  3439                           ;ECU_Layer/LCD/ecu_lcd.c: 162:     return ret;
  3440   00180C  501C               	movf	lcd_8bit_initialize@ret^0,w,c
  3441   00180E  0012               	return		;funcret
  3442   001810                     __end_of_lcd_8bit_initialize:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _lcd_8bit_send_command *****************
  3446 ;; Defined at:
  3447 ;;		line 170 in file "ECU_Layer/LCD/ecu_lcd.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  lcd             2   13[COMRAM] PTR const struct .
  3450 ;;		 -> lcd2_8(10), 
  3451 ;;  command         1   15[COMRAM] unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  pin             1   21[COMRAM] unsigned char 
  3454 ;;  ret             1   20[COMRAM] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      unsigned char 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3464 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;Total ram usage:        9 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 2
  3471 ;; This function calls:
  3472 ;;		_gpio_pin_write_logic
  3473 ;;		_lcd_8bit_send_enable
  3474 ;; This function is called by:
  3475 ;;		_lcd_8bit_initialize
  3476 ;;		_lcd_8bit_send_cutsom_char
  3477 ;;		_lcd_8bit_set_cursor
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text22
  3482   001CE4                     __ptext22:
  3483                           	callstack 0
  3484   001CE4                     _lcd_8bit_send_command:
  3485                           	callstack 25
  3486   001CE4                     
  3487                           ;ECU_Layer/LCD/ecu_lcd.c: 172:     if(lcd == ((void*)0)){
  3488   001CE4  500E               	movf	lcd_8bit_send_command@lcd^0,w,c
  3489   001CE6  100F               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  3490   001CE8  A4D8               	btfss	status,2,c
  3491   001CEA  EF79  F00E         	goto	u1821
  3492   001CEE  EF7B  F00E         	goto	u1820
  3493   001CF2                     u1821:
  3494   001CF2  EF7F  F00E         	goto	l2705
  3495   001CF6                     u1820:
  3496   001CF6                     
  3497                           ;ECU_Layer/LCD/ecu_lcd.c: 173:         ret = (std_ReturnType)0x00;
  3498   001CF6  0E00               	movlw	0
  3499   001CF8  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  3500                           
  3501                           ;ECU_Layer/LCD/ecu_lcd.c: 174:     }
  3502   001CFA  EFB6  F00E         	goto	l2721
  3503   001CFE                     l2705:
  3504   001CFE  C00E  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin_config
  3505   001D02  C00F  F002         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  3506   001D06  0E00               	movlw	0
  3507   001D08  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3508   001D0A  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  3509   001D0E                     
  3510                           ;ECU_Layer/LCD/ecu_lcd.c: 177:         for(uint8 pin = 0 ; pin < 8 ; pin++){
  3511   001D0E  0E00               	movlw	0
  3512   001D10  6E16               	movwf	lcd_8bit_send_command@pin^0,c
  3513   001D12                     l2713:
  3514   001D12  5016               	movf	lcd_8bit_send_command@pin^0,w,c
  3515   001D14  240E               	addwf	lcd_8bit_send_command@lcd^0,w,c
  3516   001D16  6E11               	movwf	??_lcd_8bit_send_command^0,c
  3517   001D18  0E00               	movlw	0
  3518   001D1A  200F               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  3519   001D1C  6E12               	movwf	(??_lcd_8bit_send_command+1)^0,c
  3520   001D1E  0E02               	movlw	2
  3521   001D20  2411               	addwf	??_lcd_8bit_send_command^0,w,c
  3522   001D22  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  3523   001D24  0E00               	movlw	0
  3524   001D26  2012               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  3525   001D28  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  3526   001D2A  C016  F013         	movff	lcd_8bit_send_command@pin,??_lcd_8bit_send_command+2
  3527   001D2E  C010  F014         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  3528   001D32  2A13               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  3529   001D34  EF9E  F00E         	goto	u1834
  3530   001D38                     u1835:
  3531   001D38  90D8               	bcf	status,0,c
  3532   001D3A  3214               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  3533   001D3C                     u1834:
  3534   001D3C  2E13               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  3535   001D3E  EF9C  F00E         	goto	u1835
  3536   001D42  5014               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  3537   001D44  0B01               	andlw	1
  3538   001D46  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3539   001D48  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  3540   001D4C                     
  3541                           ;ECU_Layer/LCD/ecu_lcd.c: 179:         }
  3542   001D4C  2A16               	incf	lcd_8bit_send_command@pin^0,f,c
  3543   001D4E  0E07               	movlw	7
  3544   001D50  6416               	cpfsgt	lcd_8bit_send_command@pin^0,c
  3545   001D52  EFAD  F00E         	goto	u1841
  3546   001D56  EFAF  F00E         	goto	u1840
  3547   001D5A                     u1841:
  3548   001D5A  EF89  F00E         	goto	l2713
  3549   001D5E                     u1840:
  3550   001D5E                     
  3551                           ;ECU_Layer/LCD/ecu_lcd.c: 180:         ret = lcd_8bit_send_enable(lcd);
  3552   001D5E  C00E  F00B         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable@lcd
  3553   001D62  C00F  F00C         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable@lcd+1
  3554   001D66  EC5D  F010         	call	_lcd_8bit_send_enable	;wreg free
  3555   001D6A  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  3556   001D6C                     l2721:
  3557                           
  3558                           ;ECU_Layer/LCD/ecu_lcd.c: 182:     return ret;
  3559   001D6C  5015               	movf	lcd_8bit_send_command@ret^0,w,c
  3560   001D6E  0012               	return		;funcret
  3561   001D70                     __end_of_lcd_8bit_send_command:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _lcd_8bit_send_enable *****************
  3565 ;; Defined at:
  3566 ;;		line 355 in file "ECU_Layer/LCD/ecu_lcd.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  lcd             2   10[COMRAM] PTR const struct .
  3569 ;;		 -> lcd2_8(10), 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  ret             1   12[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      unsigned char 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        3 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 1
  3588 ;; This function calls:
  3589 ;;		_gpio_pin_write_logic
  3590 ;; This function is called by:
  3591 ;;		_lcd_8bit_send_command
  3592 ;;		_lcd_8bit_send_char_data
  3593 ;;		_lcd_8bit_send_data_pos
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text23
  3598   0020BA                     __ptext23:
  3599                           	callstack 0
  3600   0020BA                     _lcd_8bit_send_enable:
  3601                           	callstack 27
  3602   0020BA                     
  3603                           ;ECU_Layer/LCD/ecu_lcd.c: 357:     if(lcd == ((void*)0)){
  3604   0020BA  500B               	movf	lcd_8bit_send_enable@lcd^0,w,c
  3605   0020BC  100C               	iorwf	(lcd_8bit_send_enable@lcd+1)^0,w,c
  3606   0020BE  A4D8               	btfss	status,2,c
  3607   0020C0  EF64  F010         	goto	u1651
  3608   0020C4  EF66  F010         	goto	u1650
  3609   0020C8                     u1651:
  3610   0020C8  EF6A  F010         	goto	l2615
  3611   0020CC                     u1650:
  3612   0020CC                     
  3613                           ;ECU_Layer/LCD/ecu_lcd.c: 358:         ret = (std_ReturnType)0x00;
  3614   0020CC  0E00               	movlw	0
  3615   0020CE  6E0D               	movwf	lcd_8bit_send_enable@ret^0,c
  3616                           
  3617                           ;ECU_Layer/LCD/ecu_lcd.c: 359:     }
  3618   0020D0  EF83  F010         	goto	l2621
  3619   0020D4                     l2615:
  3620   0020D4  0E01               	movlw	1
  3621   0020D6  240B               	addwf	lcd_8bit_send_enable@lcd^0,w,c
  3622   0020D8  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  3623   0020DA  0E00               	movlw	0
  3624   0020DC  200C               	addwfc	(lcd_8bit_send_enable@lcd+1)^0,w,c
  3625   0020DE  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  3626   0020E0  0E01               	movlw	1
  3627   0020E2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3628   0020E4  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  3629   0020E8                     
  3630                           ;ECU_Layer/LCD/ecu_lcd.c: 362:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  3631   0020E8  0E03               	movlw	3
  3632   0020EA                     u2657:
  3633   0020EA  2EE8               	decfsz	wreg,f,c
  3634   0020EC  D7FE               	bra	u2657
  3635   0020EE  F000               	nop	
  3636   0020F0                     
  3637                           ;ECU_Layer/LCD/ecu_lcd.c: 363:         ret = gpio_pin_write_logic(&(lcd->lcd_en) , GPIO_
      +                          LOW);
  3638   0020F0  0E01               	movlw	1
  3639   0020F2  240B               	addwf	lcd_8bit_send_enable@lcd^0,w,c
  3640   0020F4  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  3641   0020F6  0E00               	movlw	0
  3642   0020F8  200C               	addwfc	(lcd_8bit_send_enable@lcd+1)^0,w,c
  3643   0020FA  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  3644   0020FC  0E00               	movlw	0
  3645   0020FE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3646   002100  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  3647   002104  6E0D               	movwf	lcd_8bit_send_enable@ret^0,c
  3648   002106                     l2621:
  3649                           
  3650                           ;ECU_Layer/LCD/ecu_lcd.c: 365:     return ret;
  3651   002106  500D               	movf	lcd_8bit_send_enable@ret^0,w,c
  3652   002108  0012               	return		;funcret
  3653   00210A                     __end_of_lcd_8bit_send_enable:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _gpio_pin_initialize *****************
  3657 ;; Defined at:
  3658 ;;		line 122 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  pin_config      2   10[COMRAM] PTR const struct .
  3661 ;;		 -> lcd2_8.lcd_data(8), lcd2_8(10), relay_initialize@pin_obj(1), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  ret             1   13[COMRAM] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      unsigned char 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        4 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 1
  3680 ;; This function calls:
  3681 ;;		_gpio_pin_direction_initialize
  3682 ;;		_gpio_pin_write_logic
  3683 ;; This function is called by:
  3684 ;;		_lcd_8bit_initialize
  3685 ;;		_keypad_initialize
  3686 ;;		_relay_initialize
  3687 ;;		_dc_motor_initialize
  3688 ;;		_seven_segment_initialize
  3689 ;;		_lcd_4bit_initialize
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text24
  3694   001E84                     __ptext24:
  3695                           	callstack 0
  3696   001E84                     _gpio_pin_initialize:
  3697                           	callstack 27
  3698   001E84                     
  3699                           ;MCAL_Layer/GPIO/hal_gpio.c: 123:     std_ReturnType ret = (std_ReturnType)0x01;
  3700   001E84  0E01               	movlw	1
  3701   001E86  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  3702   001E88                     
  3703                           ;MCAL_Layer/GPIO/hal_gpio.c: 124:     if(pin_config == ((void*)0) || pin_config->pin > 8
      +                           -1){
  3704   001E88  500B               	movf	gpio_pin_initialize@pin_config^0,w,c
  3705   001E8A  100C               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
  3706   001E8C  B4D8               	btfsc	status,2,c
  3707   001E8E  EF4B  F00F         	goto	u1881
  3708   001E92  EF4D  F00F         	goto	u1880
  3709   001E96                     u1881:
  3710   001E96  EF5E  F00F         	goto	l2765
  3711   001E9A                     u1880:
  3712   001E9A  C00B  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  3713   001E9E  C00C  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  3714   001EA2  30DF               	rrcf	223,w,c
  3715   001EA4  32E8               	rrcf	wreg,f,c
  3716   001EA6  32E8               	rrcf	wreg,f,c
  3717   001EA8  0B07               	andlw	7
  3718   001EAA  6E0D               	movwf	??_gpio_pin_initialize^0,c
  3719   001EAC  0E07               	movlw	7
  3720   001EAE  640D               	cpfsgt	??_gpio_pin_initialize^0,c
  3721   001EB0  EF5C  F00F         	goto	u1891
  3722   001EB4  EF5E  F00F         	goto	u1890
  3723   001EB8                     u1891:
  3724   001EB8  EF62  F00F         	goto	l2767
  3725   001EBC                     u1890:
  3726   001EBC                     l2765:
  3727                           
  3728                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:         ret = (std_ReturnType)0x00;
  3729   001EBC  0E00               	movlw	0
  3730   001EBE  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  3731                           
  3732                           ;MCAL_Layer/GPIO/hal_gpio.c: 126:     }
  3733   001EC0  EF76  F00F         	goto	l2769
  3734   001EC4                     l2767:
  3735                           
  3736                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:         gpio_pin_direction_initialize(pin_config);
  3737   001EC4  C00B  F001         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  3738   001EC8  C00C  F002         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  3739   001ECC  EC4E  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  3740                           
  3741                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:         gpio_pin_write_logic(pin_config , pin_config->
      +                          logic);
  3742   001ED0  C00B  F001         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  3743   001ED4  C00C  F002         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  3744   001ED8  C00B  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  3745   001EDC  C00C  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  3746   001EE0  0E00               	movlw	0
  3747   001EE2  BEDF               	btfsc	indf2,7,c
  3748   001EE4  0E01               	movlw	1
  3749   001EE6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3750   001EE8  ECF0  F00A         	call	_gpio_pin_write_logic	;wreg free
  3751   001EEC                     l2769:
  3752                           
  3753                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     return ret;
  3754   001EEC  500E               	movf	gpio_pin_initialize@ret^0,w,c
  3755   001EEE  0012               	return		;funcret
  3756   001EF0                     __end_of_gpio_pin_initialize:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _gpio_pin_write_logic *****************
  3760 ;; Defined at:
  3761 ;;		line 74 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  pin_config      2    0[COMRAM] PTR const struct .
  3764 ;;		 -> lcd2_8.lcd_data(8), lcd2_8(10), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3765 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@led_pin(1), led_turn_on@led_pin(1), 
  3766 ;;  logic           1    2[COMRAM] enum E2968
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  ret             1    9[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      unsigned char 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:       10 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_gpio_pin_initialize
  3788 ;;		_lcd_8bit_send_command
  3789 ;;		_lcd_8bit_send_char_data
  3790 ;;		_lcd_8bit_send_enable
  3791 ;;		_keypad_get_value
  3792 ;;		_led_turn_on
  3793 ;;		_led_turn_off
  3794 ;;		_relay_turn_on
  3795 ;;		_relay_turn_off
  3796 ;;		_dc_motor_move_right
  3797 ;;		_dc_motor_move_left
  3798 ;;		_dc_motor_stop
  3799 ;;		_seven_segment_write_number
  3800 ;;		_lcd_4bit_send_command
  3801 ;;		_lcd_4bit_send_char_data
  3802 ;;		_lcd_send_4bits
  3803 ;;		_lcd_4bit_send_enable
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text25
  3808   0015E0                     __ptext25:
  3809                           	callstack 0
  3810   0015E0                     _gpio_pin_write_logic:
  3811                           	callstack 27
  3812   0015E0                     
  3813                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     std_ReturnType ret = (std_ReturnType)0x01;
  3814   0015E0  0E01               	movlw	1
  3815   0015E2  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3816   0015E4                     
  3817                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
  3818   0015E4  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3819   0015E6  1002               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  3820   0015E8  B4D8               	btfsc	status,2,c
  3821   0015EA  EFF9  F00A         	goto	u1461
  3822   0015EE  EFFB  F00A         	goto	u1460
  3823   0015F2                     u1461:
  3824   0015F2  EF0C  F00B         	goto	l2489
  3825   0015F6                     u1460:
  3826   0015F6  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3827   0015FA  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3828   0015FE  30DF               	rrcf	223,w,c
  3829   001600  32E8               	rrcf	wreg,f,c
  3830   001602  32E8               	rrcf	wreg,f,c
  3831   001604  0B07               	andlw	7
  3832   001606  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3833   001608  0E07               	movlw	7
  3834   00160A  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  3835   00160C  EF0A  F00B         	goto	u1471
  3836   001610  EF0C  F00B         	goto	u1470
  3837   001614                     u1471:
  3838   001614  EF6F  F00B         	goto	l2497
  3839   001618                     u1470:
  3840   001618                     l2489:
  3841                           
  3842                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:         ret = (std_ReturnType)0x00;
  3843   001618  0E00               	movlw	0
  3844   00161A  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3845                           
  3846                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     }
  3847   00161C  EF84  F00B         	goto	l2499
  3848   001620                     l2491:
  3849                           
  3850                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:                 (*lat_register[pin_config->port] &= ~((
      +                          uint8)1 << pin_config->pin));
  3851   001620  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3852   001624  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3853   001628  30DF               	rrcf	223,w,c
  3854   00162A  32E8               	rrcf	wreg,f,c
  3855   00162C  32E8               	rrcf	wreg,f,c
  3856   00162E  0B07               	andlw	7
  3857   001630  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3858   001632  0E01               	movlw	1
  3859   001634  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3860   001636  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3861   001638  EF20  F00B         	goto	u1484
  3862   00163C                     u1485:
  3863   00163C  90D8               	bcf	status,0,c
  3864   00163E  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3865   001640                     u1484:
  3866   001640  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3867   001642  EF1E  F00B         	goto	u1485
  3868   001646  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3869   001648  0AFF               	xorlw	255
  3870   00164A  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3871   00164C  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3872   001650  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3873   001654  50DF               	movf	223,w,c
  3874   001656  0B07               	andlw	7
  3875   001658  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3876   00165A  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3877   00165C  0D02               	mullw	2
  3878   00165E  0E59               	movlw	low _lat_register
  3879   001660  24F3               	addwf	243,w,c
  3880   001662  6ED9               	movwf	fsr2l,c
  3881   001664  0E00               	movlw	high _lat_register
  3882   001666  20F4               	addwfc	prodh,w,c
  3883   001668  6EDA               	movwf	fsr2h,c
  3884   00166A  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  3885   00166E  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  3886   001672  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3887   001676  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3888   00167A  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3889   00167C  16DF               	andwf	indf2,f,c
  3890                           
  3891                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 break;
  3892   00167E  EF84  F00B         	goto	l2499
  3893   001682                     l2493:
  3894                           
  3895                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_register[pin_config->port] |= ((u
      +                          int8)1 << pin_config->pin));
  3896   001682  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3897   001686  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3898   00168A  30DF               	rrcf	223,w,c
  3899   00168C  32E8               	rrcf	wreg,f,c
  3900   00168E  32E8               	rrcf	wreg,f,c
  3901   001690  0B07               	andlw	7
  3902   001692  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3903   001694  0E01               	movlw	1
  3904   001696  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3905   001698  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3906   00169A  EF51  F00B         	goto	u1494
  3907   00169E                     u1495:
  3908   00169E  90D8               	bcf	status,0,c
  3909   0016A0  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3910   0016A2                     u1494:
  3911   0016A2  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3912   0016A4  EF4F  F00B         	goto	u1495
  3913   0016A8  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3914   0016AC  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3915   0016B0  50DF               	movf	223,w,c
  3916   0016B2  0B07               	andlw	7
  3917   0016B4  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3918   0016B6  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3919   0016B8  0D02               	mullw	2
  3920   0016BA  0E59               	movlw	low _lat_register
  3921   0016BC  24F3               	addwf	243,w,c
  3922   0016BE  6ED9               	movwf	fsr2l,c
  3923   0016C0  0E00               	movlw	high _lat_register
  3924   0016C2  20F4               	addwfc	prodh,w,c
  3925   0016C4  6EDA               	movwf	fsr2h,c
  3926   0016C6  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  3927   0016CA  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  3928   0016CE  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3929   0016D2  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3930   0016D6  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3931   0016D8  12DF               	iorwf	indf2,f,c
  3932                           
  3933                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 break;
  3934   0016DA  EF84  F00B         	goto	l2499
  3935   0016DE                     l2497:
  3936   0016DE  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  3937   0016E0  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3938   0016E2  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3939                           
  3940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3941                           ; Switch size 1, requested type "simple"
  3942                           ; Number of cases is 1, Range of values is 0 to 0
  3943                           ; switch strategies available:
  3944                           ; Name         Instructions Cycles
  3945                           ; simple_byte            4     3 (average)
  3946                           ;	Chosen strategy is simple_byte
  3947   0016E4  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3948   0016E6  0A00               	xorlw	0	; case 0
  3949   0016E8  B4D8               	btfsc	status,2,c
  3950   0016EA  EF79  F00B         	goto	l3569
  3951   0016EE  EF0C  F00B         	goto	l2489
  3952   0016F2                     l3569:
  3953                           
  3954                           ; Switch size 1, requested type "simple"
  3955                           ; Number of cases is 2, Range of values is 0 to 1
  3956                           ; switch strategies available:
  3957                           ; Name         Instructions Cycles
  3958                           ; simple_byte            7     4 (average)
  3959                           ;	Chosen strategy is simple_byte
  3960   0016F2  5004               	movf	??_gpio_pin_write_logic^0,w,c
  3961   0016F4  0A00               	xorlw	0	; case 0
  3962   0016F6  B4D8               	btfsc	status,2,c
  3963   0016F8  EF10  F00B         	goto	l2491
  3964   0016FC  0A01               	xorlw	1	; case 1
  3965   0016FE  B4D8               	btfsc	status,2,c
  3966   001700  EF41  F00B         	goto	l2493
  3967   001704  EF0C  F00B         	goto	l2489
  3968   001708                     l2499:
  3969                           
  3970                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     return ret;
  3971   001708  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  3972   00170A  0012               	return		;funcret
  3973   00170C                     __end_of_gpio_pin_write_logic:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _gpio_pin_direction_initialize *****************
  3977 ;; Defined at:
  3978 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  pin_config      2    0[COMRAM] PTR const struct .
  3981 ;;		 -> lcd2_8.lcd_data(8), lcd2_8(10), relay_initialize@pin_obj(1), led_initialize@led_pin(1), 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  ret             1    8[COMRAM] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      unsigned char 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;Total ram usage:        9 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_gpio_pin_initialize
  4003 ;;		_button_initialize
  4004 ;;		_keypad_initialize
  4005 ;;		_led_initialize
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text26
  4010   00149C                     __ptext26:
  4011                           	callstack 0
  4012   00149C                     _gpio_pin_direction_initialize:
  4013                           	callstack 27
  4014   00149C                     
  4015                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     std_ReturnType ret = (std_ReturnType)0x01;
  4016   00149C  0E01               	movlw	1
  4017   00149E  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  4018   0014A0                     
  4019                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(pin_config == ((void*)0) || pin_config->pin > 8 
      +                          -1){
  4020   0014A0  5001               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  4021   0014A2  1002               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  4022   0014A4  B4D8               	btfsc	status,2,c
  4023   0014A6  EF57  F00A         	goto	u1761
  4024   0014AA  EF59  F00A         	goto	u1760
  4025   0014AE                     u1761:
  4026   0014AE  EF6A  F00A         	goto	l2681
  4027   0014B2                     u1760:
  4028   0014B2  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4029   0014B6  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4030   0014BA  30DF               	rrcf	223,w,c
  4031   0014BC  32E8               	rrcf	wreg,f,c
  4032   0014BE  32E8               	rrcf	wreg,f,c
  4033   0014C0  0B07               	andlw	7
  4034   0014C2  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4035   0014C4  0E07               	movlw	7
  4036   0014C6  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4037   0014C8  EF68  F00A         	goto	u1771
  4038   0014CC  EF6A  F00A         	goto	u1770
  4039   0014D0                     u1771:
  4040   0014D0  EFCD  F00A         	goto	l2689
  4041   0014D4                     u1770:
  4042   0014D4                     l2681:
  4043                           
  4044                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (std_ReturnType)0x00;
  4045   0014D4  0E00               	movlw	0
  4046   0014D6  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  4047                           
  4048                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     }
  4049   0014D8  EFEE  F00A         	goto	l2691
  4050   0014DC                     l2683:
  4051                           
  4052                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_register[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
  4053   0014DC  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4054   0014E0  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4055   0014E4  30DF               	rrcf	223,w,c
  4056   0014E6  32E8               	rrcf	wreg,f,c
  4057   0014E8  32E8               	rrcf	wreg,f,c
  4058   0014EA  0B07               	andlw	7
  4059   0014EC  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4060   0014EE  0E01               	movlw	1
  4061   0014F0  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4062   0014F2  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4063   0014F4  EF7E  F00A         	goto	u1784
  4064   0014F8                     u1785:
  4065   0014F8  90D8               	bcf	status,0,c
  4066   0014FA  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4067   0014FC                     u1784:
  4068   0014FC  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4069   0014FE  EF7C  F00A         	goto	u1785
  4070   001502  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4071   001504  0AFF               	xorlw	255
  4072   001506  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4073   001508  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4074   00150C  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4075   001510  50DF               	movf	223,w,c
  4076   001512  0B07               	andlw	7
  4077   001514  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4078   001516  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4079   001518  0D02               	mullw	2
  4080   00151A  0E63               	movlw	low _tris_register
  4081   00151C  24F3               	addwf	243,w,c
  4082   00151E  6ED9               	movwf	fsr2l,c
  4083   001520  0E00               	movlw	high _tris_register
  4084   001522  20F4               	addwfc	prodh,w,c
  4085   001524  6EDA               	movwf	fsr2h,c
  4086   001526  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4087   00152A  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4088   00152E  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4089   001532  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4090   001536  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4091   001538  16DF               	andwf	indf2,f,c
  4092                           
  4093                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  4094   00153A  EFEE  F00A         	goto	l2691
  4095   00153E                     l2685:
  4096                           
  4097                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_register[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
  4098   00153E  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4099   001542  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4100   001546  30DF               	rrcf	223,w,c
  4101   001548  32E8               	rrcf	wreg,f,c
  4102   00154A  32E8               	rrcf	wreg,f,c
  4103   00154C  0B07               	andlw	7
  4104   00154E  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4105   001550  0E01               	movlw	1
  4106   001552  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4107   001554  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4108   001556  EFAF  F00A         	goto	u1794
  4109   00155A                     u1795:
  4110   00155A  90D8               	bcf	status,0,c
  4111   00155C  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4112   00155E                     u1794:
  4113   00155E  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4114   001560  EFAD  F00A         	goto	u1795
  4115   001564  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4116   001568  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4117   00156C  50DF               	movf	223,w,c
  4118   00156E  0B07               	andlw	7
  4119   001570  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4120   001572  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4121   001574  0D02               	mullw	2
  4122   001576  0E63               	movlw	low _tris_register
  4123   001578  24F3               	addwf	243,w,c
  4124   00157A  6ED9               	movwf	fsr2l,c
  4125   00157C  0E00               	movlw	high _tris_register
  4126   00157E  20F4               	addwfc	prodh,w,c
  4127   001580  6EDA               	movwf	fsr2h,c
  4128   001582  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4129   001586  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4130   00158A  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4131   00158E  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4132   001592  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4133   001594  12DF               	iorwf	indf2,f,c
  4134                           
  4135                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
  4136   001596  EFEE  F00A         	goto	l2691
  4137   00159A                     l2689:
  4138   00159A  C001  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4139   00159E  C002  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4140   0015A2  BCDF               	btfsc	indf2,6,c
  4141   0015A4  EFD6  F00A         	goto	u1801
  4142   0015A8  EFD9  F00A         	goto	u1800
  4143   0015AC                     u1801:
  4144   0015AC  0E01               	movlw	1
  4145   0015AE  EFDA  F00A         	goto	u1810
  4146   0015B2                     u1800:
  4147   0015B2  0E00               	movlw	0
  4148   0015B4                     u1810:
  4149   0015B4  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4150   0015B6  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4151                           
  4152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4153                           ; Switch size 1, requested type "simple"
  4154                           ; Number of cases is 1, Range of values is 0 to 0
  4155                           ; switch strategies available:
  4156                           ; Name         Instructions Cycles
  4157                           ; simple_byte            4     3 (average)
  4158                           ;	Chosen strategy is simple_byte
  4159   0015B8  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4160   0015BA  0A00               	xorlw	0	; case 0
  4161   0015BC  B4D8               	btfsc	status,2,c
  4162   0015BE  EFE3  F00A         	goto	l3571
  4163   0015C2  EF6A  F00A         	goto	l2681
  4164   0015C6                     l3571:
  4165                           
  4166                           ; Switch size 1, requested type "simple"
  4167                           ; Number of cases is 2, Range of values is 0 to 1
  4168                           ; switch strategies available:
  4169                           ; Name         Instructions Cycles
  4170                           ; simple_byte            7     4 (average)
  4171                           ;	Chosen strategy is simple_byte
  4172   0015C6  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  4173   0015C8  0A00               	xorlw	0	; case 0
  4174   0015CA  B4D8               	btfsc	status,2,c
  4175   0015CC  EF6E  F00A         	goto	l2683
  4176   0015D0  0A01               	xorlw	1	; case 1
  4177   0015D2  B4D8               	btfsc	status,2,c
  4178   0015D4  EF9F  F00A         	goto	l2685
  4179   0015D8  EF6A  F00A         	goto	l2681
  4180   0015DC                     l2691:
  4181                           
  4182                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  4183   0015DC  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4184   0015DE  0012               	return		;funcret
  4185   0015E0                     __end_of_gpio_pin_direction_initialize:
  4186                           	callstack 0
  4187                           
  4188                           	psect	rparam
  4189   000000                     
  4190                           	psect	config
  4191                           
  4192                           ; Padding undefined space
  4193   300000                     	org	3145728
  4194   300000  FF                 	db	255
  4195                           
  4196                           ;Config register CONFIG1H @ 0x300001
  4197                           ;	Oscillator Selection bits
  4198                           ;	OSC = HS, HS oscillator
  4199                           ;	Fail-Safe Clock Monitor Enable bit
  4200                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4201                           ;	Internal/External Oscillator Switchover bit
  4202                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4203   300001                     	org	3145729
  4204   300001  02                 	db	2
  4205                           
  4206                           ;Config register CONFIG2L @ 0x300002
  4207                           ;	Power-up Timer Enable bit
  4208                           ;	PWRT = OFF, PWRT disabled
  4209                           ;	Brown-out Reset Enable bits
  4210                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4211                           ;	Brown Out Reset Voltage bits
  4212                           ;	BORV = 1, 
  4213   300002                     	org	3145730
  4214   300002  09                 	db	9
  4215                           
  4216                           ;Config register CONFIG2H @ 0x300003
  4217                           ;	Watchdog Timer Enable bit
  4218                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4219                           ;	Watchdog Timer Postscale Select bits
  4220                           ;	WDTPS = 32768, 1:32768
  4221   300003                     	org	3145731
  4222   300003  1E                 	db	30
  4223                           
  4224                           ; Padding undefined space
  4225   300004                     	org	3145732
  4226   300004  FF                 	db	255
  4227                           
  4228                           ;Config register CONFIG3H @ 0x300005
  4229                           ;	CCP2 MUX bit
  4230                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4231                           ;	PORTB A/D Enable bit
  4232                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4233                           ;	Low-Power Timer1 Oscillator Enable bit
  4234                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4235                           ;	MCLR Pin Enable bit
  4236                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4237   300005                     	org	3145733
  4238   300005  81                 	db	129
  4239                           
  4240                           ;Config register CONFIG4L @ 0x300006
  4241                           ;	Stack Full/Underflow Reset Enable bit
  4242                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4243                           ;	Single-Supply ICSP Enable bit
  4244                           ;	LVP = OFF, Single-Supply ICSP disabled
  4245                           ;	Extended Instruction Set Enable bit
  4246                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4247                           ;	Background Debugger Enable bit
  4248                           ;	DEBUG = 0x1, unprogrammed default
  4249   300006                     	org	3145734
  4250   300006  81                 	db	129
  4251                           
  4252                           ; Padding undefined space
  4253   300007                     	org	3145735
  4254   300007  FF                 	db	255
  4255                           
  4256                           ;Config register CONFIG5L @ 0x300008
  4257                           ;	Code Protection bit
  4258                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4259                           ;	Code Protection bit
  4260                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4261                           ;	Code Protection bit
  4262                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4263                           ;	Code Protection bit
  4264                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4265   300008                     	org	3145736
  4266   300008  0F                 	db	15
  4267                           
  4268                           ;Config register CONFIG5H @ 0x300009
  4269                           ;	Boot Block Code Protection bit
  4270                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4271                           ;	Data EEPROM Code Protection bit
  4272                           ;	CPD = OFF, Data EEPROM not code-protected
  4273   300009                     	org	3145737
  4274   300009  C0                 	db	192
  4275                           
  4276                           ;Config register CONFIG6L @ 0x30000A
  4277                           ;	Write Protection bit
  4278                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4279                           ;	Write Protection bit
  4280                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4281                           ;	Write Protection bit
  4282                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4283                           ;	Write Protection bit
  4284                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4285   30000A                     	org	3145738
  4286   30000A  0F                 	db	15
  4287                           
  4288                           ;Config register CONFIG6H @ 0x30000B
  4289                           ;	Configuration Register Write Protection bit
  4290                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4291                           ;	Boot Block Write Protection bit
  4292                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4293                           ;	Data EEPROM Write Protection bit
  4294                           ;	WRTD = OFF, Data EEPROM not write-protected
  4295   30000B                     	org	3145739
  4296   30000B  E0                 	db	224
  4297                           
  4298                           ;Config register CONFIG7L @ 0x30000C
  4299                           ;	Table Read Protection bit
  4300                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4301                           ;	Table Read Protection bit
  4302                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4303                           ;	Table Read Protection bit
  4304                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4305                           ;	Table Read Protection bit
  4306                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4307   30000C                     	org	3145740
  4308   30000C  0F                 	db	15
  4309                           
  4310                           ;Config register CONFIG7H @ 0x30000D
  4311                           ;	Boot Block Table Read Protection bit
  4312                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4313   30000D                     	org	3145741
  4314   30000D  40                 	db	64
  4315                           tosu	equ	0xFFF
  4316                           tosh	equ	0xFFE
  4317                           tosl	equ	0xFFD
  4318                           stkptr	equ	0xFFC
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           pcl	equ	0xFF9
  4322                           tblptru	equ	0xFF8
  4323                           tblptrh	equ	0xFF7
  4324                           tblptrl	equ	0xFF6
  4325                           tablat	equ	0xFF5
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           indf0	equ	0xFEF
  4329                           postinc0	equ	0xFEE
  4330                           postdec0	equ	0xFED
  4331                           preinc0	equ	0xFEC
  4332                           plusw0	equ	0xFEB
  4333                           fsr0h	equ	0xFEA
  4334                           fsr0l	equ	0xFE9
  4335                           wreg	equ	0xFE8
  4336                           indf1	equ	0xFE7
  4337                           postinc1	equ	0xFE6
  4338                           postdec1	equ	0xFE5
  4339                           preinc1	equ	0xFE4
  4340                           plusw1	equ	0xFE3
  4341                           fsr1h	equ	0xFE2
  4342                           fsr1l	equ	0xFE1
  4343                           bsr	equ	0xFE0
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           preinc2	equ	0xFDC
  4348                           plusw2	equ	0xFDB
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    40
    Data        47
    BSS         50
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     88     127
    BANK0           128      0      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1331$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> number_txt(COMRAM[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1273$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1273$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 3
		 -> number_txt(COMRAM[3]), 

    memset@s	PTR unsigned char  size(2) Largest target is 3
		 -> number_txt(COMRAM[3]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_send_enable@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 3
		 -> number_txt(COMRAM[3]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 3
		 -> number_txt(COMRAM[3]), 

    lcd_8bit_send_cutsom_char@_chr	PTR const unsigned char  size(2) Largest target is 8
		 -> customChar3(CODE[8]), customChar2(CODE[8]), customChar1(CODE[8]), 

    lcd_8bit_send_cutsom_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> number_txt(COMRAM[3]), STR_1(CODE[13]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_send_data_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8(BANK0[10]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8.lcd_data(BANK0[8]), lcd2_8(BANK0[10]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8.lcd_data(BANK0[8]), lcd2_8(BANK0[10]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@led_pin(COMRAM[1]), led_turn_on@led_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd2_8.lcd_data(BANK0[8]), lcd2_8(BANK0[10]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@led_pin(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_string
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_cutsom_char->_lcd_8bit_send_data_pos
    _lcd_8bit_send_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _application_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   93176
             _application_initialize
            _convert_uint8_to_string
          _lcd_8bit_send_cutsom_char
               _lcd_8bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string                                 5     1      4   11659
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_cutsom_char                           11     4      7   54622
                                             35 COMRAM    11     4      7
            _lcd_8bit_send_char_data
              _lcd_8bit_send_command
             _lcd_8bit_send_data_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_data_pos                               6     1      5   29795
                                             29 COMRAM     6     1      5
            _lcd_8bit_send_char_data
               _lcd_8bit_send_enable
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  7     3      4   12858
                                             22 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              9     6      3   11241
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              4     2      2    7750
                                             84 COMRAM     4     2      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    6077
                                             62 COMRAM    22    16      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5406
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    5056
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3836
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2209
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1483
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   19145
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  6     4      2   19145
                                             22 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                9     6      3   12153
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable                                 3     1      2    5211
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    6572
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     483
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _lcd_8bit_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
           _gpio_pin_write_logic
   _convert_uint8_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _lcd_8bit_send_cutsom_char
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable
     _lcd_8bit_send_command
     _lcd_8bit_send_data_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_send_enable
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command
   _lcd_8bit_send_string
     _lcd_8bit_send_char_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      3B       5       46.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     58      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      39        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 05:27:14 2023

                           ___awdiv@sign 0006                                      l211 15DE  
                                    l230 170A                                      l313 2204  
                                    l403 20B8                                      l411 1DF8  
                                    l244 1EEE                                      l426 1E82  
                                    l436 2064                                      l391 1D6E  
                                    l456 2108                                      l384 180E  
                                    l712 199C                                      l467 1A5A  
                                    l725 1BC4                                      l398 1CE2  
          gpio_pin_initialize@pin_config 000B                                      _abs 214E  
                                    _pad 1BC6                                      _ret 00BA  
                           ___awmod@sign 0006                      led_initialize@F3048 007C  
                                    prod 0FF3                    relay_initialize@F3044 0078  
                                    wreg 0FE8             __end_of_lcd_8bit_send_enable 210A  
            __end_of_lcd_8bit_set_cursor 1A5C             __end_of_lcd_8bit_send_string 1DFA  
                                   ?_abs 0007                                     l1204 1080  
                                   l1206 1088                                     l1230 1FA6  
                                   l1207 10CE                                     l1231 1FAE  
                                   l1225 149A                                     l3001 2062  
                                   l1250 18D8                                     l1218 11D4  
                                   l1235 2184                                     l3011 1E14  
                                   l1156 1356                                     l1261 2206  
                                   l3021 1E54                                     l3013 1E2A  
                                   l3005 1DFA                                     l1238 218C  
                                   l3023 1E56                                     l3007 1DFA  
                                   l1169 200A                                     l3025 1E66  
                                   l3009 1E0C                                     l1258 214C  
                                   l1267 21C2                                     l1195 1BE8  
                                   l3019 1E2E                                     l3027 1E80  
                                   l2511 18EC                                     l1199 1C56  
                                   l2521 1912                                     l2513 18F4  
                                   l2601 1C3E                                     l2611 20BA  
                                   l2531 194A                                     l2523 191A  
                                   l2515 18F8                                     l2507 18DA  
                                   l2451 1810                                     l2621 2106  
                                   l2613 20CC                                     l2701 1CE4  
                                   l2541 1976                                     l2533 1950  
                                   l2525 192C                                     l2517 1906  
                                   l2509 18DE                                     l2605 214E  
                                   l2461 1892                                     l2453 1822  
                                   l2615 20D4                                     l2703 1CF6  
                                   l2535 1966                                     l2527 1934  
                                   l2543 197C                                     l2519 190E  
                                   l2551 1B16                                     l2607 2168  
                                   l2455 1834                                     l2471 212C  
                                   l2631 1066                                     l3351 1A60  
                                   l2617 20E8                                     l2609 20BA  
                                   l2713 1D12                                     l2721 1D6C  
                                   l2705 1CFE                                     l2545 198C  
                                   l2537 196E                                     l2529 193C  
                                   l2561 1B42                                     l2553 1B1A  
                                   l2457 183E                                     l2465 210A  
                                   l2473 218E                                     l2641 10B6  
                                   l2633 1074                                     l2625 103A  
                                   l2801 19A2                                     l3361 1AEA  
                                   l3353 1A78                                     l2491 1620  
                                   l2483 15E0                                     l2619 20F0  
                                   l2715 1D4C                                     l2707 1D0E  
                                   l2547 1994                                     l2539 1970  
                                   l2571 1B7A                                     l2563 1B4A  
                                   l2555 1B28                                     l2459 185C  
                                   l2467 2116                                     l2475 219A  
                                   l2651 10E6                                     l2643 10C2  
                                   l2635 1090                                     l2627 104E  
                                   l2731 1396                                     l2811 19EE  
                                   l2803 19A4                                     l3355 1A8A  
                                   l2493 1682                                     l2485 15E4  
                                   l2717 1D4E                                     l2581 1BB4  
                                   l2573 1B90                                     l2565 1B5C  
                                   l2557 1B30                                     l2469 2128  
                                   l2477 219E                                     l2661 115A  
                                   l2653 1118                                     l2645 10CA  
                                   l2637 10A0                                     l2629 105E  
                                   l2741 1426                                     l2733 139A  
                                   l2725 1358                                     l2813 1A06  
                                   l2805 19B6                                     l3357 1AA2  
                                   l3349 1A5C                                     l2487 15F6  
                                   l2719 1D5E                                     l2583 1BBC  
                                   l2575 1B98                                     l2567 1B64  
                                   l2559 1B34                                     l2479 21B6  
                                   l2591 1BE0                                     l2671 11AC  
                                   l2663 116C                                     l2655 111E  
                                   l2647 10D6                                     l2639 10A6  
                                   l2735 13AA                                     l2727 137C  
                                   l2751 1460                                     l2831 1F8A  
                                   l2807 19BE                                     l2815 1A1E  
                                   l2911 20B6                                     l2903 2066  
                                   l3359 1AC6                                     l2681 14D4  
                                   l2497 16DE                                     l2489 1618  
                                   l2761 1E88                                     l2841 1746  
                                   l2833 170C                                     l2921 11FC  
                                   l2577 1B9E                                     l2569 1B6C  
                                   l2593 1BF4                                     l2665 1186  
                                   l2657 1124                                     l2649 10E0  
                                   l2753 1484                                     l2745 1446  
                                   l2737 13C6                                     l2729 138A  
                                   l2825 1F52                                     l2809 19D6  
                                   l2817 1A58                                     l2905 2066  
                                   l3571 15C6                                     l2683 14DC  
                                   l2691 15DC                                     l2675 149C  
                                   l2499 1708                                     l2763 1E9A  
                                   l2851 1768                                     l2835 170C  
                                   l2931 1296                                     l2923 1208  
                                   l2915 11D6                                     l2579 1BA4  
                                   l2595 1C08                                     l2587 1BC6  
                                   l2667 1196                                     l2659 1140  
                                   l2755 1492                                     l2747 1454  
                                   l2739 13E2                                     l2827 1F5A  
                                   l2907 2078                                     l2685 153E  
                                   l2677 14A0                                     l2765 1EBC  
                                   l2861 17BA                                     l2853 1778  
                                   l2837 171E                                     l2917 11F0  
                                   l2597 1C0C                                     l2589 1BD4  
                                   l2669 119C                                     l2829 1F66  
                                   l2781 1C82                                     l2773 1C58  
                                   l2909 2080                                     ?_pad 0011  
                                   l2679 14B2                                     l2767 1EC4  
                                   l2759 1E84                                     l2863 17CA  
                                   l2855 1786                                     l2847 174A  
                                   l2871 180C                                     l2839 1726  
                                   l2951 133C                                     l2599 1C2A  
                                   l2791 1CC2                                     l2775 1C58  
                                   l3567 1A32                                     l2689 159A  
                                   l3569 16F2                                     l2769 1EEC  
                                   l2865 17DA                                     l2857 1796  
                                   l2849 1766                                     l2953 1340  
                                   l2945 12F6                                     l2937 12B0  
                                   l2929 123E                                     l2961 1FC0  
                                   l2793 1CD2                                     l2777 1C6A  
                                   l2699 1CE4                                     l2867 17EA  
                                   l2859 17B4                                     l2947 132A  
                                   l2939 12DC                                     l2963 1FC8  
                                   l2787 1C86                                     l2795 1CE0  
                                   l2779 1C72                                     l2869 17FA  
                                   l2973 21F4                                     l2949 1336  
                                   l2965 1FD0                                     l2789 1CC0  
                                   l2981 1D8E                                     l2967 1FF4  
                                   l2959 1FB0                                     l2991 200E  
                                   l2799 199E                                     l2983 1DC0  
                                   l2975 1D70                                     l2969 2002  
                                   l2993 200E                                     l2985 1DC4  
                                   l2977 1D74                                     l2995 2020  
                                   l2987 1DF6                                     l2979 1D86  
                                   l2997 2028                                     l2999 2044  
                                   STR_1 1029                                     STR_2 1036  
                                   u2000 11F0                                     u2001 11EC  
                                   u2010 123A                                     u2011 1236  
                                   u2020 12AC                                     u2100 1E0C  
                                   u2021 12A8                                     u2101 1E08  
                                   u2030 12F2                                     u2110 1E66  
                                   u2031 12EE                                     u2111 1E62  
                                   u2040 1352                                     u1400 1822  
                                   u2041 134E                                     u1401 181E  
                                   u1410 1834                                     u2050 1D86  
                                   u1411 1830                                     u2051 1D82  
                                   u1500 18EC                                     u1420 185C  
                                   u2060 1DB8                                     u1501 18E8  
                                   u1421 1858                                     _LATA 0F89  
                                   u1510 1906                                     u1430 1892  
                                   u2070 1DE6                                     _LATB 0F8A  
                                   u1511 1902                                     u1431 188E  
                                   _LATC 0F8B                                     u1520 192C  
                                   u1600 1B90                                     u1440 214C  
                                   u2080 1DF6                                     _LATD 0F8C  
                                   u1521 1928                                     u1601 1B8C  
                                   u1441 2148                                     u2081 1DF2  
                                   _LATE 0F8D                                     u1530 194A  
                                   u1610 1BB4                                     u1450 21B6  
                                   u2090 2020                                     u1531 1946  
                                   u1611 1BB0                                     u1451 21B2  
                                   u2091 201C                                     u2067 1DAE  
                                   u1460 15F6                                     u1540 1966  
                                   u1620 1BD4                                     u1700 10A0  
                                   u1461 15F2                                     u1541 1962  
                                   u1621 1BD0                                     u1701 109C  
                                   u2077 1DDC                                     u1470 1618  
                                   u1550 198C                                     u1630 1C2A  
                                   u1710 10B6                                     u1471 1614  
                                   u1551 1988                                     u1631 1C26  
                                   u1711 10B2                                     u1800 15B2  
                                   u1560 1B28                                     u1640 2168  
                                   u1720 115A                                     u1801 15AC  
                                   u1561 1B24                                     u1641 2164  
                                   u1721 1156                                     u1810 15B4  
                                   u1650 20CC                                     u1570 1B42  
                                   u1730 116C                                     u1651 20C8  
                                   u1571 1B3E                                     u1731 1168  
                                   u1484 1640                                     u1820 1CF6  
                                   u1580 1B5C                                     u1740 1186  
                                   u1660 104A                                     u1900 1C6A  
                                   u1485 163C                                     u1821 1CF2  
                                   u1581 1B58                                     u1741 1182  
                                   u1661 1044                                     u1901 1C66  
                                   u1494 16A2                                     u1590 1B7A  
                                   u1750 1196                                     u1670 104C  
                                   u1495 169E                                     u1591 1B76  
                                   u1751 1192                                     u1760 14B2  
                                   u1840 1D5E                                     u1680 105E  
                                   u1920 1CD2                                     u1761 14AE  
                                   u1841 1D5A                                     u1681 105A  
                                   u1921 1CCE                                     u1770 14D4  
                                   u1834 1D3C                                     u1690 1074  
                                   u1850 137C                                     u1914 1CB0  
                                   u1930 19B6                                     u1771 14D0  
                                   u1835 1D38                                     u2627 177E  
                                   u1691 1070                                     u1851 1378  
                                   u1915 1CAC                                     u1931 19B2  
                                   u1860 13C6                                     u1940 1FA6  
                                   u2637 179C                                     u1861 13C2  
                                   u1941 1FA2                                     u1950 171E  
                                   u1870 13E2                                     u2647 17B6  
                                   u1951 171A                                     u1871 13DE  
                                   u1784 14FC                                     u1880 1E9A  
                                   u1960 1778                                     u1785 14F8  
                                   u1881 1E96                                     u2657 20EA  
                                   u1961 1774                                     u1794 155E  
                                   u1890 1EBC                                     u1795 155A  
                                   u1891 1EB8                                     u1990 2078  
                                   u1991 2074                                     abs@a 0007  
                                   _dbuf 0080                                     _main 1A5C  
                                   _dtoa 103A                                     _prec 0072  
                                   _nout 006E                                     pad@i 0018  
                                   pad@p 0015                                     fsr0h 0FEA  
                                   fsr1h 0FE2                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   pad@w 001A                                     fsr2l 0FD9  
                ?_lcd_8bit_send_data_pos 001E                                     prodl 0FF3  
                                   start 0000            __end_of_lcd_8bit_send_command 1D70  
                           ___param_bank 0000         lcd_8bit_send_cutsom_char@mem_pos 002A  
                                  ??_abs 0009                     _gpio_pin_write_logic 15E0  
                                  ??_pad 0017                                    ?_main 0001  
                                  ?_dtoa 001C                 ??_application_initialize 001D  
                        __end_of___awdiv 199E            lcd_8bit_send_cutsom_char@_chr 0026  
                        __end_of___awmod 1BC6                          ___awdiv@divisor 0003  
                        ___awdiv@counter 0005                      relay_turn_off@F3054 0076  
                           vfpfcnvrt@fmt 002B                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96              ??_lcd_8bit_send_cutsom_char 002B  
                                  _flags 0074                                    _fputc 1810  
                                  _fputs 210A                 ?_lcd_8bit_send_char_data 000E  
                                  pad@fp 0011                                    _width 0070  
                                  _putch 2206                                    dtoa@d 001E  
                                  dtoa@i 0026                                    dtoa@p 0022  
                                  dtoa@s 0028                                    dtoa@w 0024  
                                  tablat 0FF5           __end_of_lcd_8bit_send_data_pos 20BA  
                                  status 0FD8                          __end_of_sprintf 200C  
         ?_gpio_pin_direction_initialize 0001                          __initialization 1EF0  
                           __end_of_main 1B16                             __end_of_dtoa 11D6  
                  ?_gpio_pin_write_logic 0001                   lcd_8bit_set_cursor@lcd 0017  
                 lcd_8bit_set_cursor@ret 001D                   lcd_8bit_set_cursor@row 0019  
                                 ??_main 0059                                   ??_dtoa 0020  
                          __activetblptr 0002                         led_turn_on@F3053 007B  
                                 ?_fputc 0001                                   ?_fputs 000A  
                       ___awdiv@dividend 0001                                   ?_putch 0001  
                          _tris_register 0063                _lcd_8bit_send_cutsom_char 1DFA  
                           vfprintf@cfmt 003D                     _lcd_8bit_send_enable 20BA  
                                 _lcd1_4 00AA                                   _lcd2_8 00B0  
                              ??___awdiv 0005                                ??___awmod 0005  
                   _lcd_8bit_send_string 1D70                                   _memset 11D6  
                                 clear_0 1F36                                   clear_1 1F42  
                       ___awdiv@quotient 0007                          ___awmod@divisor 0003  
                                 isa$std 0001                                   _number 006D  
                        ___awmod@counter 0005                                   pad@buf 0013  
                                 dtoa@fp 001C                                   _strlen 218E  
                                 fputc@c 0001                                   fputs@c 000E  
                                 fputs@i 000F                             __pdataCOMRAM 0059  
                                 fputs@s 000A                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                                   putch@c 0001  
                       __end_of_vfprintf 1FB0                                ??_sprintf 0045  
                _convert_uint8_to_string 200C                               __accesstop 0080  
                __end_of__initialization 1F48                            ___rparam_used 0001  
             convert_uint8_to_string@ret 0058               convert_uint8_to_string@str 0055  
                  ?_lcd_8bit_send_enable 000B                   ??_gpio_pin_write_logic 0004  
                         __pcstackCOMRAM 0001                             __pidataBANK0 21C4  
                          __end_of_fputc 18DA                            __end_of_fputs 214E  
                  ?_lcd_8bit_send_string 0017                            __end_of_putch 2208  
                                ??_fputc 0005                                  ??_fputs 000E  
                                ??_putch 0001                               __pbssBANK0 0080  
                 _application_initialize 21F4                   lcd_8bit_initialize@lcd 0017  
                 lcd_8bit_initialize@pin 001B                   lcd_8bit_initialize@ret 001C  
                      led_turn_off@F3058 007A                          led_toggle@F3063 0079  
                                ?_memset 0001                                  ?_strlen 0001  
              ??_convert_uint8_to_string 0057                               _btn_values 1001  
                 ??_lcd_8bit_send_enable 000D                                  __Hparam 0000  
                                __Lparam 0000                   ??_lcd_8bit_send_string 001B  
                    _gpio_pin_initialize 1E84                    _lcd_8bit_send_command 1CE4  
                                ___awdiv 18DA                                  ___awmod 1B16  
                              ?_vfprintf 0037                             __psmallconst 1000  
                                __pcinit 1EF0                                  __ramtop 1000  
                                __ptext0 1A5C                                  __ptext1 1D70  
                                __ptext2 1DFA                                  __ptext3 2066  
                                __ptext4 199E                                  __ptext5 1C58  
                                __ptext6 200C                                  __ptext7 1FB0  
                                __ptext8 1F52                                  __ptext9 1358  
        ??_gpio_pin_direction_initialize 0003                         ___awmod@dividend 0001  
                   ?_gpio_pin_initialize 000B                                  _sprintf 1FB0  
                   end_of_initialization 1F48                                  fputc@fp 0003  
                                memset@c 0003                                  memset@k 0009  
                                memset@n 0005                                  memset@s 000B  
                          __Lmediumconst 0000                                  fputs@fp 000C  
                      __end_of_vfpfcnvrt 149C          __end_of_convert_uint8_to_string 2066  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 0031  
                             ??_vfprintf 003D                               _number_txt 007D  
                                strlen@a 0003                                  strlen@s 0001  
      __end_of_lcd_8bit_send_cutsom_char 1E84                    ??_gpio_pin_initialize 000D  
           lcd_8bit_send_data_pos@column 0021                       relay_turn_on@F3049 0077  
                 ?_lcd_8bit_send_command 000E                        relay_toggle@F3059 0075  
        lcd_8bit_send_cutsom_char@column 0029                              vfpfcnvrt@ap 002D  
                            vfpfcnvrt@cp 0035                              vfpfcnvrt@fp 0029  
                          __pidataCOMRAM 21DE                           __end_of_memset 1358  
                         __end_of_strlen 21C4                      start_initialization 1EF0  
                    _lcd_8bit_initialize 170C                 ??_lcd_8bit_send_data_pos 0023  
                            __end_of_abs 218E                              __end_of_pad 1C58  
  __end_of_gpio_pin_direction_initialize 15E0            _gpio_pin_direction_initialize 149C  
                           _lat_register 0059                  ?_application_initialize 0001  
                   ?_lcd_8bit_initialize 0017                  _lcd_8bit_send_char_data 1C58  
                            vfprintf@fmt 0039                              __pdataBANK0 00A0  
                               ??_memset 0007                      _lcd_8bit_set_cursor 199E  
                             memset@dest 0001                 lcd_8bit_send_command@lcd 000E  
               lcd_8bit_send_command@pin 0016                 lcd_8bit_send_command@ret 0015  
                               ??_strlen 0003                              __pbssCOMRAM 006E  
         __end_of_application_initialize 2206             convert_uint8_to_string@value 0057  
              lcd_8bit_send_data_pos@lcd 001E                lcd_8bit_send_data_pos@ret 0023  
              lcd_8bit_send_data_pos@row 0020                     ?_lcd_8bit_set_cursor 0017  
         gpio_pin_write_logic@pin_config 0001                                __pnvBANK0 00BA  
                  ??_lcd_8bit_initialize 0019                                _dtoa$1359 0020  
            lcd_8bit_send_char_data@data 0010                                 ?___awdiv 0001  
                               ?___awmod 0001                gpio_pin_write_logic@logic 0003  
             lcd_8bit_send_cutsom_char@i 002E                              __smallconst 1000  
                               ?_sprintf 003F                    ??_lcd_8bit_set_cursor 001B  
                    __end_of_customChar1 1029                      __end_of_customChar2 1021  
                    __end_of_customChar3 1019                ??_lcd_8bit_send_char_data 0011  
       gpio_pin_direction_initialize@ret 0009                                _vfpfcnvrt 1358  
           lcd_8bit_send_cutsom_char@lcd 0024             lcd_8bit_send_cutsom_char@ret 002D  
           lcd_8bit_send_cutsom_char@row 0028  gpio_pin_direction_initialize@pin_config 0001  
               ?_convert_uint8_to_string 0055                   gpio_pin_initialize@ret 000E  
              lcd_8bit_set_cursor@column 001A                  gpio_pin_write_logic@ret 000A  
                              copy_data0 1F04                                copy_data1 1F24  
                lcd_8bit_send_enable@lcd 000B                  lcd_8bit_send_enable@ret 000D  
                ??_lcd_8bit_send_command 0011                                 __Hrparam 0000  
                             vfprintf@ap 003B                                 __Lrparam 0000  
                             vfprintf@fp 0037                   _lcd_8bit_send_data_pos 2066  
                             ?_vfpfcnvrt 0029          __end_of_lcd_8bit_send_char_data 1CE4  
            __end_of_gpio_pin_initialize 1EF0                       __end_of_btn_values 1011  
                             sprintf@fmt 0041                               sprintf@ret 0045  
             ?_lcd_8bit_send_cutsom_char 0024                              _customChar1 1021  
                            _customChar2 1019                              _customChar3 1011  
             lcd_8bit_send_char_data@lcd 000E               lcd_8bit_send_char_data@pin 0016  
             lcd_8bit_send_char_data@ret 0015                                 __ptext10 103A  
                               __ptext11 1BC6                                 __ptext20 21F4  
                               __ptext12 218E                                 __ptext21 170C  
                               __ptext13 210A                                 __ptext22 1CE4  
                               __ptext14 1810                                 __ptext23 20BA  
                               __ptext15 2206                                 __ptext24 1E84  
                               __ptext16 214E                                 __ptext25 15E0  
                               __ptext17 1B16                                 __ptext26 149C  
                               __ptext18 18DA                                 __ptext19 11D6  
                               isa$xinst 0000                                 _vfprintf 1F52  
             lcd_8bit_send_data_pos@data 0022             __end_of_gpio_pin_write_logic 170C  
                              sprintf@ap 0047                              ??_vfpfcnvrt 002F  
                               sprintf@f 0049                                 sprintf@s 003F  
                lcd_8bit_send_string@lcd 0017                  lcd_8bit_send_string@ret 001B  
                lcd_8bit_send_string@str 0019                            _port_register 00A0  
            __end_of_lcd_8bit_initialize 1810             lcd_8bit_send_command@command 0010  
